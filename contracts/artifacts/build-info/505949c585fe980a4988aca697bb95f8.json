{
	"id": "505949c585fe980a4988aca697bb95f8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SwapUniswap.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.26;\r\n\r\nimport \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\";\r\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\r\n\r\ncontract SwapUniswap {\r\n    ISwapRouter public immutable swapRouter;\r\n\r\n    enum StableType {DAI, USDT, USDC }\r\n\r\n    address public immutable DAI;\r\n    address public immutable USDT;\r\n    address public immutable USDC;\r\n    address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n \r\n\r\n    uint24 public constant poolFee = 3000;\r\n\r\n    constructor(ISwapRouter _swapRouter, address _dai, address _usdt, address _usdc) {\r\n        swapRouter = _swapRouter;\r\n        DAI = _dai;\r\n        USDT = _usdt;\r\n        USDC = _usdc;\r\n    }\r\n\r\n    /// @notice swapInputMultiplePools swaps a fixed amount of DAI for a maximum possible amount of WETH9 through an intermediary pool.\r\n    /// For this example, we will swap DAI to USDC, then USDC to WETH9 to achieve our desired output.\r\n    /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\r\n    /// @param amountIn The amount of DAI to be swapped.\r\n    /// @return amountOut The amount of WETH9 received after the swap.\r\n    function swapExactInputMultihop(\r\n        uint256 amountIn\r\n    ) external returns (uint256 amountOut) {\r\n        TransferHelper.safeTransferFrom(\r\n            DAI,\r\n            msg.sender,\r\n            address(this),\r\n            amountIn\r\n        );\r\n\r\n        TransferHelper.safeApprove(DAI, address(swapRouter), amountIn);\r\n\r\n        ISwapRouter.ExactInputParams memory params = ISwapRouter\r\n            .ExactInputParams({\r\n                path: abi.encodePacked(DAI, poolFee, USDC, poolFee, WETH9),\r\n                recipient: msg.sender,\r\n                deadline: block.timestamp,\r\n                amountIn: amountIn,\r\n                amountOutMinimum: 0\r\n            });\r\n\r\n        amountOut = swapRouter.exactInput(params);\r\n    }\r\n\r\n    /// @notice swapExactOutputMultihop swaps a minimum possible amount of DAI for a fixed amount of WETH through an intermediary pool.\r\n    /// For this example, we want to swap DAI for WETH9 through a USDC pool but we specify the desired amountOut of WETH9. Notice how the path encoding is slightly different in for exact output swaps.\r\n    /// @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\r\n    /// the calling address will need to approve for a slightly higher amount, anticipating some variance.\r\n    /// @param amountOut The desired amount of WETH9.\r\n    /// @param amountInMaximum The maximum amount of DAI willing to be swapped for the specified amountOut of WETH9.\r\n    /// @return amountIn The amountIn of DAI actually spent to receive the desired amountOut.\r\n    function swapExactOutputMultihop(\r\n        uint256 amountOut,\r\n        uint256 amountInMaximum\r\n    ) external returns (uint256 amountIn) {\r\n        TransferHelper.safeTransferFrom(\r\n            DAI,\r\n            msg.sender,\r\n            address(this),\r\n            amountInMaximum\r\n        );\r\n        TransferHelper.safeApprove(DAI, address(swapRouter), amountInMaximum);\r\n\r\n        ISwapRouter.ExactOutputParams memory params = ISwapRouter\r\n            .ExactOutputParams({\r\n                path: abi.encodePacked(WETH9, poolFee, USDC, poolFee, DAI),\r\n                recipient: msg.sender,\r\n                deadline: block.timestamp,\r\n                amountOut: amountOut,\r\n                amountInMaximum: amountInMaximum\r\n            });\r\n\r\n        amountIn = swapRouter.exactOutput(params);\r\n\r\n        if (amountIn < amountInMaximum) {\r\n            TransferHelper.safeApprove(DAI, address(swapRouter), 0);\r\n            TransferHelper.safeTransferFrom(\r\n                DAI,\r\n                address(this),\r\n                msg.sender,\r\n                amountInMaximum - amountIn\r\n            );\r\n        }\r\n    }\r\n}\r\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\nlibrary TransferHelper {\n    /// @notice Transfers tokens from the targeted address to the given destination\n    /// @notice Errors with 'STF' if transfer fails\n    /// @param token The contract address of the token to be transferred\n    /// @param from The originating address from which the tokens will be transferred\n    /// @param to The destination address of the transfer\n    /// @param value The amount to be transferred\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\n    }\n\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Errors with ST if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\n    }\n\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\n    /// @dev Errors with 'SA' if transfer fails\n    /// @param token The contract address of the token to be approved\n    /// @param to The target of the approval\n    /// @param value The amount of the given token the target will be allowed to spend\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\n    }\n\n    /// @notice Transfers ETH to the recipient address\n    /// @dev Fails with `STE`\n    /// @param to The destination of the transfer\n    /// @param value The value to be transferred\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'STE');\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cafe8c5c3d58302551867c1bf162f0055aec99ac03bebaa27e50a78387ea9b9664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cafe8c5c3d58302551867c1bf162f0055aec99ac03bebaa27e50a78387ea9b9664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA INVALID DUP13 TLOAD RETURNDATASIZE PC ADDRESS 0x25 MLOAD DUP7 PUSH29 0x1BF162F0055AEC99AC03BEBAA27E50A78387EA9B9664736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "129:2408:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cafe8c5c3d58302551867c1bf162f0055aec99ac03bebaa27e50a78387ea9b9664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA INVALID DUP13 TLOAD RETURNDATASIZE PC ADDRESS 0x25 MLOAD DUP7 PUSH29 0x1BF162F0055AEC99AC03BEBAA27E50A78387EA9B9664736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "129:2408:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cafe8c5c3d58302551867c1bf162f0055aec99ac03bebaa27e50a78387ea9b9664736f6c634300081a0033",
									".code": [
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/SwapUniswap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SwapUniswap.sol": {
				"SwapUniswap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "_swapRouter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_dai",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdt",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdc",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "DAI",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDC",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDT",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolFee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "swapExactInputMultihop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMaximum",
									"type": "uint256"
								}
							],
							"name": "swapExactOutputMultihop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"swapExactInputMultihop(uint256)": {
								"details": "The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.",
								"params": {
									"amountIn": "The amount of DAI to be swapped."
								},
								"returns": {
									"amountOut": "The amount of WETH9 received after the swap."
								}
							},
							"swapExactOutputMultihop(uint256,uint256)": {
								"details": "The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable, the calling address will need to approve for a slightly higher amount, anticipating some variance.",
								"params": {
									"amountInMaximum": "The maximum amount of DAI willing to be swapped for the specified amountOut of WETH9.",
									"amountOut": "The desired amount of WETH9."
								},
								"returns": {
									"amountIn": "The amountIn of DAI actually spent to receive the desired amountOut."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SwapUniswap.sol\":205:4001  contract SwapUniswap {... */\n  mstore(0x40, 0x0100)\n    /* \"contracts/SwapUniswap.sol\":562:753  constructor(ISwapRouter _swapRouter, address _dai, address _usdt, address _usdc) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/SwapUniswap.sol\":667:678  _swapRouter */\n  dup4\n    /* \"contracts/SwapUniswap.sol\":654:678  swapRouter = _swapRouter */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/SwapUniswap.sol\":695:699  _dai */\n  dup3\n    /* \"contracts/SwapUniswap.sol\":689:699  DAI = _dai */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/SwapUniswap.sol\":717:722  _usdt */\n  dup2\n    /* \"contracts/SwapUniswap.sol\":710:722  USDT = _usdt */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/SwapUniswap.sol\":740:745  _usdc */\n  dup1\n    /* \"contracts/SwapUniswap.sol\":733:745  USDC = _usdc */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xe0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/SwapUniswap.sol\":562:753  constructor(ISwapRouter _swapRouter, address _dai, address _usdt, address _usdc) {... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/SwapUniswap.sol\":205:4001  contract SwapUniswap {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_23\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:683   */\ntag_12:\n    /* \"#utility.yul\":624:631   */\n  0x00\n    /* \"#utility.yul\":653:677   */\n  tag_25\n    /* \"#utility.yul\":671:676   */\n  dup3\n    /* \"#utility.yul\":653:677   */\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":642:677   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:683   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":689:849   */\ntag_13:\n    /* \"#utility.yul\":781:824   */\n  tag_27\n    /* \"#utility.yul\":818:823   */\n  dup2\n    /* \"#utility.yul\":781:824   */\n  tag_12\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":774:779   */\n  dup2\n    /* \"#utility.yul\":771:825   */\n  eq\n    /* \"#utility.yul\":761:843   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":839:840   */\n  0x00\n    /* \"#utility.yul\":836:837   */\n  dup1\n    /* \"#utility.yul\":829:841   */\n  revert\n    /* \"#utility.yul\":761:843   */\ntag_28:\n    /* \"#utility.yul\":689:849   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":855:1036   */\ntag_14:\n    /* \"#utility.yul\":931:936   */\n  0x00\n    /* \"#utility.yul\":962:968   */\n  dup2\n    /* \"#utility.yul\":956:969   */\n  mload\n    /* \"#utility.yul\":947:969   */\n  swap1\n  pop\n    /* \"#utility.yul\":978:1030   */\n  tag_30\n    /* \"#utility.yul\":1024:1029   */\n  dup2\n    /* \"#utility.yul\":978:1030   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":855:1036   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1042:1164   */\ntag_15:\n    /* \"#utility.yul\":1115:1139   */\n  tag_32\n    /* \"#utility.yul\":1133:1138   */\n  dup2\n    /* \"#utility.yul\":1115:1139   */\n  tag_11\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1108:1113   */\n  dup2\n    /* \"#utility.yul\":1105:1140   */\n  eq\n    /* \"#utility.yul\":1095:1158   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1154:1155   */\n  0x00\n    /* \"#utility.yul\":1151:1152   */\n  dup1\n    /* \"#utility.yul\":1144:1156   */\n  revert\n    /* \"#utility.yul\":1095:1158   */\ntag_33:\n    /* \"#utility.yul\":1042:1164   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1170:1313   */\ntag_16:\n    /* \"#utility.yul\":1227:1232   */\n  0x00\n    /* \"#utility.yul\":1258:1264   */\n  dup2\n    /* \"#utility.yul\":1252:1265   */\n  mload\n    /* \"#utility.yul\":1243:1265   */\n  swap1\n  pop\n    /* \"#utility.yul\":1274:1307   */\n  tag_35\n    /* \"#utility.yul\":1301:1306   */\n  dup2\n    /* \"#utility.yul\":1274:1307   */\n  tag_15\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1170:1313   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1319:2177   */\ntag_3:\n    /* \"#utility.yul\":1435:1441   */\n  0x00\n    /* \"#utility.yul\":1443:1449   */\n  dup1\n    /* \"#utility.yul\":1451:1457   */\n  0x00\n    /* \"#utility.yul\":1459:1465   */\n  dup1\n    /* \"#utility.yul\":1508:1511   */\n  0x80\n    /* \"#utility.yul\":1496:1505   */\n  dup6\n    /* \"#utility.yul\":1487:1494   */\n  dup8\n    /* \"#utility.yul\":1483:1506   */\n  sub\n    /* \"#utility.yul\":1479:1512   */\n  slt\n    /* \"#utility.yul\":1476:1596   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1515:1594   */\n  tag_38\n  tag_8\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1476:1596   */\ntag_37:\n    /* \"#utility.yul\":1635:1636   */\n  0x00\n    /* \"#utility.yul\":1660:1743   */\n  tag_39\n    /* \"#utility.yul\":1735:1742   */\n  dup8\n    /* \"#utility.yul\":1726:1732   */\n  dup3\n    /* \"#utility.yul\":1715:1724   */\n  dup9\n    /* \"#utility.yul\":1711:1733   */\n  add\n    /* \"#utility.yul\":1660:1743   */\n  tag_14\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1650:1743   */\n  swap5\n  pop\n    /* \"#utility.yul\":1606:1753   */\n  pop\n    /* \"#utility.yul\":1792:1794   */\n  0x20\n    /* \"#utility.yul\":1818:1882   */\n  tag_40\n    /* \"#utility.yul\":1874:1881   */\n  dup8\n    /* \"#utility.yul\":1865:1871   */\n  dup3\n    /* \"#utility.yul\":1854:1863   */\n  dup9\n    /* \"#utility.yul\":1850:1872   */\n  add\n    /* \"#utility.yul\":1818:1882   */\n  tag_16\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1808:1882   */\n  swap4\n  pop\n    /* \"#utility.yul\":1763:1892   */\n  pop\n    /* \"#utility.yul\":1931:1933   */\n  0x40\n    /* \"#utility.yul\":1957:2021   */\n  tag_41\n    /* \"#utility.yul\":2013:2020   */\n  dup8\n    /* \"#utility.yul\":2004:2010   */\n  dup3\n    /* \"#utility.yul\":1993:2002   */\n  dup9\n    /* \"#utility.yul\":1989:2011   */\n  add\n    /* \"#utility.yul\":1957:2021   */\n  tag_16\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1947:2021   */\n  swap3\n  pop\n    /* \"#utility.yul\":1902:2031   */\n  pop\n    /* \"#utility.yul\":2070:2072   */\n  0x60\n    /* \"#utility.yul\":2096:2160   */\n  tag_42\n    /* \"#utility.yul\":2152:2159   */\n  dup8\n    /* \"#utility.yul\":2143:2149   */\n  dup3\n    /* \"#utility.yul\":2132:2141   */\n  dup9\n    /* \"#utility.yul\":2128:2150   */\n  add\n    /* \"#utility.yul\":2096:2160   */\n  tag_16\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":2086:2160   */\n  swap2\n  pop\n    /* \"#utility.yul\":2041:2170   */\n  pop\n    /* \"#utility.yul\":1319:2177   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"contracts/SwapUniswap.sol\":205:4001  contract SwapUniswap {... */\ntag_6:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x571dd8aeb083ba31171345d7ed78dcdb2e0ef1ded5d63247b288b600c1eb6c39\")\n  0x00\n  assignImmutable(\"0x278a4539603a9bc8a72d7a368fe14ebf88ae5f0870def96c5eca03adb0b084ba\")\n  0x00\n  assignImmutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n  0x00\n  assignImmutable(\"0x747491254fc29a61c3f0f8ca603d468b83f8d0af60d3a86e8b935f39643493bc\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/SwapUniswap.sol\":205:4001  contract SwapUniswap {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc31c9c07\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xc54e44eb\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe0bab4c4\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xedd83557\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x089fe6aa\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3b85cf6a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4aa4a4fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x89a30271\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SwapUniswap.sol\":516:553  uint24 public constant poolFee = 3000 */\n    tag_3:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":2879:3998  function swapExactOutputMultihop(... */\n    tag_4:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":430:504  address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n    tag_5:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":394:423  address public immutable USDC */\n    tag_6:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":233:272  ISwapRouter public immutable swapRouter */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":358:387  address public immutable USDT */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":323:351  address public immutable DAI */\n    tag_9:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":1268:2008  function swapExactInputMultihop(... */\n    tag_10:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":516:553  uint24 public constant poolFee = 3000 */\n    tag_13:\n        /* \"contracts/SwapUniswap.sol\":549:553  3000 */\n      0x0bb8\n        /* \"contracts/SwapUniswap.sol\":516:553  uint24 public constant poolFee = 3000 */\n      dup2\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":2879:3998  function swapExactOutputMultihop(... */\n    tag_19:\n        /* \"contracts/SwapUniswap.sol\":2999:3015  uint256 amountIn */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":3028:3171  TransferHelper.safeTransferFrom(... */\n      tag_45\n        /* \"contracts/SwapUniswap.sol\":3074:3077  DAI */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/SwapUniswap.sol\":3092:3102  msg.sender */\n      caller\n        /* \"contracts/SwapUniswap.sol\":3125:3129  this */\n      address\n        /* \"contracts/SwapUniswap.sol\":3145:3160  amountInMaximum */\n      dup6\n        /* \"contracts/SwapUniswap.sol\":3028:3059  TransferHelper.safeTransferFrom */\n      tag_46\n        /* \"contracts/SwapUniswap.sol\":3028:3171  TransferHelper.safeTransferFrom(... */\n      jump\t// in\n    tag_45:\n        /* \"contracts/SwapUniswap.sol\":3182:3251  TransferHelper.safeApprove(DAI, address(swapRouter), amountInMaximum) */\n      tag_47\n        /* \"contracts/SwapUniswap.sol\":3209:3212  DAI */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/SwapUniswap.sol\":3222:3232  swapRouter */\n      immutable(\"0x747491254fc29a61c3f0f8ca603d468b83f8d0af60d3a86e8b935f39643493bc\")\n        /* \"contracts/SwapUniswap.sol\":3235:3250  amountInMaximum */\n      dup5\n        /* \"contracts/SwapUniswap.sol\":3182:3208  TransferHelper.safeApprove */\n      tag_48\n        /* \"contracts/SwapUniswap.sol\":3182:3251  TransferHelper.safeApprove(DAI, address(swapRouter), amountInMaximum) */\n      jump\t// in\n    tag_47:\n        /* \"contracts/SwapUniswap.sol\":3264:3307  ISwapRouter.ExactOutputParams memory params */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":3310:3621  ISwapRouter... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/SwapUniswap.sol\":462:504  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"contracts/SwapUniswap.sol\":549:553  3000 */\n      0x0bb8\n        /* \"contracts/SwapUniswap.sol\":3412:3416  USDC */\n      immutable(\"0x571dd8aeb083ba31171345d7ed78dcdb2e0ef1ded5d63247b288b600c1eb6c39\")\n        /* \"contracts/SwapUniswap.sol\":549:553  3000 */\n      0x0bb8\n        /* \"contracts/SwapUniswap.sol\":3427:3430  DAI */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/SwapUniswap.sol\":3379:3431  abi.encodePacked(WETH9, poolFee, USDC, poolFee, DAI) */\n      add(0x20, mload(0x40))\n      tag_49\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/SwapUniswap.sol\":3310:3621  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":3461:3471  msg.sender */\n      caller\n        /* \"contracts/SwapUniswap.sol\":3310:3621  ISwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":3500:3515  block.timestamp */\n      timestamp\n        /* \"contracts/SwapUniswap.sol\":3310:3621  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":3545:3554  amountOut */\n      dup6\n        /* \"contracts/SwapUniswap.sol\":3310:3621  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":3590:3605  amountInMaximum */\n      dup5\n        /* \"contracts/SwapUniswap.sol\":3310:3621  ISwapRouter... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/SwapUniswap.sol\":3264:3621  ISwapRouter.ExactOutputParams memory params = ISwapRouter... */\n      swap1\n      pop\n        /* \"contracts/SwapUniswap.sol\":3645:3655  swapRouter */\n      immutable(\"0x747491254fc29a61c3f0f8ca603d468b83f8d0af60d3a86e8b935f39643493bc\")\n        /* \"contracts/SwapUniswap.sol\":3645:3667  swapRouter.exactOutput */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf28c0498\n        /* \"contracts/SwapUniswap.sol\":3668:3674  params */\n      dup3\n        /* \"contracts/SwapUniswap.sol\":3645:3675  swapRouter.exactOutput(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_54:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"contracts/SwapUniswap.sol\":3634:3675  amountIn = swapRouter.exactOutput(params) */\n      swap2\n      pop\n        /* \"contracts/SwapUniswap.sol\":3703:3718  amountInMaximum */\n      dup3\n        /* \"contracts/SwapUniswap.sol\":3692:3700  amountIn */\n      dup3\n        /* \"contracts/SwapUniswap.sol\":3692:3718  amountIn < amountInMaximum */\n      lt\n        /* \"contracts/SwapUniswap.sol\":3688:3991  if (amountIn < amountInMaximum) {... */\n      iszero\n      tag_57\n      jumpi\n        /* \"contracts/SwapUniswap.sol\":3735:3790  TransferHelper.safeApprove(DAI, address(swapRouter), 0) */\n      tag_58\n        /* \"contracts/SwapUniswap.sol\":3762:3765  DAI */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/SwapUniswap.sol\":3775:3785  swapRouter */\n      immutable(\"0x747491254fc29a61c3f0f8ca603d468b83f8d0af60d3a86e8b935f39643493bc\")\n        /* \"contracts/SwapUniswap.sol\":3788:3789  0 */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":3735:3761  TransferHelper.safeApprove */\n      tag_48\n        /* \"contracts/SwapUniswap.sol\":3735:3790  TransferHelper.safeApprove(DAI, address(swapRouter), 0) */\n      jump\t// in\n    tag_58:\n        /* \"contracts/SwapUniswap.sol\":3805:3979  TransferHelper.safeTransferFrom(... */\n      tag_59\n        /* \"contracts/SwapUniswap.sol\":3855:3858  DAI */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/SwapUniswap.sol\":3885:3889  this */\n      address\n        /* \"contracts/SwapUniswap.sol\":3909:3919  msg.sender */\n      caller\n        /* \"contracts/SwapUniswap.sol\":3956:3964  amountIn */\n      dup6\n        /* \"contracts/SwapUniswap.sol\":3938:3953  amountInMaximum */\n      dup8\n        /* \"contracts/SwapUniswap.sol\":3938:3964  amountInMaximum - amountIn */\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"contracts/SwapUniswap.sol\":3805:3836  TransferHelper.safeTransferFrom */\n      tag_46\n        /* \"contracts/SwapUniswap.sol\":3805:3979  TransferHelper.safeTransferFrom(... */\n      jump\t// in\n    tag_59:\n        /* \"contracts/SwapUniswap.sol\":3688:3991  if (amountIn < amountInMaximum) {... */\n    tag_57:\n        /* \"contracts/SwapUniswap.sol\":3017:3998  {... */\n      pop\n        /* \"contracts/SwapUniswap.sol\":2879:3998  function swapExactOutputMultihop(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":430:504  address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n    tag_23:\n        /* \"contracts/SwapUniswap.sol\":462:504  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"contracts/SwapUniswap.sol\":430:504  address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      dup2\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":394:423  address public immutable USDC */\n    tag_27:\n      immutable(\"0x571dd8aeb083ba31171345d7ed78dcdb2e0ef1ded5d63247b288b600c1eb6c39\")\n      dup2\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":233:272  ISwapRouter public immutable swapRouter */\n    tag_30:\n      immutable(\"0x747491254fc29a61c3f0f8ca603d468b83f8d0af60d3a86e8b935f39643493bc\")\n      dup2\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":358:387  address public immutable USDT */\n    tag_34:\n      immutable(\"0x278a4539603a9bc8a72d7a368fe14ebf88ae5f0870def96c5eca03adb0b084ba\")\n      dup2\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":323:351  address public immutable DAI */\n    tag_37:\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n      dup2\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":1268:2008  function swapExactInputMultihop(... */\n    tag_42:\n        /* \"contracts/SwapUniswap.sol\":1352:1369  uint256 amountOut */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":1382:1518  TransferHelper.safeTransferFrom(... */\n      tag_63\n        /* \"contracts/SwapUniswap.sol\":1428:1431  DAI */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/SwapUniswap.sol\":1446:1456  msg.sender */\n      caller\n        /* \"contracts/SwapUniswap.sol\":1479:1483  this */\n      address\n        /* \"contracts/SwapUniswap.sol\":1499:1507  amountIn */\n      dup6\n        /* \"contracts/SwapUniswap.sol\":1382:1413  TransferHelper.safeTransferFrom */\n      tag_46\n        /* \"contracts/SwapUniswap.sol\":1382:1518  TransferHelper.safeTransferFrom(... */\n      jump\t// in\n    tag_63:\n        /* \"contracts/SwapUniswap.sol\":1531:1593  TransferHelper.safeApprove(DAI, address(swapRouter), amountIn) */\n      tag_64\n        /* \"contracts/SwapUniswap.sol\":1558:1561  DAI */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/SwapUniswap.sol\":1571:1581  swapRouter */\n      immutable(\"0x747491254fc29a61c3f0f8ca603d468b83f8d0af60d3a86e8b935f39643493bc\")\n        /* \"contracts/SwapUniswap.sol\":1584:1592  amountIn */\n      dup5\n        /* \"contracts/SwapUniswap.sol\":1531:1557  TransferHelper.safeApprove */\n      tag_48\n        /* \"contracts/SwapUniswap.sol\":1531:1593  TransferHelper.safeApprove(DAI, address(swapRouter), amountIn) */\n      jump\t// in\n    tag_64:\n        /* \"contracts/SwapUniswap.sol\":1606:1648  ISwapRouter.ExactInputParams memory params */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":1651:1946  ISwapRouter... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/SwapUniswap.sol\":1736:1739  DAI */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/SwapUniswap.sol\":549:553  3000 */\n      0x0bb8\n        /* \"contracts/SwapUniswap.sol\":1750:1754  USDC */\n      immutable(\"0x571dd8aeb083ba31171345d7ed78dcdb2e0ef1ded5d63247b288b600c1eb6c39\")\n        /* \"contracts/SwapUniswap.sol\":549:553  3000 */\n      0x0bb8\n        /* \"contracts/SwapUniswap.sol\":462:504  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"contracts/SwapUniswap.sol\":1719:1771  abi.encodePacked(DAI, poolFee, USDC, poolFee, WETH9) */\n      add(0x20, mload(0x40))\n      tag_65\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/SwapUniswap.sol\":1651:1946  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":1801:1811  msg.sender */\n      caller\n        /* \"contracts/SwapUniswap.sol\":1651:1946  ISwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":1840:1855  block.timestamp */\n      timestamp\n        /* \"contracts/SwapUniswap.sol\":1651:1946  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":1884:1892  amountIn */\n      dup5\n        /* \"contracts/SwapUniswap.sol\":1651:1946  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":1929:1930  0 */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":1651:1946  ISwapRouter... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/SwapUniswap.sol\":1606:1946  ISwapRouter.ExactInputParams memory params = ISwapRouter... */\n      swap1\n      pop\n        /* \"contracts/SwapUniswap.sol\":1971:1981  swapRouter */\n      immutable(\"0x747491254fc29a61c3f0f8ca603d468b83f8d0af60d3a86e8b935f39643493bc\")\n        /* \"contracts/SwapUniswap.sol\":1971:1992  swapRouter.exactInput */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc04b8d59\n        /* \"contracts/SwapUniswap.sol\":1993:1999  params */\n      dup3\n        /* \"contracts/SwapUniswap.sol\":1971:2000  swapRouter.exactInput(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_69\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_70:\n        /* \"contracts/SwapUniswap.sol\":1959:2000  amountOut = swapRouter.exactInput(params) */\n      swap2\n      pop\n        /* \"contracts/SwapUniswap.sol\":1371:2008  {... */\n      pop\n        /* \"contracts/SwapUniswap.sol\":1268:2008  function swapExactInputMultihop(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n    tag_46:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":701:713  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":715:732  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:753  token */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:758  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":782:810  IERC20.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":812:816  from */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":818:820  to */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":822:827  value */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_72\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:829  token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value)) */\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_78\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_77)\n    tag_78:\n      0x60\n      swap2\n      pop\n    tag_77:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":700:829  (bool success, bytes memory data) =... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:854  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:904  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_79\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":874:875  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:863  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:870  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:875  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:903  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_80\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":890:894  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":879:903  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:903  data.length == 0 || abi.decode(data, (bool)) */\n    tag_80:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:904  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_79:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":839:912  require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF') */\n      tag_83\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_83:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":690:919  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n    tag_48:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1986:1998  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2000:2017  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2026  token */\n      dup5\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2031  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2055:2078  IERC20.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2080:2082  to */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2084:2089  value */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_87\n      swap3\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2091  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_89:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_92\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_91)\n    tag_92:\n      0x60\n      swap2\n      pop\n    tag_91:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1985:2091  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2116  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_93\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2136:2137  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2125  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2132  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2137  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_94\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2152:2156  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2141:2165  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_95:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n    tag_94:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_93:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2101:2173  require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA') */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1975:2180  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:98   */\n    tag_99:\n        /* \"#utility.yul\":43:50   */\n      0x00\n        /* \"#utility.yul\":83:91   */\n      0xffffff\n        /* \"#utility.yul\":76:81   */\n      dup3\n        /* \"#utility.yul\":72:92   */\n      and\n        /* \"#utility.yul\":61:92   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:98   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":104:219   */\n    tag_100:\n        /* \"#utility.yul\":189:212   */\n      tag_147\n        /* \"#utility.yul\":206:211   */\n      dup2\n        /* \"#utility.yul\":189:212   */\n      tag_99\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":184:187   */\n      dup3\n        /* \"#utility.yul\":177:213   */\n      mstore\n        /* \"#utility.yul\":104:219   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":225:443   */\n    tag_15:\n        /* \"#utility.yul\":316:320   */\n      0x00\n        /* \"#utility.yul\":354:356   */\n      0x20\n        /* \"#utility.yul\":343:352   */\n      dup3\n        /* \"#utility.yul\":339:357   */\n      add\n        /* \"#utility.yul\":331:357   */\n      swap1\n      pop\n        /* \"#utility.yul\":367:436   */\n      tag_149\n        /* \"#utility.yul\":433:434   */\n      0x00\n        /* \"#utility.yul\":422:431   */\n      dup4\n        /* \"#utility.yul\":418:435   */\n      add\n        /* \"#utility.yul\":409:415   */\n      dup5\n        /* \"#utility.yul\":367:436   */\n      tag_100\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":225:443   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":530:647   */\n    tag_102:\n        /* \"#utility.yul\":639:640   */\n      0x00\n        /* \"#utility.yul\":636:637   */\n      dup1\n        /* \"#utility.yul\":629:641   */\n      revert\n        /* \"#utility.yul\":776:853   */\n    tag_104:\n        /* \"#utility.yul\":813:820   */\n      0x00\n        /* \"#utility.yul\":842:847   */\n      dup2\n        /* \"#utility.yul\":831:847   */\n      swap1\n      pop\n        /* \"#utility.yul\":776:853   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":859:981   */\n    tag_105:\n        /* \"#utility.yul\":932:956   */\n      tag_155\n        /* \"#utility.yul\":950:955   */\n      dup2\n        /* \"#utility.yul\":932:956   */\n      tag_104\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":925:930   */\n      dup2\n        /* \"#utility.yul\":922:957   */\n      eq\n        /* \"#utility.yul\":912:975   */\n      tag_156\n      jumpi\n        /* \"#utility.yul\":971:972   */\n      0x00\n        /* \"#utility.yul\":968:969   */\n      dup1\n        /* \"#utility.yul\":961:973   */\n      revert\n        /* \"#utility.yul\":912:975   */\n    tag_156:\n        /* \"#utility.yul\":859:981   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":987:1126   */\n    tag_106:\n        /* \"#utility.yul\":1033:1038   */\n      0x00\n        /* \"#utility.yul\":1071:1077   */\n      dup2\n        /* \"#utility.yul\":1058:1078   */\n      calldataload\n        /* \"#utility.yul\":1049:1078   */\n      swap1\n      pop\n        /* \"#utility.yul\":1087:1120   */\n      tag_158\n        /* \"#utility.yul\":1114:1119   */\n      dup2\n        /* \"#utility.yul\":1087:1120   */\n      tag_105\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":987:1126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1132:1606   */\n    tag_18:\n        /* \"#utility.yul\":1200:1206   */\n      0x00\n        /* \"#utility.yul\":1208:1214   */\n      dup1\n        /* \"#utility.yul\":1257:1259   */\n      0x40\n        /* \"#utility.yul\":1245:1254   */\n      dup4\n        /* \"#utility.yul\":1236:1243   */\n      dup6\n        /* \"#utility.yul\":1232:1255   */\n      sub\n        /* \"#utility.yul\":1228:1260   */\n      slt\n        /* \"#utility.yul\":1225:1344   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":1263:1342   */\n      tag_161\n      tag_102\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1225:1344   */\n    tag_160:\n        /* \"#utility.yul\":1383:1384   */\n      0x00\n        /* \"#utility.yul\":1408:1461   */\n      tag_162\n        /* \"#utility.yul\":1453:1460   */\n      dup6\n        /* \"#utility.yul\":1444:1450   */\n      dup3\n        /* \"#utility.yul\":1433:1442   */\n      dup7\n        /* \"#utility.yul\":1429:1451   */\n      add\n        /* \"#utility.yul\":1408:1461   */\n      tag_106\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":1398:1461   */\n      swap3\n      pop\n        /* \"#utility.yul\":1354:1471   */\n      pop\n        /* \"#utility.yul\":1510:1512   */\n      0x20\n        /* \"#utility.yul\":1536:1589   */\n      tag_163\n        /* \"#utility.yul\":1581:1588   */\n      dup6\n        /* \"#utility.yul\":1572:1578   */\n      dup3\n        /* \"#utility.yul\":1561:1570   */\n      dup7\n        /* \"#utility.yul\":1557:1579   */\n      add\n        /* \"#utility.yul\":1536:1589   */\n      tag_106\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1526:1589   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1599   */\n      pop\n        /* \"#utility.yul\":1132:1606   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1612:1730   */\n    tag_107:\n        /* \"#utility.yul\":1699:1723   */\n      tag_165\n        /* \"#utility.yul\":1717:1722   */\n      dup2\n        /* \"#utility.yul\":1699:1723   */\n      tag_104\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1694:1697   */\n      dup3\n        /* \"#utility.yul\":1687:1724   */\n      mstore\n        /* \"#utility.yul\":1612:1730   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1736:1958   */\n    tag_21:\n        /* \"#utility.yul\":1829:1833   */\n      0x00\n        /* \"#utility.yul\":1867:1869   */\n      0x20\n        /* \"#utility.yul\":1856:1865   */\n      dup3\n        /* \"#utility.yul\":1852:1870   */\n      add\n        /* \"#utility.yul\":1844:1870   */\n      swap1\n      pop\n        /* \"#utility.yul\":1880:1951   */\n      tag_167\n        /* \"#utility.yul\":1948:1949   */\n      0x00\n        /* \"#utility.yul\":1937:1946   */\n      dup4\n        /* \"#utility.yul\":1933:1950   */\n      add\n        /* \"#utility.yul\":1924:1930   */\n      dup5\n        /* \"#utility.yul\":1880:1951   */\n      tag_107\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1736:1958   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1964:2090   */\n    tag_108:\n        /* \"#utility.yul\":2001:2008   */\n      0x00\n        /* \"#utility.yul\":2041:2083   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2034:2039   */\n      dup3\n        /* \"#utility.yul\":2030:2084   */\n      and\n        /* \"#utility.yul\":2019:2084   */\n      swap1\n      pop\n        /* \"#utility.yul\":1964:2090   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2096:2192   */\n    tag_109:\n        /* \"#utility.yul\":2133:2140   */\n      0x00\n        /* \"#utility.yul\":2162:2186   */\n      tag_170\n        /* \"#utility.yul\":2180:2185   */\n      dup3\n        /* \"#utility.yul\":2162:2186   */\n      tag_108\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":2151:2186   */\n      swap1\n      pop\n        /* \"#utility.yul\":2096:2192   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2198:2316   */\n    tag_110:\n        /* \"#utility.yul\":2285:2309   */\n      tag_172\n        /* \"#utility.yul\":2303:2308   */\n      dup2\n        /* \"#utility.yul\":2285:2309   */\n      tag_109\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2280:2283   */\n      dup3\n        /* \"#utility.yul\":2273:2310   */\n      mstore\n        /* \"#utility.yul\":2198:2316   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2322:2544   */\n    tag_25:\n        /* \"#utility.yul\":2415:2419   */\n      0x00\n        /* \"#utility.yul\":2453:2455   */\n      0x20\n        /* \"#utility.yul\":2442:2451   */\n      dup3\n        /* \"#utility.yul\":2438:2456   */\n      add\n        /* \"#utility.yul\":2430:2456   */\n      swap1\n      pop\n        /* \"#utility.yul\":2466:2537   */\n      tag_174\n        /* \"#utility.yul\":2534:2535   */\n      0x00\n        /* \"#utility.yul\":2523:2532   */\n      dup4\n        /* \"#utility.yul\":2519:2536   */\n      add\n        /* \"#utility.yul\":2510:2516   */\n      dup5\n        /* \"#utility.yul\":2466:2537   */\n      tag_110\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":2322:2544   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2550:2610   */\n    tag_111:\n        /* \"#utility.yul\":2578:2581   */\n      0x00\n        /* \"#utility.yul\":2599:2604   */\n      dup2\n        /* \"#utility.yul\":2592:2604   */\n      swap1\n      pop\n        /* \"#utility.yul\":2550:2610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2616:2758   */\n    tag_112:\n        /* \"#utility.yul\":2666:2675   */\n      0x00\n        /* \"#utility.yul\":2699:2752   */\n      tag_177\n        /* \"#utility.yul\":2717:2751   */\n      tag_178\n        /* \"#utility.yul\":2726:2750   */\n      tag_179\n        /* \"#utility.yul\":2744:2749   */\n      dup5\n        /* \"#utility.yul\":2726:2750   */\n      tag_108\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2717:2751   */\n      tag_111\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2699:2752   */\n      tag_108\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":2686:2752   */\n      swap1\n      pop\n        /* \"#utility.yul\":2616:2758   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2764:2890   */\n    tag_113:\n        /* \"#utility.yul\":2814:2823   */\n      0x00\n        /* \"#utility.yul\":2847:2884   */\n      tag_181\n        /* \"#utility.yul\":2878:2883   */\n      dup3\n        /* \"#utility.yul\":2847:2884   */\n      tag_112\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":2834:2884   */\n      swap1\n      pop\n        /* \"#utility.yul\":2764:2890   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2896:3041   */\n    tag_114:\n        /* \"#utility.yul\":2965:2974   */\n      0x00\n        /* \"#utility.yul\":2998:3035   */\n      tag_183\n        /* \"#utility.yul\":3029:3034   */\n      dup3\n        /* \"#utility.yul\":2998:3035   */\n      tag_113\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":2985:3035   */\n      swap1\n      pop\n        /* \"#utility.yul\":2896:3041   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3047:3216   */\n    tag_115:\n        /* \"#utility.yul\":3153:3209   */\n      tag_185\n        /* \"#utility.yul\":3203:3208   */\n      dup2\n        /* \"#utility.yul\":3153:3209   */\n      tag_114\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":3148:3151   */\n      dup3\n        /* \"#utility.yul\":3141:3210   */\n      mstore\n        /* \"#utility.yul\":3047:3216   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3222:3482   */\n    tag_32:\n        /* \"#utility.yul\":3334:3338   */\n      0x00\n        /* \"#utility.yul\":3372:3374   */\n      0x20\n        /* \"#utility.yul\":3361:3370   */\n      dup3\n        /* \"#utility.yul\":3357:3375   */\n      add\n        /* \"#utility.yul\":3349:3375   */\n      swap1\n      pop\n        /* \"#utility.yul\":3385:3475   */\n      tag_187\n        /* \"#utility.yul\":3472:3473   */\n      0x00\n        /* \"#utility.yul\":3461:3470   */\n      dup4\n        /* \"#utility.yul\":3457:3474   */\n      add\n        /* \"#utility.yul\":3448:3454   */\n      dup5\n        /* \"#utility.yul\":3385:3475   */\n      tag_115\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":3222:3482   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3488:3817   */\n    tag_41:\n        /* \"#utility.yul\":3547:3553   */\n      0x00\n        /* \"#utility.yul\":3596:3598   */\n      0x20\n        /* \"#utility.yul\":3584:3593   */\n      dup3\n        /* \"#utility.yul\":3575:3582   */\n      dup5\n        /* \"#utility.yul\":3571:3594   */\n      sub\n        /* \"#utility.yul\":3567:3599   */\n      slt\n        /* \"#utility.yul\":3564:3683   */\n      iszero\n      tag_189\n      jumpi\n        /* \"#utility.yul\":3602:3681   */\n      tag_190\n      tag_102\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":3564:3683   */\n    tag_189:\n        /* \"#utility.yul\":3722:3723   */\n      0x00\n        /* \"#utility.yul\":3747:3800   */\n      tag_191\n        /* \"#utility.yul\":3792:3799   */\n      dup5\n        /* \"#utility.yul\":3783:3789   */\n      dup3\n        /* \"#utility.yul\":3772:3781   */\n      dup6\n        /* \"#utility.yul\":3768:3790   */\n      add\n        /* \"#utility.yul\":3747:3800   */\n      tag_106\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3737:3800   */\n      swap2\n      pop\n        /* \"#utility.yul\":3693:3810   */\n      pop\n        /* \"#utility.yul\":3488:3817   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3823:3917   */\n    tag_116:\n        /* \"#utility.yul\":3856:3864   */\n      0x00\n        /* \"#utility.yul\":3904:3909   */\n      dup2\n        /* \"#utility.yul\":3900:3902   */\n      0x60\n        /* \"#utility.yul\":3896:3910   */\n      shl\n        /* \"#utility.yul\":3875:3910   */\n      swap1\n      pop\n        /* \"#utility.yul\":3823:3917   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3923:4017   */\n    tag_117:\n        /* \"#utility.yul\":3962:3969   */\n      0x00\n        /* \"#utility.yul\":3991:4011   */\n      tag_194\n        /* \"#utility.yul\":4005:4010   */\n      dup3\n        /* \"#utility.yul\":3991:4011   */\n      tag_116\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":3980:4011   */\n      swap1\n      pop\n        /* \"#utility.yul\":3923:4017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4023:4123   */\n    tag_118:\n        /* \"#utility.yul\":4062:4069   */\n      0x00\n        /* \"#utility.yul\":4091:4117   */\n      tag_196\n        /* \"#utility.yul\":4111:4116   */\n      dup3\n        /* \"#utility.yul\":4091:4117   */\n      tag_117\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":4080:4117   */\n      swap1\n      pop\n        /* \"#utility.yul\":4023:4123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4129:4286   */\n    tag_119:\n        /* \"#utility.yul\":4234:4279   */\n      tag_198\n        /* \"#utility.yul\":4254:4278   */\n      tag_199\n        /* \"#utility.yul\":4272:4277   */\n      dup3\n        /* \"#utility.yul\":4254:4278   */\n      tag_109\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":4234:4279   */\n      tag_118\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":4229:4232   */\n      dup3\n        /* \"#utility.yul\":4222:4280   */\n      mstore\n        /* \"#utility.yul\":4129:4286   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4292:4388   */\n    tag_120:\n        /* \"#utility.yul\":4326:4334   */\n      0x00\n        /* \"#utility.yul\":4375:4380   */\n      dup2\n        /* \"#utility.yul\":4370:4373   */\n      0xe8\n        /* \"#utility.yul\":4366:4381   */\n      shl\n        /* \"#utility.yul\":4345:4381   */\n      swap1\n      pop\n        /* \"#utility.yul\":4292:4388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4394:4488   */\n    tag_121:\n        /* \"#utility.yul\":4432:4439   */\n      0x00\n        /* \"#utility.yul\":4461:4482   */\n      tag_202\n        /* \"#utility.yul\":4476:4481   */\n      dup3\n        /* \"#utility.yul\":4461:4482   */\n      tag_120\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":4450:4482   */\n      swap1\n      pop\n        /* \"#utility.yul\":4394:4488   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4494:4647   */\n    tag_122:\n        /* \"#utility.yul\":4597:4640   */\n      tag_204\n        /* \"#utility.yul\":4616:4639   */\n      tag_205\n        /* \"#utility.yul\":4633:4638   */\n      dup3\n        /* \"#utility.yul\":4616:4639   */\n      tag_99\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":4597:4640   */\n      tag_121\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":4592:4595   */\n      dup3\n        /* \"#utility.yul\":4585:4641   */\n      mstore\n        /* \"#utility.yul\":4494:4647   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4653:5463   */\n    tag_50:\n        /* \"#utility.yul\":4873:4876   */\n      0x00\n        /* \"#utility.yul\":4888:4963   */\n      tag_207\n        /* \"#utility.yul\":4959:4962   */\n      dup3\n        /* \"#utility.yul\":4950:4956   */\n      dup9\n        /* \"#utility.yul\":4888:4963   */\n      tag_119\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":4988:4990   */\n      0x14\n        /* \"#utility.yul\":4983:4986   */\n      dup3\n        /* \"#utility.yul\":4979:4991   */\n      add\n        /* \"#utility.yul\":4972:4991   */\n      swap2\n      pop\n        /* \"#utility.yul\":5001:5074   */\n      tag_208\n        /* \"#utility.yul\":5070:5073   */\n      dup3\n        /* \"#utility.yul\":5061:5067   */\n      dup8\n        /* \"#utility.yul\":5001:5074   */\n      tag_122\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":5099:5100   */\n      0x03\n        /* \"#utility.yul\":5094:5097   */\n      dup3\n        /* \"#utility.yul\":5090:5101   */\n      add\n        /* \"#utility.yul\":5083:5101   */\n      swap2\n      pop\n        /* \"#utility.yul\":5111:5186   */\n      tag_209\n        /* \"#utility.yul\":5182:5185   */\n      dup3\n        /* \"#utility.yul\":5173:5179   */\n      dup7\n        /* \"#utility.yul\":5111:5186   */\n      tag_119\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":5211:5213   */\n      0x14\n        /* \"#utility.yul\":5206:5209   */\n      dup3\n        /* \"#utility.yul\":5202:5214   */\n      add\n        /* \"#utility.yul\":5195:5214   */\n      swap2\n      pop\n        /* \"#utility.yul\":5224:5297   */\n      tag_210\n        /* \"#utility.yul\":5293:5296   */\n      dup3\n        /* \"#utility.yul\":5284:5290   */\n      dup6\n        /* \"#utility.yul\":5224:5297   */\n      tag_122\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":5322:5323   */\n      0x03\n        /* \"#utility.yul\":5317:5320   */\n      dup3\n        /* \"#utility.yul\":5313:5324   */\n      add\n        /* \"#utility.yul\":5306:5324   */\n      swap2\n      pop\n        /* \"#utility.yul\":5334:5409   */\n      tag_211\n        /* \"#utility.yul\":5405:5408   */\n      dup3\n        /* \"#utility.yul\":5396:5402   */\n      dup5\n        /* \"#utility.yul\":5334:5409   */\n      tag_119\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":5434:5436   */\n      0x14\n        /* \"#utility.yul\":5429:5432   */\n      dup3\n        /* \"#utility.yul\":5425:5437   */\n      add\n        /* \"#utility.yul\":5418:5437   */\n      swap2\n      pop\n        /* \"#utility.yul\":5454:5457   */\n      dup2\n        /* \"#utility.yul\":5447:5457   */\n      swap1\n      pop\n        /* \"#utility.yul\":4653:5463   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5469:5567   */\n    tag_123:\n        /* \"#utility.yul\":5520:5526   */\n      0x00\n        /* \"#utility.yul\":5554:5559   */\n      dup2\n        /* \"#utility.yul\":5548:5560   */\n      mload\n        /* \"#utility.yul\":5538:5560   */\n      swap1\n      pop\n        /* \"#utility.yul\":5469:5567   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5573:5731   */\n    tag_124:\n        /* \"#utility.yul\":5646:5657   */\n      0x00\n        /* \"#utility.yul\":5680:5686   */\n      dup3\n        /* \"#utility.yul\":5675:5678   */\n      dup3\n        /* \"#utility.yul\":5668:5687   */\n      mstore\n        /* \"#utility.yul\":5720:5724   */\n      0x20\n        /* \"#utility.yul\":5715:5718   */\n      dup3\n        /* \"#utility.yul\":5711:5725   */\n      add\n        /* \"#utility.yul\":5696:5725   */\n      swap1\n      pop\n        /* \"#utility.yul\":5573:5731   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5737:5876   */\n    tag_125:\n        /* \"#utility.yul\":5826:5832   */\n      dup3\n        /* \"#utility.yul\":5821:5824   */\n      dup2\n        /* \"#utility.yul\":5816:5819   */\n      dup4\n        /* \"#utility.yul\":5810:5833   */\n      mcopy\n        /* \"#utility.yul\":5867:5868   */\n      0x00\n        /* \"#utility.yul\":5858:5864   */\n      dup4\n        /* \"#utility.yul\":5853:5856   */\n      dup4\n        /* \"#utility.yul\":5849:5865   */\n      add\n        /* \"#utility.yul\":5842:5869   */\n      mstore\n        /* \"#utility.yul\":5737:5876   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5882:5984   */\n    tag_126:\n        /* \"#utility.yul\":5923:5929   */\n      0x00\n        /* \"#utility.yul\":5974:5976   */\n      0x1f\n        /* \"#utility.yul\":5970:5977   */\n      not\n        /* \"#utility.yul\":5965:5967   */\n      0x1f\n        /* \"#utility.yul\":5958:5963   */\n      dup4\n        /* \"#utility.yul\":5954:5968   */\n      add\n        /* \"#utility.yul\":5950:5978   */\n      and\n        /* \"#utility.yul\":5940:5978   */\n      swap1\n      pop\n        /* \"#utility.yul\":5882:5984   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5990:6343   */\n    tag_127:\n        /* \"#utility.yul\":6066:6069   */\n      0x00\n        /* \"#utility.yul\":6094:6132   */\n      tag_217\n        /* \"#utility.yul\":6126:6131   */\n      dup3\n        /* \"#utility.yul\":6094:6132   */\n      tag_123\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":6148:6208   */\n      tag_218\n        /* \"#utility.yul\":6201:6207   */\n      dup2\n        /* \"#utility.yul\":6196:6199   */\n      dup6\n        /* \"#utility.yul\":6148:6208   */\n      tag_124\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":6141:6208   */\n      swap4\n      pop\n        /* \"#utility.yul\":6217:6282   */\n      tag_219\n        /* \"#utility.yul\":6275:6281   */\n      dup2\n        /* \"#utility.yul\":6270:6273   */\n      dup6\n        /* \"#utility.yul\":6263:6267   */\n      0x20\n        /* \"#utility.yul\":6256:6261   */\n      dup7\n        /* \"#utility.yul\":6252:6268   */\n      add\n        /* \"#utility.yul\":6217:6282   */\n      tag_125\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":6307:6336   */\n      tag_220\n        /* \"#utility.yul\":6329:6335   */\n      dup2\n        /* \"#utility.yul\":6307:6336   */\n      tag_126\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":6302:6305   */\n      dup5\n        /* \"#utility.yul\":6298:6337   */\n      add\n        /* \"#utility.yul\":6291:6337   */\n      swap2\n      pop\n        /* \"#utility.yul\":6070:6343   */\n      pop\n        /* \"#utility.yul\":5990:6343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6349:6457   */\n    tag_128:\n        /* \"#utility.yul\":6426:6450   */\n      tag_222\n        /* \"#utility.yul\":6444:6449   */\n      dup2\n        /* \"#utility.yul\":6426:6450   */\n      tag_109\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":6421:6424   */\n      dup3\n        /* \"#utility.yul\":6414:6451   */\n      mstore\n        /* \"#utility.yul\":6349:6457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6571   */\n    tag_129:\n        /* \"#utility.yul\":6540:6564   */\n      tag_224\n        /* \"#utility.yul\":6558:6563   */\n      dup2\n        /* \"#utility.yul\":6540:6564   */\n      tag_104\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":6535:6538   */\n      dup3\n        /* \"#utility.yul\":6528:6565   */\n      mstore\n        /* \"#utility.yul\":6463:6571   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6661:7830   */\n    tag_130:\n        /* \"#utility.yul\":6798:6801   */\n      0x00\n        /* \"#utility.yul\":6834:6838   */\n      0xa0\n        /* \"#utility.yul\":6829:6832   */\n      dup4\n        /* \"#utility.yul\":6825:6839   */\n      add\n        /* \"#utility.yul\":6921:6925   */\n      0x00\n        /* \"#utility.yul\":6914:6919   */\n      dup4\n        /* \"#utility.yul\":6910:6926   */\n      add\n        /* \"#utility.yul\":6904:6927   */\n      mload\n        /* \"#utility.yul\":6974:6977   */\n      dup5\n        /* \"#utility.yul\":6968:6972   */\n      dup3\n        /* \"#utility.yul\":6964:6978   */\n      sub\n        /* \"#utility.yul\":6957:6961   */\n      0x00\n        /* \"#utility.yul\":6952:6955   */\n      dup7\n        /* \"#utility.yul\":6948:6962   */\n      add\n        /* \"#utility.yul\":6941:6979   */\n      mstore\n        /* \"#utility.yul\":7000:7071   */\n      tag_226\n        /* \"#utility.yul\":7066:7070   */\n      dup3\n        /* \"#utility.yul\":7052:7064   */\n      dup3\n        /* \"#utility.yul\":7000:7071   */\n      tag_127\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":6992:7071   */\n      swap2\n      pop\n        /* \"#utility.yul\":6849:7082   */\n      pop\n        /* \"#utility.yul\":7169:7173   */\n      0x20\n        /* \"#utility.yul\":7162:7167   */\n      dup4\n        /* \"#utility.yul\":7158:7174   */\n      add\n        /* \"#utility.yul\":7152:7175   */\n      mload\n        /* \"#utility.yul\":7188:7251   */\n      tag_227\n        /* \"#utility.yul\":7245:7249   */\n      0x20\n        /* \"#utility.yul\":7240:7243   */\n      dup7\n        /* \"#utility.yul\":7236:7250   */\n      add\n        /* \"#utility.yul\":7222:7234   */\n      dup3\n        /* \"#utility.yul\":7188:7251   */\n      tag_128\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":7092:7261   */\n      pop\n        /* \"#utility.yul\":7347:7351   */\n      0x40\n        /* \"#utility.yul\":7340:7345   */\n      dup4\n        /* \"#utility.yul\":7336:7352   */\n      add\n        /* \"#utility.yul\":7330:7353   */\n      mload\n        /* \"#utility.yul\":7366:7429   */\n      tag_228\n        /* \"#utility.yul\":7423:7427   */\n      0x40\n        /* \"#utility.yul\":7418:7421   */\n      dup7\n        /* \"#utility.yul\":7414:7428   */\n      add\n        /* \"#utility.yul\":7400:7412   */\n      dup3\n        /* \"#utility.yul\":7366:7429   */\n      tag_129\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":7271:7439   */\n      pop\n        /* \"#utility.yul\":7526:7530   */\n      0x60\n        /* \"#utility.yul\":7519:7524   */\n      dup4\n        /* \"#utility.yul\":7515:7531   */\n      add\n        /* \"#utility.yul\":7509:7532   */\n      mload\n        /* \"#utility.yul\":7545:7608   */\n      tag_229\n        /* \"#utility.yul\":7602:7606   */\n      0x60\n        /* \"#utility.yul\":7597:7600   */\n      dup7\n        /* \"#utility.yul\":7593:7607   */\n      add\n        /* \"#utility.yul\":7579:7591   */\n      dup3\n        /* \"#utility.yul\":7545:7608   */\n      tag_129\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":7449:7618   */\n      pop\n        /* \"#utility.yul\":7711:7715   */\n      0x80\n        /* \"#utility.yul\":7704:7709   */\n      dup4\n        /* \"#utility.yul\":7700:7716   */\n      add\n        /* \"#utility.yul\":7694:7717   */\n      mload\n        /* \"#utility.yul\":7730:7793   */\n      tag_230\n        /* \"#utility.yul\":7787:7791   */\n      0x80\n        /* \"#utility.yul\":7782:7785   */\n      dup7\n        /* \"#utility.yul\":7778:7792   */\n      add\n        /* \"#utility.yul\":7764:7776   */\n      dup3\n        /* \"#utility.yul\":7730:7793   */\n      tag_129\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":7628:7803   */\n      pop\n        /* \"#utility.yul\":7820:7824   */\n      dup1\n        /* \"#utility.yul\":7813:7824   */\n      swap2\n      pop\n        /* \"#utility.yul\":6803:7830   */\n      pop\n        /* \"#utility.yul\":6661:7830   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7836:8245   */\n    tag_52:\n        /* \"#utility.yul\":7997:8001   */\n      0x00\n        /* \"#utility.yul\":8035:8037   */\n      0x20\n        /* \"#utility.yul\":8024:8033   */\n      dup3\n        /* \"#utility.yul\":8020:8038   */\n      add\n        /* \"#utility.yul\":8012:8038   */\n      swap1\n      pop\n        /* \"#utility.yul\":8084:8093   */\n      dup2\n        /* \"#utility.yul\":8078:8082   */\n      dup2\n        /* \"#utility.yul\":8074:8094   */\n      sub\n        /* \"#utility.yul\":8070:8071   */\n      0x00\n        /* \"#utility.yul\":8059:8068   */\n      dup4\n        /* \"#utility.yul\":8055:8072   */\n      add\n        /* \"#utility.yul\":8048:8095   */\n      mstore\n        /* \"#utility.yul\":8112:8238   */\n      tag_232\n        /* \"#utility.yul\":8233:8237   */\n      dup2\n        /* \"#utility.yul\":8224:8230   */\n      dup5\n        /* \"#utility.yul\":8112:8238   */\n      tag_130\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":8104:8238   */\n      swap1\n      pop\n        /* \"#utility.yul\":7836:8245   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8251:8394   */\n    tag_131:\n        /* \"#utility.yul\":8308:8313   */\n      0x00\n        /* \"#utility.yul\":8339:8345   */\n      dup2\n        /* \"#utility.yul\":8333:8346   */\n      mload\n        /* \"#utility.yul\":8324:8346   */\n      swap1\n      pop\n        /* \"#utility.yul\":8355:8388   */\n      tag_234\n        /* \"#utility.yul\":8382:8387   */\n      dup2\n        /* \"#utility.yul\":8355:8388   */\n      tag_105\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":8251:8394   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8400:8751   */\n    tag_56:\n        /* \"#utility.yul\":8470:8476   */\n      0x00\n        /* \"#utility.yul\":8519:8521   */\n      0x20\n        /* \"#utility.yul\":8507:8516   */\n      dup3\n        /* \"#utility.yul\":8498:8505   */\n      dup5\n        /* \"#utility.yul\":8494:8517   */\n      sub\n        /* \"#utility.yul\":8490:8522   */\n      slt\n        /* \"#utility.yul\":8487:8606   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":8525:8604   */\n      tag_237\n      tag_102\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":8487:8606   */\n    tag_236:\n        /* \"#utility.yul\":8645:8646   */\n      0x00\n        /* \"#utility.yul\":8670:8734   */\n      tag_238\n        /* \"#utility.yul\":8726:8733   */\n      dup5\n        /* \"#utility.yul\":8717:8723   */\n      dup3\n        /* \"#utility.yul\":8706:8715   */\n      dup6\n        /* \"#utility.yul\":8702:8724   */\n      add\n        /* \"#utility.yul\":8670:8734   */\n      tag_131\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":8660:8734   */\n      swap2\n      pop\n        /* \"#utility.yul\":8616:8744   */\n      pop\n        /* \"#utility.yul\":8400:8751   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8757:8937   */\n    tag_132:\n        /* \"#utility.yul\":8805:8882   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8802:8803   */\n      0x00\n        /* \"#utility.yul\":8795:8883   */\n      mstore\n        /* \"#utility.yul\":8902:8906   */\n      0x11\n        /* \"#utility.yul\":8899:8900   */\n      0x04\n        /* \"#utility.yul\":8892:8907   */\n      mstore\n        /* \"#utility.yul\":8926:8930   */\n      0x24\n        /* \"#utility.yul\":8923:8924   */\n      0x00\n        /* \"#utility.yul\":8916:8931   */\n      revert\n        /* \"#utility.yul\":8943:9137   */\n    tag_61:\n        /* \"#utility.yul\":8983:8987   */\n      0x00\n        /* \"#utility.yul\":9003:9023   */\n      tag_241\n        /* \"#utility.yul\":9021:9022   */\n      dup3\n        /* \"#utility.yul\":9003:9023   */\n      tag_104\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":8998:9023   */\n      swap2\n      pop\n        /* \"#utility.yul\":9037:9057   */\n      tag_242\n        /* \"#utility.yul\":9055:9056   */\n      dup4\n        /* \"#utility.yul\":9037:9057   */\n      tag_104\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":9032:9057   */\n      swap3\n      pop\n        /* \"#utility.yul\":9081:9082   */\n      dup3\n        /* \"#utility.yul\":9078:9079   */\n      dup3\n        /* \"#utility.yul\":9074:9083   */\n      sub\n        /* \"#utility.yul\":9066:9083   */\n      swap1\n      pop\n        /* \"#utility.yul\":9105:9106   */\n      dup2\n        /* \"#utility.yul\":9099:9103   */\n      dup2\n        /* \"#utility.yul\":9096:9107   */\n      gt\n        /* \"#utility.yul\":9093:9130   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":9110:9128   */\n      tag_244\n      tag_132\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":9093:9130   */\n    tag_243:\n        /* \"#utility.yul\":8943:9137   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9225:10392   */\n    tag_133:\n        /* \"#utility.yul\":9360:9363   */\n      0x00\n        /* \"#utility.yul\":9396:9400   */\n      0xa0\n        /* \"#utility.yul\":9391:9394   */\n      dup4\n        /* \"#utility.yul\":9387:9401   */\n      add\n        /* \"#utility.yul\":9483:9487   */\n      0x00\n        /* \"#utility.yul\":9476:9481   */\n      dup4\n        /* \"#utility.yul\":9472:9488   */\n      add\n        /* \"#utility.yul\":9466:9489   */\n      mload\n        /* \"#utility.yul\":9536:9539   */\n      dup5\n        /* \"#utility.yul\":9530:9534   */\n      dup3\n        /* \"#utility.yul\":9526:9540   */\n      sub\n        /* \"#utility.yul\":9519:9523   */\n      0x00\n        /* \"#utility.yul\":9514:9517   */\n      dup7\n        /* \"#utility.yul\":9510:9524   */\n      add\n        /* \"#utility.yul\":9503:9541   */\n      mstore\n        /* \"#utility.yul\":9562:9633   */\n      tag_246\n        /* \"#utility.yul\":9628:9632   */\n      dup3\n        /* \"#utility.yul\":9614:9626   */\n      dup3\n        /* \"#utility.yul\":9562:9633   */\n      tag_127\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":9554:9633   */\n      swap2\n      pop\n        /* \"#utility.yul\":9411:9644   */\n      pop\n        /* \"#utility.yul\":9731:9735   */\n      0x20\n        /* \"#utility.yul\":9724:9729   */\n      dup4\n        /* \"#utility.yul\":9720:9736   */\n      add\n        /* \"#utility.yul\":9714:9737   */\n      mload\n        /* \"#utility.yul\":9750:9813   */\n      tag_247\n        /* \"#utility.yul\":9807:9811   */\n      0x20\n        /* \"#utility.yul\":9802:9805   */\n      dup7\n        /* \"#utility.yul\":9798:9812   */\n      add\n        /* \"#utility.yul\":9784:9796   */\n      dup3\n        /* \"#utility.yul\":9750:9813   */\n      tag_128\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":9654:9823   */\n      pop\n        /* \"#utility.yul\":9909:9913   */\n      0x40\n        /* \"#utility.yul\":9902:9907   */\n      dup4\n        /* \"#utility.yul\":9898:9914   */\n      add\n        /* \"#utility.yul\":9892:9915   */\n      mload\n        /* \"#utility.yul\":9928:9991   */\n      tag_248\n        /* \"#utility.yul\":9985:9989   */\n      0x40\n        /* \"#utility.yul\":9980:9983   */\n      dup7\n        /* \"#utility.yul\":9976:9990   */\n      add\n        /* \"#utility.yul\":9962:9974   */\n      dup3\n        /* \"#utility.yul\":9928:9991   */\n      tag_129\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":9833:10001   */\n      pop\n        /* \"#utility.yul\":10087:10091   */\n      0x60\n        /* \"#utility.yul\":10080:10085   */\n      dup4\n        /* \"#utility.yul\":10076:10092   */\n      add\n        /* \"#utility.yul\":10070:10093   */\n      mload\n        /* \"#utility.yul\":10106:10169   */\n      tag_249\n        /* \"#utility.yul\":10163:10167   */\n      0x60\n        /* \"#utility.yul\":10158:10161   */\n      dup7\n        /* \"#utility.yul\":10154:10168   */\n      add\n        /* \"#utility.yul\":10140:10152   */\n      dup3\n        /* \"#utility.yul\":10106:10169   */\n      tag_129\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":10011:10179   */\n      pop\n        /* \"#utility.yul\":10273:10277   */\n      0x80\n        /* \"#utility.yul\":10266:10271   */\n      dup4\n        /* \"#utility.yul\":10262:10278   */\n      add\n        /* \"#utility.yul\":10256:10279   */\n      mload\n        /* \"#utility.yul\":10292:10355   */\n      tag_250\n        /* \"#utility.yul\":10349:10353   */\n      0x80\n        /* \"#utility.yul\":10344:10347   */\n      dup7\n        /* \"#utility.yul\":10340:10354   */\n      add\n        /* \"#utility.yul\":10326:10338   */\n      dup3\n        /* \"#utility.yul\":10292:10355   */\n      tag_129\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":10189:10365   */\n      pop\n        /* \"#utility.yul\":10382:10386   */\n      dup1\n        /* \"#utility.yul\":10375:10386   */\n      swap2\n      pop\n        /* \"#utility.yul\":9365:10392   */\n      pop\n        /* \"#utility.yul\":9225:10392   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10398:10803   */\n    tag_67:\n        /* \"#utility.yul\":10557:10561   */\n      0x00\n        /* \"#utility.yul\":10595:10597   */\n      0x20\n        /* \"#utility.yul\":10584:10593   */\n      dup3\n        /* \"#utility.yul\":10580:10598   */\n      add\n        /* \"#utility.yul\":10572:10598   */\n      swap1\n      pop\n        /* \"#utility.yul\":10644:10653   */\n      dup2\n        /* \"#utility.yul\":10638:10642   */\n      dup2\n        /* \"#utility.yul\":10634:10654   */\n      sub\n        /* \"#utility.yul\":10630:10631   */\n      0x00\n        /* \"#utility.yul\":10619:10628   */\n      dup4\n        /* \"#utility.yul\":10615:10632   */\n      add\n        /* \"#utility.yul\":10608:10655   */\n      mstore\n        /* \"#utility.yul\":10672:10796   */\n      tag_252\n        /* \"#utility.yul\":10791:10795   */\n      dup2\n        /* \"#utility.yul\":10782:10788   */\n      dup5\n        /* \"#utility.yul\":10672:10796   */\n      tag_133\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":10664:10796   */\n      swap1\n      pop\n        /* \"#utility.yul\":10398:10803   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10809:11251   */\n    tag_73:\n        /* \"#utility.yul\":10958:10962   */\n      0x00\n        /* \"#utility.yul\":10996:10998   */\n      0x60\n        /* \"#utility.yul\":10985:10994   */\n      dup3\n        /* \"#utility.yul\":10981:10999   */\n      add\n        /* \"#utility.yul\":10973:10999   */\n      swap1\n      pop\n        /* \"#utility.yul\":11009:11080   */\n      tag_254\n        /* \"#utility.yul\":11077:11078   */\n      0x00\n        /* \"#utility.yul\":11066:11075   */\n      dup4\n        /* \"#utility.yul\":11062:11079   */\n      add\n        /* \"#utility.yul\":11053:11059   */\n      dup7\n        /* \"#utility.yul\":11009:11080   */\n      tag_110\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":11090:11162   */\n      tag_255\n        /* \"#utility.yul\":11158:11160   */\n      0x20\n        /* \"#utility.yul\":11147:11156   */\n      dup4\n        /* \"#utility.yul\":11143:11161   */\n      add\n        /* \"#utility.yul\":11134:11140   */\n      dup6\n        /* \"#utility.yul\":11090:11162   */\n      tag_110\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":11172:11244   */\n      tag_256\n        /* \"#utility.yul\":11240:11242   */\n      0x40\n        /* \"#utility.yul\":11229:11238   */\n      dup4\n        /* \"#utility.yul\":11225:11243   */\n      add\n        /* \"#utility.yul\":11216:11222   */\n      dup5\n        /* \"#utility.yul\":11172:11244   */\n      tag_107\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":10809:11251   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11257:11404   */\n    tag_134:\n        /* \"#utility.yul\":11358:11369   */\n      0x00\n        /* \"#utility.yul\":11395:11398   */\n      dup2\n        /* \"#utility.yul\":11380:11398   */\n      swap1\n      pop\n        /* \"#utility.yul\":11257:11404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11410:11796   */\n    tag_135:\n        /* \"#utility.yul\":11514:11517   */\n      0x00\n        /* \"#utility.yul\":11542:11580   */\n      tag_259\n        /* \"#utility.yul\":11574:11579   */\n      dup3\n        /* \"#utility.yul\":11542:11580   */\n      tag_123\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":11596:11684   */\n      tag_260\n        /* \"#utility.yul\":11677:11683   */\n      dup2\n        /* \"#utility.yul\":11672:11675   */\n      dup6\n        /* \"#utility.yul\":11596:11684   */\n      tag_134\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":11589:11684   */\n      swap4\n      pop\n        /* \"#utility.yul\":11693:11758   */\n      tag_261\n        /* \"#utility.yul\":11751:11757   */\n      dup2\n        /* \"#utility.yul\":11746:11749   */\n      dup6\n        /* \"#utility.yul\":11739:11743   */\n      0x20\n        /* \"#utility.yul\":11732:11737   */\n      dup7\n        /* \"#utility.yul\":11728:11744   */\n      add\n        /* \"#utility.yul\":11693:11758   */\n      tag_125\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":11783:11789   */\n      dup1\n        /* \"#utility.yul\":11778:11781   */\n      dup5\n        /* \"#utility.yul\":11774:11790   */\n      add\n        /* \"#utility.yul\":11767:11790   */\n      swap2\n      pop\n        /* \"#utility.yul\":11518:11796   */\n      pop\n        /* \"#utility.yul\":11410:11796   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11802:12073   */\n    tag_75:\n        /* \"#utility.yul\":11932:11935   */\n      0x00\n        /* \"#utility.yul\":11954:12047   */\n      tag_263\n        /* \"#utility.yul\":12043:12046   */\n      dup3\n        /* \"#utility.yul\":12034:12040   */\n      dup5\n        /* \"#utility.yul\":11954:12047   */\n      tag_135\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":11947:12047   */\n      swap2\n      pop\n        /* \"#utility.yul\":12064:12067   */\n      dup2\n        /* \"#utility.yul\":12057:12067   */\n      swap1\n      pop\n        /* \"#utility.yul\":11802:12073   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12079:12169   */\n    tag_136:\n        /* \"#utility.yul\":12113:12120   */\n      0x00\n        /* \"#utility.yul\":12156:12161   */\n      dup2\n        /* \"#utility.yul\":12149:12162   */\n      iszero\n        /* \"#utility.yul\":12142:12163   */\n      iszero\n        /* \"#utility.yul\":12131:12163   */\n      swap1\n      pop\n        /* \"#utility.yul\":12079:12169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12175:12291   */\n    tag_137:\n        /* \"#utility.yul\":12245:12266   */\n      tag_266\n        /* \"#utility.yul\":12260:12265   */\n      dup2\n        /* \"#utility.yul\":12245:12266   */\n      tag_136\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":12238:12243   */\n      dup2\n        /* \"#utility.yul\":12235:12267   */\n      eq\n        /* \"#utility.yul\":12225:12285   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":12281:12282   */\n      0x00\n        /* \"#utility.yul\":12278:12279   */\n      dup1\n        /* \"#utility.yul\":12271:12283   */\n      revert\n        /* \"#utility.yul\":12225:12285   */\n    tag_267:\n        /* \"#utility.yul\":12175:12291   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12297:12434   */\n    tag_138:\n        /* \"#utility.yul\":12351:12356   */\n      0x00\n        /* \"#utility.yul\":12382:12388   */\n      dup2\n        /* \"#utility.yul\":12376:12389   */\n      mload\n        /* \"#utility.yul\":12367:12389   */\n      swap1\n      pop\n        /* \"#utility.yul\":12398:12428   */\n      tag_269\n        /* \"#utility.yul\":12422:12427   */\n      dup2\n        /* \"#utility.yul\":12398:12428   */\n      tag_137\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":12297:12434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12440:12785   */\n    tag_82:\n        /* \"#utility.yul\":12507:12513   */\n      0x00\n        /* \"#utility.yul\":12556:12558   */\n      0x20\n        /* \"#utility.yul\":12544:12553   */\n      dup3\n        /* \"#utility.yul\":12535:12542   */\n      dup5\n        /* \"#utility.yul\":12531:12554   */\n      sub\n        /* \"#utility.yul\":12527:12559   */\n      slt\n        /* \"#utility.yul\":12524:12643   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":12562:12641   */\n      tag_272\n      tag_102\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":12524:12643   */\n    tag_271:\n        /* \"#utility.yul\":12682:12683   */\n      0x00\n        /* \"#utility.yul\":12707:12768   */\n      tag_273\n        /* \"#utility.yul\":12760:12767   */\n      dup5\n        /* \"#utility.yul\":12751:12757   */\n      dup3\n        /* \"#utility.yul\":12740:12749   */\n      dup6\n        /* \"#utility.yul\":12736:12758   */\n      add\n        /* \"#utility.yul\":12707:12768   */\n      tag_138\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":12697:12768   */\n      swap2\n      pop\n        /* \"#utility.yul\":12653:12778   */\n      pop\n        /* \"#utility.yul\":12440:12785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12791:12960   */\n    tag_139:\n        /* \"#utility.yul\":12875:12886   */\n      0x00\n        /* \"#utility.yul\":12909:12915   */\n      dup3\n        /* \"#utility.yul\":12904:12907   */\n      dup3\n        /* \"#utility.yul\":12897:12916   */\n      mstore\n        /* \"#utility.yul\":12949:12953   */\n      0x20\n        /* \"#utility.yul\":12944:12947   */\n      dup3\n        /* \"#utility.yul\":12940:12954   */\n      add\n        /* \"#utility.yul\":12925:12954   */\n      swap1\n      pop\n        /* \"#utility.yul\":12791:12960   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12966:13119   */\n    tag_140:\n        /* \"#utility.yul\":13106:13111   */\n      0x5354460000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13102:13103   */\n      0x00\n        /* \"#utility.yul\":13094:13100   */\n      dup3\n        /* \"#utility.yul\":13090:13104   */\n      add\n        /* \"#utility.yul\":13083:13112   */\n      mstore\n        /* \"#utility.yul\":12966:13119   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13125:13490   */\n    tag_141:\n        /* \"#utility.yul\":13267:13270   */\n      0x00\n        /* \"#utility.yul\":13288:13354   */\n      tag_277\n        /* \"#utility.yul\":13352:13353   */\n      0x03\n        /* \"#utility.yul\":13347:13350   */\n      dup4\n        /* \"#utility.yul\":13288:13354   */\n      tag_139\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":13281:13354   */\n      swap2\n      pop\n        /* \"#utility.yul\":13363:13456   */\n      tag_278\n        /* \"#utility.yul\":13452:13455   */\n      dup3\n        /* \"#utility.yul\":13363:13456   */\n      tag_140\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":13481:13483   */\n      0x20\n        /* \"#utility.yul\":13476:13479   */\n      dup3\n        /* \"#utility.yul\":13472:13484   */\n      add\n        /* \"#utility.yul\":13465:13484   */\n      swap1\n      pop\n        /* \"#utility.yul\":13125:13490   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13496:13915   */\n    tag_85:\n        /* \"#utility.yul\":13662:13666   */\n      0x00\n        /* \"#utility.yul\":13700:13702   */\n      0x20\n        /* \"#utility.yul\":13689:13698   */\n      dup3\n        /* \"#utility.yul\":13685:13703   */\n      add\n        /* \"#utility.yul\":13677:13703   */\n      swap1\n      pop\n        /* \"#utility.yul\":13749:13758   */\n      dup2\n        /* \"#utility.yul\":13743:13747   */\n      dup2\n        /* \"#utility.yul\":13739:13759   */\n      sub\n        /* \"#utility.yul\":13735:13736   */\n      0x00\n        /* \"#utility.yul\":13724:13733   */\n      dup4\n        /* \"#utility.yul\":13720:13737   */\n      add\n        /* \"#utility.yul\":13713:13760   */\n      mstore\n        /* \"#utility.yul\":13777:13908   */\n      tag_280\n        /* \"#utility.yul\":13903:13907   */\n      dup2\n        /* \"#utility.yul\":13777:13908   */\n      tag_141\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":13769:13908   */\n      swap1\n      pop\n        /* \"#utility.yul\":13496:13915   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13921:14253   */\n    tag_88:\n        /* \"#utility.yul\":14042:14046   */\n      0x00\n        /* \"#utility.yul\":14080:14082   */\n      0x40\n        /* \"#utility.yul\":14069:14078   */\n      dup3\n        /* \"#utility.yul\":14065:14083   */\n      add\n        /* \"#utility.yul\":14057:14083   */\n      swap1\n      pop\n        /* \"#utility.yul\":14093:14164   */\n      tag_282\n        /* \"#utility.yul\":14161:14162   */\n      0x00\n        /* \"#utility.yul\":14150:14159   */\n      dup4\n        /* \"#utility.yul\":14146:14163   */\n      add\n        /* \"#utility.yul\":14137:14143   */\n      dup6\n        /* \"#utility.yul\":14093:14164   */\n      tag_110\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":14174:14246   */\n      tag_283\n        /* \"#utility.yul\":14242:14244   */\n      0x20\n        /* \"#utility.yul\":14231:14240   */\n      dup4\n        /* \"#utility.yul\":14227:14245   */\n      add\n        /* \"#utility.yul\":14218:14224   */\n      dup5\n        /* \"#utility.yul\":14174:14246   */\n      tag_107\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":13921:14253   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14259:14411   */\n    tag_142:\n        /* \"#utility.yul\":14399:14403   */\n      0x5341000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14395:14396   */\n      0x00\n        /* \"#utility.yul\":14387:14393   */\n      dup3\n        /* \"#utility.yul\":14383:14397   */\n      add\n        /* \"#utility.yul\":14376:14404   */\n      mstore\n        /* \"#utility.yul\":14259:14411   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14417:14782   */\n    tag_143:\n        /* \"#utility.yul\":14559:14562   */\n      0x00\n        /* \"#utility.yul\":14580:14646   */\n      tag_286\n        /* \"#utility.yul\":14644:14645   */\n      0x02\n        /* \"#utility.yul\":14639:14642   */\n      dup4\n        /* \"#utility.yul\":14580:14646   */\n      tag_139\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":14573:14646   */\n      swap2\n      pop\n        /* \"#utility.yul\":14655:14748   */\n      tag_287\n        /* \"#utility.yul\":14744:14747   */\n      dup3\n        /* \"#utility.yul\":14655:14748   */\n      tag_142\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":14773:14775   */\n      0x20\n        /* \"#utility.yul\":14768:14771   */\n      dup3\n        /* \"#utility.yul\":14764:14776   */\n      add\n        /* \"#utility.yul\":14757:14776   */\n      swap1\n      pop\n        /* \"#utility.yul\":14417:14782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14788:15207   */\n    tag_98:\n        /* \"#utility.yul\":14954:14958   */\n      0x00\n        /* \"#utility.yul\":14992:14994   */\n      0x20\n        /* \"#utility.yul\":14981:14990   */\n      dup3\n        /* \"#utility.yul\":14977:14995   */\n      add\n        /* \"#utility.yul\":14969:14995   */\n      swap1\n      pop\n        /* \"#utility.yul\":15041:15050   */\n      dup2\n        /* \"#utility.yul\":15035:15039   */\n      dup2\n        /* \"#utility.yul\":15031:15051   */\n      sub\n        /* \"#utility.yul\":15027:15028   */\n      0x00\n        /* \"#utility.yul\":15016:15025   */\n      dup4\n        /* \"#utility.yul\":15012:15029   */\n      add\n        /* \"#utility.yul\":15005:15052   */\n      mstore\n        /* \"#utility.yul\":15069:15200   */\n      tag_289\n        /* \"#utility.yul\":15195:15199   */\n      dup2\n        /* \"#utility.yul\":15069:15200   */\n      tag_143\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":15061:15200   */\n      swap1\n      pop\n        /* \"#utility.yul\":14788:15207   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122039f144721d762fe0a1827d275fa40d513cbdbe369471597a7fa4067a2b4e289664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_414": {
									"entryPoint": null,
									"id": 414,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_ISwapRouter_$191_fromMemory": {
									"entryPoint": 358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ISwapRouter_$191t_addresst_addresst_address_fromMemory": {
									"entryPoint": 420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ISwapRouter_$191": {
									"entryPoint": 319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 267,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ISwapRouter_$191": {
									"entryPoint": 336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2180:5",
										"nodeType": "YulBlock",
										"src": "0:2180:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "632:51:5",
													"nodeType": "YulBlock",
													"src": "632:51:5",
													"statements": [
														{
															"nativeSrc": "642:35:5",
															"nodeType": "YulAssignment",
															"src": "642:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "671:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "671:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "653:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "653:17:5"
																},
																"nativeSrc": "653:24:5",
																"nodeType": "YulFunctionCall",
																"src": "653:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "642:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "642:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ISwapRouter_$191",
												"nativeSrc": "568:115:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "614:5:5",
														"nodeType": "YulTypedName",
														"src": "614:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "624:7:5",
														"nodeType": "YulTypedName",
														"src": "624:7:5",
														"type": ""
													}
												],
												"src": "568:115:5"
											},
											{
												"body": {
													"nativeSrc": "751:98:5",
													"nodeType": "YulBlock",
													"src": "751:98:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "827:16:5",
																"nodeType": "YulBlock",
																"src": "827:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:5",
																					"nodeType": "YulLiteral",
																					"src": "836:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:1:5",
																					"nodeType": "YulLiteral",
																					"src": "839:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "829:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "829:6:5"
																			},
																			"nativeSrc": "829:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "829:12:5"
																		},
																		"nativeSrc": "829:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "829:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "774:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "774:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "818:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "818:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ISwapRouter_$191",
																					"nativeSrc": "781:36:5",
																					"nodeType": "YulIdentifier",
																					"src": "781:36:5"
																				},
																				"nativeSrc": "781:43:5",
																				"nodeType": "YulFunctionCall",
																				"src": "781:43:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "771:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "771:2:5"
																		},
																		"nativeSrc": "771:54:5",
																		"nodeType": "YulFunctionCall",
																		"src": "771:54:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "764:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "764:6:5"
																},
																"nativeSrc": "764:62:5",
																"nodeType": "YulFunctionCall",
																"src": "764:62:5"
															},
															"nativeSrc": "761:82:5",
															"nodeType": "YulIf",
															"src": "761:82:5"
														}
													]
												},
												"name": "validator_revert_t_contract$_ISwapRouter_$191",
												"nativeSrc": "689:160:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "744:5:5",
														"nodeType": "YulTypedName",
														"src": "744:5:5",
														"type": ""
													}
												],
												"src": "689:160:5"
											},
											{
												"body": {
													"nativeSrc": "937:99:5",
													"nodeType": "YulBlock",
													"src": "937:99:5",
													"statements": [
														{
															"nativeSrc": "947:22:5",
															"nodeType": "YulAssignment",
															"src": "947:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "962:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "956:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "956:5:5"
																},
																"nativeSrc": "956:13:5",
																"nodeType": "YulFunctionCall",
																"src": "956:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "947:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "947:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ISwapRouter_$191",
																	"nativeSrc": "978:45:5",
																	"nodeType": "YulIdentifier",
																	"src": "978:45:5"
																},
																"nativeSrc": "978:52:5",
																"nodeType": "YulFunctionCall",
																"src": "978:52:5"
															},
															"nativeSrc": "978:52:5",
															"nodeType": "YulExpressionStatement",
															"src": "978:52:5"
														}
													]
												},
												"name": "abi_decode_t_contract$_ISwapRouter_$191_fromMemory",
												"nativeSrc": "855:181:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "915:6:5",
														"nodeType": "YulTypedName",
														"src": "915:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "923:3:5",
														"nodeType": "YulTypedName",
														"src": "923:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "931:5:5",
														"nodeType": "YulTypedName",
														"src": "931:5:5",
														"type": ""
													}
												],
												"src": "855:181:5"
											},
											{
												"body": {
													"nativeSrc": "1085:79:5",
													"nodeType": "YulBlock",
													"src": "1085:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1142:16:5",
																"nodeType": "YulBlock",
																"src": "1142:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1151:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1151:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1154:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1154:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1144:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1144:6:5"
																			},
																			"nativeSrc": "1144:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1144:12:5"
																		},
																		"nativeSrc": "1144:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1144:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1108:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1108:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1133:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1133:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1115:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1115:17:5"
																				},
																				"nativeSrc": "1115:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1115:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1105:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1105:2:5"
																		},
																		"nativeSrc": "1105:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1105:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1098:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1098:6:5"
																},
																"nativeSrc": "1098:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1098:43:5"
															},
															"nativeSrc": "1095:63:5",
															"nodeType": "YulIf",
															"src": "1095:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1042:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1078:5:5",
														"nodeType": "YulTypedName",
														"src": "1078:5:5",
														"type": ""
													}
												],
												"src": "1042:122:5"
											},
											{
												"body": {
													"nativeSrc": "1233:80:5",
													"nodeType": "YulBlock",
													"src": "1233:80:5",
													"statements": [
														{
															"nativeSrc": "1243:22:5",
															"nodeType": "YulAssignment",
															"src": "1243:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1258:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1258:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1252:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1252:5:5"
																},
																"nativeSrc": "1252:13:5",
																"nodeType": "YulFunctionCall",
																"src": "1252:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1243:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1243:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1301:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1301:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1274:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1274:26:5"
																},
																"nativeSrc": "1274:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1274:33:5"
															},
															"nativeSrc": "1274:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1274:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1170:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1211:6:5",
														"nodeType": "YulTypedName",
														"src": "1211:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1219:3:5",
														"nodeType": "YulTypedName",
														"src": "1219:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1227:5:5",
														"nodeType": "YulTypedName",
														"src": "1227:5:5",
														"type": ""
													}
												],
												"src": "1170:143:5"
											},
											{
												"body": {
													"nativeSrc": "1466:711:5",
													"nodeType": "YulBlock",
													"src": "1466:711:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1513:83:5",
																"nodeType": "YulBlock",
																"src": "1513:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1515:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1515:77:5"
																			},
																			"nativeSrc": "1515:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1515:79:5"
																		},
																		"nativeSrc": "1515:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1515:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1487:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1487:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1496:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1496:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1483:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1483:3:5"
																		},
																		"nativeSrc": "1483:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1483:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1508:3:5",
																		"nodeType": "YulLiteral",
																		"src": "1508:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1479:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1479:3:5"
																},
																"nativeSrc": "1479:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1479:33:5"
															},
															"nativeSrc": "1476:120:5",
															"nodeType": "YulIf",
															"src": "1476:120:5"
														},
														{
															"nativeSrc": "1606:147:5",
															"nodeType": "YulBlock",
															"src": "1606:147:5",
															"statements": [
																{
																	"nativeSrc": "1621:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1621:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1635:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1625:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1625:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1650:93:5",
																	"nodeType": "YulAssignment",
																	"src": "1650:93:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1715:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1715:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1726:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1726:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1711:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1711:3:5"
																				},
																				"nativeSrc": "1711:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1711:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1735:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1735:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ISwapRouter_$191_fromMemory",
																			"nativeSrc": "1660:50:5",
																			"nodeType": "YulIdentifier",
																			"src": "1660:50:5"
																		},
																		"nativeSrc": "1660:83:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1660:83:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1650:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1650:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1763:129:5",
															"nodeType": "YulBlock",
															"src": "1763:129:5",
															"statements": [
																{
																	"nativeSrc": "1778:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1778:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1792:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1792:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1782:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1782:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1808:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1808:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1854:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1854:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1865:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1865:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1850:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1850:3:5"
																				},
																				"nativeSrc": "1850:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1850:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1874:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1874:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1818:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1818:31:5"
																		},
																		"nativeSrc": "1818:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1808:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1808:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1902:129:5",
															"nodeType": "YulBlock",
															"src": "1902:129:5",
															"statements": [
																{
																	"nativeSrc": "1917:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1917:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1931:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1931:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1921:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1921:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1947:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1947:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1993:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1993:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2004:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2004:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1989:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1989:3:5"
																				},
																				"nativeSrc": "1989:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1989:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2013:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2013:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1957:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1957:31:5"
																		},
																		"nativeSrc": "1957:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1957:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1947:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1947:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2041:129:5",
															"nodeType": "YulBlock",
															"src": "2041:129:5",
															"statements": [
																{
																	"nativeSrc": "2056:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2056:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2070:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2070:2:5",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2060:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2060:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2086:74:5",
																	"nodeType": "YulAssignment",
																	"src": "2086:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2132:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2132:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2143:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2143:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2128:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2128:3:5"
																				},
																				"nativeSrc": "2128:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2128:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2152:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2152:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "2096:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "2096:31:5"
																		},
																		"nativeSrc": "2096:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2096:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "2086:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2086:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ISwapRouter_$191t_addresst_addresst_address_fromMemory",
												"nativeSrc": "1319:858:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1412:9:5",
														"nodeType": "YulTypedName",
														"src": "1412:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1423:7:5",
														"nodeType": "YulTypedName",
														"src": "1423:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1435:6:5",
														"nodeType": "YulTypedName",
														"src": "1435:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1443:6:5",
														"nodeType": "YulTypedName",
														"src": "1443:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1451:6:5",
														"nodeType": "YulTypedName",
														"src": "1451:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1459:6:5",
														"nodeType": "YulTypedName",
														"src": "1459:6:5",
														"type": ""
													}
												],
												"src": "1319:858:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ISwapRouter_$191(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ISwapRouter_$191(value) {\n        if iszero(eq(value, cleanup_t_contract$_ISwapRouter_$191(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ISwapRouter_$191_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ISwapRouter_$191(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ISwapRouter_$191t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ISwapRouter_$191_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "610100604052348015610010575f80fd5b506040516112e33803806112e3833981810160405281019061003291906101a4565b8373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660e08173ffffffffffffffffffffffffffffffffffffffff168152505050505050610208565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101388261010f565b9050919050565b5f6101498261012e565b9050919050565b6101598161013f565b8114610163575f80fd5b50565b5f8151905061017481610150565b92915050565b6101838161012e565b811461018d575f80fd5b50565b5f8151905061019e8161017a565b92915050565b5f805f80608085870312156101bc576101bb61010b565b5b5f6101c987828801610166565b94505060206101da87828801610190565b93505060406101eb87828801610190565b92505060606101fc87828801610190565b91505092959194509250565b60805160a05160c05160e05161103f6102a45f395f818161024201528181610422015261055a01525f61046a01525f81816101aa015281816101d60152818161026601528181610383015281816103ce0152818161048e015281816104b6015281816104e2015261053601525f81816101f7015281816102dd015281816103a4015281816104460152818161050301526105e9015261103f5ff3fe608060405234801561000f575f80fd5b5060043610610086575f3560e01c8063c31c9c0711610059578063c31c9c0714610114578063c54e44eb14610132578063e0bab4c414610150578063edd835571461016e57610086565b8063089fe6aa1461008a5780633b85cf6a146100a85780634aa4a4fc146100d857806389a30271146100f6575b5f80fd5b61009261019e565b60405161009f9190610946565b60405180910390f35b6100c260048036038101906100bd9190610996565b6101a4565b6040516100cf91906109e3565b60405180910390f35b6100e0610408565b6040516100ed9190610a3b565b60405180910390f35b6100fe610420565b60405161010b9190610a3b565b60405180910390f35b61011c610444565b6040516101299190610aaf565b60405180910390f35b61013a610468565b6040516101479190610a3b565b60405180910390f35b61015861048c565b6040516101659190610a3b565b60405180910390f35b61018860048036038101906101839190610ac8565b6104b0565b60405161019591906109e3565b60405180910390f35b610bb881565b5f6101d17f0000000000000000000000000000000000000000000000000000000000000000333085610688565b61021c7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000846107da565b5f6040518060a0016040528073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2610bb87f0000000000000000000000000000000000000000000000000000000000000000610bb87f0000000000000000000000000000000000000000000000000000000000000000604051602001610299959493929190610b6c565b60405160208183030381529060405281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018581526020018481525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f28c0498826040518263ffffffff1660e01b81526004016103349190610ccb565b6020604051808303815f875af1158015610350573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103749190610cff565b915082821015610401576103c97f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000005f6107da565b6104007f0000000000000000000000000000000000000000000000000000000000000000303385876103fb9190610d57565b610688565b5b5092915050565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f6104dd7f0000000000000000000000000000000000000000000000000000000000000000333085610688565b6105287f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000846107da565b5f6040518060a001604052807f0000000000000000000000000000000000000000000000000000000000000000610bb87f0000000000000000000000000000000000000000000000000000000000000000610bb873c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26040516020016105a5959493929190610b6c565b60405160208183030381529060405281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018481526020015f81525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c04b8d59826040518263ffffffff1660e01b81526004016106409190610dfd565b6020604051808303815f875af115801561065c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106809190610cff565b915050919050565b5f808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b8686866040516024016106be93929190610e1d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516107289190610e8c565b5f604051808303815f865af19150503d805f8114610761576040519150601f19603f3d011682016040523d82523d5f602084013e610766565b606091505b509150915081801561079357505f815114806107925750808060200190518101906107919190610ed7565b5b5b6107d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c990610f5c565b60405180910390fd5b505050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b858560405160240161080e929190610f7a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516108789190610e8c565b5f604051808303815f865af19150503d805f81146108b1576040519150601f19603f3d011682016040523d82523d5f602084013e6108b6565b606091505b50915091508180156108e357505f815114806108e25750808060200190518101906108e19190610ed7565b5b5b610922576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091990610feb565b60405180910390fd5b5050505050565b5f62ffffff82169050919050565b61094081610929565b82525050565b5f6020820190506109595f830184610937565b92915050565b5f80fd5b5f819050919050565b61097581610963565b811461097f575f80fd5b50565b5f813590506109908161096c565b92915050565b5f80604083850312156109ac576109ab61095f565b5b5f6109b985828601610982565b92505060206109ca85828601610982565b9150509250929050565b6109dd81610963565b82525050565b5f6020820190506109f65f8301846109d4565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a25826109fc565b9050919050565b610a3581610a1b565b82525050565b5f602082019050610a4e5f830184610a2c565b92915050565b5f819050919050565b5f610a77610a72610a6d846109fc565b610a54565b6109fc565b9050919050565b5f610a8882610a5d565b9050919050565b5f610a9982610a7e565b9050919050565b610aa981610a8f565b82525050565b5f602082019050610ac25f830184610aa0565b92915050565b5f60208284031215610add57610adc61095f565b5b5f610aea84828501610982565b91505092915050565b5f8160601b9050919050565b5f610b0982610af3565b9050919050565b5f610b1a82610aff565b9050919050565b610b32610b2d82610a1b565b610b10565b82525050565b5f8160e81b9050919050565b5f610b4e82610b38565b9050919050565b610b66610b6182610929565b610b44565b82525050565b5f610b778288610b21565b601482019150610b878287610b55565b600382019150610b978286610b21565b601482019150610ba78285610b55565b600382019150610bb78284610b21565b6014820191508190509695505050505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610c0c82610bca565b610c168185610bd4565b9350610c26818560208601610be4565b610c2f81610bf2565b840191505092915050565b610c4381610a1b565b82525050565b610c5281610963565b82525050565b5f60a083015f8301518482035f860152610c728282610c02565b9150506020830151610c876020860182610c3a565b506040830151610c9a6040860182610c49565b506060830151610cad6060860182610c49565b506080830151610cc06080860182610c49565b508091505092915050565b5f6020820190508181035f830152610ce38184610c58565b905092915050565b5f81519050610cf98161096c565b92915050565b5f60208284031215610d1457610d1361095f565b5b5f610d2184828501610ceb565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610d6182610963565b9150610d6c83610963565b9250828203905081811115610d8457610d83610d2a565b5b92915050565b5f60a083015f8301518482035f860152610da48282610c02565b9150506020830151610db96020860182610c3a565b506040830151610dcc6040860182610c49565b506060830151610ddf6060860182610c49565b506080830151610df26080860182610c49565b508091505092915050565b5f6020820190508181035f830152610e158184610d8a565b905092915050565b5f606082019050610e305f830186610a2c565b610e3d6020830185610a2c565b610e4a60408301846109d4565b949350505050565b5f81905092915050565b5f610e6682610bca565b610e708185610e52565b9350610e80818560208601610be4565b80840191505092915050565b5f610e978284610e5c565b915081905092915050565b5f8115159050919050565b610eb681610ea2565b8114610ec0575f80fd5b50565b5f81519050610ed181610ead565b92915050565b5f60208284031215610eec57610eeb61095f565b5b5f610ef984828501610ec3565b91505092915050565b5f82825260208201905092915050565b7f53544600000000000000000000000000000000000000000000000000000000005f82015250565b5f610f46600383610f02565b9150610f5182610f12565b602082019050919050565b5f6020820190508181035f830152610f7381610f3a565b9050919050565b5f604082019050610f8d5f830185610a2c565b610f9a60208301846109d4565b9392505050565b7f53410000000000000000000000000000000000000000000000000000000000005f82015250565b5f610fd5600283610f02565b9150610fe082610fa1565b602082019050919050565b5f6020820190508181035f83015261100281610fc9565b905091905056fea264697066735822122039f144721d762fe0a1827d275fa40d513cbdbe369471597a7fa4067a2b4e289664736f6c634300081a0033",
							"opcodes": "PUSH2 0x100 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x12E3 CODESIZE SUB DUP1 PUSH2 0x12E3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x1A4 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP POP PUSH2 0x208 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x138 DUP3 PUSH2 0x10F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x149 DUP3 PUSH2 0x12E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x159 DUP2 PUSH2 0x13F JUMP JUMPDEST DUP2 EQ PUSH2 0x163 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x174 DUP2 PUSH2 0x150 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x183 DUP2 PUSH2 0x12E JUMP JUMPDEST DUP2 EQ PUSH2 0x18D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x19E DUP2 PUSH2 0x17A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BC JUMPI PUSH2 0x1BB PUSH2 0x10B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C9 DUP8 DUP3 DUP9 ADD PUSH2 0x166 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1DA DUP8 DUP3 DUP9 ADD PUSH2 0x190 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1EB DUP8 DUP3 DUP9 ADD PUSH2 0x190 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1FC DUP8 DUP3 DUP9 ADD PUSH2 0x190 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x103F PUSH2 0x2A4 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x242 ADD MSTORE DUP2 DUP2 PUSH2 0x422 ADD MSTORE PUSH2 0x55A ADD MSTORE PUSH0 PUSH2 0x46A ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x1AA ADD MSTORE DUP2 DUP2 PUSH2 0x1D6 ADD MSTORE DUP2 DUP2 PUSH2 0x266 ADD MSTORE DUP2 DUP2 PUSH2 0x383 ADD MSTORE DUP2 DUP2 PUSH2 0x3CE ADD MSTORE DUP2 DUP2 PUSH2 0x48E ADD MSTORE DUP2 DUP2 PUSH2 0x4B6 ADD MSTORE DUP2 DUP2 PUSH2 0x4E2 ADD MSTORE PUSH2 0x536 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x1F7 ADD MSTORE DUP2 DUP2 PUSH2 0x2DD ADD MSTORE DUP2 DUP2 PUSH2 0x3A4 ADD MSTORE DUP2 DUP2 PUSH2 0x446 ADD MSTORE DUP2 DUP2 PUSH2 0x503 ADD MSTORE PUSH2 0x5E9 ADD MSTORE PUSH2 0x103F PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC31C9C07 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0xC54E44EB EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0xE0BAB4C4 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0xEDD83557 EQ PUSH2 0x16E JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x89FE6AA EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x3B85CF6A EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0xF6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x92 PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST PUSH2 0x1A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF SWAP2 SWAP1 PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE0 PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFE PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10B SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11C PUSH2 0x444 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0xAAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH2 0x468 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x48C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x1D1 PUSH32 0x0 CALLER ADDRESS DUP6 PUSH2 0x688 JUMP JUMPDEST PUSH2 0x21C PUSH32 0x0 PUSH32 0x0 DUP5 PUSH2 0x7DA JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH2 0xBB8 PUSH32 0x0 PUSH2 0xBB8 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x299 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF28C0498 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP2 SWAP1 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x350 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 LT ISZERO PUSH2 0x401 JUMPI PUSH2 0x3C9 PUSH32 0x0 PUSH32 0x0 PUSH0 PUSH2 0x7DA JUMP JUMPDEST PUSH2 0x400 PUSH32 0x0 ADDRESS CALLER DUP6 DUP8 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0xD57 JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x4DD PUSH32 0x0 CALLER ADDRESS DUP6 PUSH2 0x688 JUMP JUMPDEST PUSH2 0x528 PUSH32 0x0 PUSH32 0x0 DUP5 PUSH2 0x7DA JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0x0 PUSH2 0xBB8 PUSH32 0x0 PUSH2 0xBB8 PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5A5 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC04B8D59 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x640 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x65C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x680 SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x6BE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x728 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x761 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x766 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x793 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x792 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x791 SWAP2 SWAP1 PUSH2 0xED7 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x7D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C9 SWAP1 PUSH2 0xF5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x80E SWAP3 SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x878 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x8E3 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x8E2 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x8E1 SWAP2 SWAP1 PUSH2 0xED7 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x922 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x919 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x940 DUP2 PUSH2 0x929 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x959 PUSH0 DUP4 ADD DUP5 PUSH2 0x937 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x975 DUP2 PUSH2 0x963 JUMP JUMPDEST DUP2 EQ PUSH2 0x97F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x990 DUP2 PUSH2 0x96C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9AC JUMPI PUSH2 0x9AB PUSH2 0x95F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9B9 DUP6 DUP3 DUP7 ADD PUSH2 0x982 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9CA DUP6 DUP3 DUP7 ADD PUSH2 0x982 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x9DD DUP2 PUSH2 0x963 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9F6 PUSH0 DUP4 ADD DUP5 PUSH2 0x9D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA25 DUP3 PUSH2 0x9FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA35 DUP2 PUSH2 0xA1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA4E PUSH0 DUP4 ADD DUP5 PUSH2 0xA2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA77 PUSH2 0xA72 PUSH2 0xA6D DUP5 PUSH2 0x9FC JUMP JUMPDEST PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x9FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA88 DUP3 PUSH2 0xA5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA99 DUP3 PUSH2 0xA7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA9 DUP2 PUSH2 0xA8F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAC2 PUSH0 DUP4 ADD DUP5 PUSH2 0xAA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xADD JUMPI PUSH2 0xADC PUSH2 0x95F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAEA DUP5 DUP3 DUP6 ADD PUSH2 0x982 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB09 DUP3 PUSH2 0xAF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB1A DUP3 PUSH2 0xAFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB32 PUSH2 0xB2D DUP3 PUSH2 0xA1B JUMP JUMPDEST PUSH2 0xB10 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xE8 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB4E DUP3 PUSH2 0xB38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB66 PUSH2 0xB61 DUP3 PUSH2 0x929 JUMP JUMPDEST PUSH2 0xB44 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB77 DUP3 DUP9 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xB87 DUP3 DUP8 PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SWAP2 POP PUSH2 0xB97 DUP3 DUP7 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xBA7 DUP3 DUP6 PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SWAP2 POP PUSH2 0xBB7 DUP3 DUP5 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC0C DUP3 PUSH2 0xBCA JUMP JUMPDEST PUSH2 0xC16 DUP2 DUP6 PUSH2 0xBD4 JUMP JUMPDEST SWAP4 POP PUSH2 0xC26 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0xC2F DUP2 PUSH2 0xBF2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC43 DUP2 PUSH2 0xA1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC52 DUP2 PUSH2 0x963 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0xC72 DUP3 DUP3 PUSH2 0xC02 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0xC87 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xC3A JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0xC9A PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0xC49 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0xCAD PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0xC49 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xCC0 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0xC49 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCE3 DUP2 DUP5 PUSH2 0xC58 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCF9 DUP2 PUSH2 0x96C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD14 JUMPI PUSH2 0xD13 PUSH2 0x95F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD21 DUP5 DUP3 DUP6 ADD PUSH2 0xCEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD61 DUP3 PUSH2 0x963 JUMP JUMPDEST SWAP2 POP PUSH2 0xD6C DUP4 PUSH2 0x963 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xD84 JUMPI PUSH2 0xD83 PUSH2 0xD2A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0xDA4 DUP3 DUP3 PUSH2 0xC02 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0xDB9 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xC3A JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0xDCC PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0xC49 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0xDDF PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0xC49 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xDF2 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0xC49 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE15 DUP2 DUP5 PUSH2 0xD8A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE30 PUSH0 DUP4 ADD DUP7 PUSH2 0xA2C JUMP JUMPDEST PUSH2 0xE3D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA2C JUMP JUMPDEST PUSH2 0xE4A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9D4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE66 DUP3 PUSH2 0xBCA JUMP JUMPDEST PUSH2 0xE70 DUP2 DUP6 PUSH2 0xE52 JUMP JUMPDEST SWAP4 POP PUSH2 0xE80 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xBE4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE97 DUP3 DUP5 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB6 DUP2 PUSH2 0xEA2 JUMP JUMPDEST DUP2 EQ PUSH2 0xEC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xED1 DUP2 PUSH2 0xEAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEEC JUMPI PUSH2 0xEEB PUSH2 0x95F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEF9 DUP5 DUP3 DUP6 ADD PUSH2 0xEC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354460000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF46 PUSH1 0x3 DUP4 PUSH2 0xF02 JUMP JUMPDEST SWAP2 POP PUSH2 0xF51 DUP3 PUSH2 0xF12 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF73 DUP2 PUSH2 0xF3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF8D PUSH0 DUP4 ADD DUP6 PUSH2 0xA2C JUMP JUMPDEST PUSH2 0xF9A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9D4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFD5 PUSH1 0x2 DUP4 PUSH2 0xF02 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE0 DUP3 PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1002 DUP2 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY CALL PREVRANDAO PUSH19 0x1D762FE0A1827D275FA40D513CBDBE36947159 PUSH27 0x7FA4067A2B4E289664736F6C634300081A00330000000000000000 ",
							"sourceMap": "205:3796:4:-:0;;;562:191;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;667:11;654:24;;;;;;;;;;695:4;689:10;;;;;;;;;;717:5;710:12;;;;;;;;;;740:5;733:12;;;;;;;;;;562:191;;;;205:3796;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:115::-;624:7;653:24;671:5;653:24;:::i;:::-;642:35;;568:115;;;:::o;689:160::-;781:43;818:5;781:43;:::i;:::-;774:5;771:54;761:82;;839:1;836;829:12;761:82;689:160;:::o;855:181::-;931:5;962:6;956:13;947:22;;978:52;1024:5;978:52;:::i;:::-;855:181;;;;:::o;1042:122::-;1115:24;1133:5;1115:24;:::i;:::-;1108:5;1105:35;1095:63;;1154:1;1151;1144:12;1095:63;1042:122;:::o;1170:143::-;1227:5;1258:6;1252:13;1243:22;;1274:33;1301:5;1274:33;:::i;:::-;1170:143;;;;:::o;1319:858::-;1435:6;1443;1451;1459;1508:3;1496:9;1487:7;1483:23;1479:33;1476:120;;;1515:79;;:::i;:::-;1476:120;1635:1;1660:83;1735:7;1726:6;1715:9;1711:22;1660:83;:::i;:::-;1650:93;;1606:147;1792:2;1818:64;1874:7;1865:6;1854:9;1850:22;1818:64;:::i;:::-;1808:74;;1763:129;1931:2;1957:64;2013:7;2004:6;1993:9;1989:22;1957:64;:::i;:::-;1947:74;;1902:129;2070:2;2096:64;2152:7;2143:6;2132:9;2128:22;2096:64;:::i;:::-;2086:74;;2041:129;1319:858;;;;;;;:::o;205:3796:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DAI_375": {
									"entryPoint": 1164,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USDC_379": {
									"entryPoint": 1056,
									"id": 379,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USDT_377": {
									"entryPoint": 1128,
									"id": 377,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WETH9_382": {
									"entryPoint": 1032,
									"id": 382,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolFee_385": {
									"entryPoint": 414,
									"id": 385,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeApprove_335": {
									"entryPoint": 2010,
									"id": 335,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_243": {
									"entryPoint": 1672,
									"id": 243,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@swapExactInputMultihop_477": {
									"entryPoint": 1200,
									"id": 477,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swapExactOutputMultihop_573": {
									"entryPoint": 420,
									"id": 573,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@swapRouter_369": {
									"entryPoint": 1092,
									"id": 369,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 3130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 2849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr": {
									"entryPoint": 3074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack": {
									"entryPoint": 2720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExactInputParams_$135_memory_ptr_to_t_struct$_ExactInputParams_$135_memory_ptr_fromStack": {
									"entryPoint": 3466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExactOutputParams_$181_memory_ptr_to_t_struct$_ExactOutputParams_$181_memory_ptr_fromStack": {
									"entryPoint": 3160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint24_to_t_uint24_fromStack": {
									"entryPoint": 2359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24_nonPadded_inplace_fromStack": {
									"entryPoint": 2901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 3145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_address_t_uint24_t_address_t_uint24_t_address__to_t_address_t_uint24_t_address_t_uint24_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2924,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3613,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3962,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed": {
									"entryPoint": 2735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputParams_$135_memory_ptr__to_t_struct$_ExactInputParams_$135_memory_ptr__fromStack_reversed": {
									"entryPoint": 3581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactOutputParams_$181_memory_ptr__to_t_struct$_ExactOutputParams_$181_memory_ptr__fromStack_reversed": {
									"entryPoint": 3275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed": {
									"entryPoint": 2374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 3018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr": {
									"entryPoint": 3028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 2345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ISwapRouter_$191_to_t_address": {
									"entryPoint": 2703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3044,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 2832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 2815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint24": {
									"entryPoint": 2884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3370,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2399,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_232": {
									"entryPoint": 2872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_96": {
									"entryPoint": 2803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa": {
									"entryPoint": 4001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86": {
									"entryPoint": 3858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15210:5",
										"nodeType": "YulBlock",
										"src": "0:15210:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:47:5",
													"nodeType": "YulBlock",
													"src": "51:47:5",
													"statements": [
														{
															"nativeSrc": "61:31:5",
															"nodeType": "YulAssignment",
															"src": "61:31:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "76:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "83:8:5",
																		"nodeType": "YulLiteral",
																		"src": "83:8:5",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "72:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:5"
																},
																"nativeSrc": "72:20:5",
																"nodeType": "YulFunctionCall",
																"src": "72:20:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "7:91:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:5",
														"nodeType": "YulTypedName",
														"src": "33:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:5",
														"nodeType": "YulTypedName",
														"src": "43:7:5",
														"type": ""
													}
												],
												"src": "7:91:5"
											},
											{
												"body": {
													"nativeSrc": "167:52:5",
													"nodeType": "YulBlock",
													"src": "167:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "184:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "184:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "206:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "206:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "189:16:5",
																			"nodeType": "YulIdentifier",
																			"src": "189:16:5"
																		},
																		"nativeSrc": "189:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "189:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "177:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "177:6:5"
																},
																"nativeSrc": "177:36:5",
																"nodeType": "YulFunctionCall",
																"src": "177:36:5"
															},
															"nativeSrc": "177:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "177:36:5"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
												"nativeSrc": "104:115:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "155:5:5",
														"nodeType": "YulTypedName",
														"src": "155:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "162:3:5",
														"nodeType": "YulTypedName",
														"src": "162:3:5",
														"type": ""
													}
												],
												"src": "104:115:5"
											},
											{
												"body": {
													"nativeSrc": "321:122:5",
													"nodeType": "YulBlock",
													"src": "321:122:5",
													"statements": [
														{
															"nativeSrc": "331:26:5",
															"nodeType": "YulAssignment",
															"src": "331:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "343:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "343:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "354:2:5",
																		"nodeType": "YulLiteral",
																		"src": "354:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "339:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "339:3:5"
																},
																"nativeSrc": "339:18:5",
																"nodeType": "YulFunctionCall",
																"src": "339:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "331:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "331:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "409:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "409:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "422:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "422:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "433:1:5",
																				"nodeType": "YulLiteral",
																				"src": "433:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "418:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "418:3:5"
																		},
																		"nativeSrc": "418:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "418:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
																	"nativeSrc": "367:41:5",
																	"nodeType": "YulIdentifier",
																	"src": "367:41:5"
																},
																"nativeSrc": "367:69:5",
																"nodeType": "YulFunctionCall",
																"src": "367:69:5"
															},
															"nativeSrc": "367:69:5",
															"nodeType": "YulExpressionStatement",
															"src": "367:69:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed",
												"nativeSrc": "225:218:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "293:9:5",
														"nodeType": "YulTypedName",
														"src": "293:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "305:6:5",
														"nodeType": "YulTypedName",
														"src": "305:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "316:4:5",
														"nodeType": "YulTypedName",
														"src": "316:4:5",
														"type": ""
													}
												],
												"src": "225:218:5"
											},
											{
												"body": {
													"nativeSrc": "489:35:5",
													"nodeType": "YulBlock",
													"src": "489:35:5",
													"statements": [
														{
															"nativeSrc": "499:19:5",
															"nodeType": "YulAssignment",
															"src": "499:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "515:2:5",
																		"nodeType": "YulLiteral",
																		"src": "515:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "509:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "509:5:5"
																},
																"nativeSrc": "509:9:5",
																"nodeType": "YulFunctionCall",
																"src": "509:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "499:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "499:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "449:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "482:6:5",
														"nodeType": "YulTypedName",
														"src": "482:6:5",
														"type": ""
													}
												],
												"src": "449:75:5"
											},
											{
												"body": {
													"nativeSrc": "619:28:5",
													"nodeType": "YulBlock",
													"src": "619:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "636:1:5",
																		"nodeType": "YulLiteral",
																		"src": "636:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "639:1:5",
																		"nodeType": "YulLiteral",
																		"src": "639:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "629:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "629:6:5"
																},
																"nativeSrc": "629:12:5",
																"nodeType": "YulFunctionCall",
																"src": "629:12:5"
															},
															"nativeSrc": "629:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "629:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "530:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "530:117:5"
											},
											{
												"body": {
													"nativeSrc": "742:28:5",
													"nodeType": "YulBlock",
													"src": "742:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "759:1:5",
																		"nodeType": "YulLiteral",
																		"src": "759:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "762:1:5",
																		"nodeType": "YulLiteral",
																		"src": "762:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "752:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:5"
																},
																"nativeSrc": "752:12:5",
																"nodeType": "YulFunctionCall",
																"src": "752:12:5"
															},
															"nativeSrc": "752:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "752:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "653:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "653:117:5"
											},
											{
												"body": {
													"nativeSrc": "821:32:5",
													"nodeType": "YulBlock",
													"src": "821:32:5",
													"statements": [
														{
															"nativeSrc": "831:16:5",
															"nodeType": "YulAssignment",
															"src": "831:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "842:5:5",
																"nodeType": "YulIdentifier",
																"src": "842:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "831:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "831:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "776:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "803:5:5",
														"nodeType": "YulTypedName",
														"src": "803:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "813:7:5",
														"nodeType": "YulTypedName",
														"src": "813:7:5",
														"type": ""
													}
												],
												"src": "776:77:5"
											},
											{
												"body": {
													"nativeSrc": "902:79:5",
													"nodeType": "YulBlock",
													"src": "902:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "959:16:5",
																"nodeType": "YulBlock",
																"src": "959:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "968:1:5",
																					"nodeType": "YulLiteral",
																					"src": "968:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "971:1:5",
																					"nodeType": "YulLiteral",
																					"src": "971:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "961:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "961:6:5"
																			},
																			"nativeSrc": "961:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "961:12:5"
																		},
																		"nativeSrc": "961:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "961:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "925:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "925:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "950:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "950:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "932:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "932:17:5"
																				},
																				"nativeSrc": "932:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "932:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "922:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "922:2:5"
																		},
																		"nativeSrc": "922:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "922:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "915:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "915:6:5"
																},
																"nativeSrc": "915:43:5",
																"nodeType": "YulFunctionCall",
																"src": "915:43:5"
															},
															"nativeSrc": "912:63:5",
															"nodeType": "YulIf",
															"src": "912:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "859:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "895:5:5",
														"nodeType": "YulTypedName",
														"src": "895:5:5",
														"type": ""
													}
												],
												"src": "859:122:5"
											},
											{
												"body": {
													"nativeSrc": "1039:87:5",
													"nodeType": "YulBlock",
													"src": "1039:87:5",
													"statements": [
														{
															"nativeSrc": "1049:29:5",
															"nodeType": "YulAssignment",
															"src": "1049:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1071:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1071:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1058:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1058:12:5"
																},
																"nativeSrc": "1058:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1058:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1049:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1049:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1114:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1114:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1087:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1087:26:5"
																},
																"nativeSrc": "1087:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1087:33:5"
															},
															"nativeSrc": "1087:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1087:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "987:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1017:6:5",
														"nodeType": "YulTypedName",
														"src": "1017:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1025:3:5",
														"nodeType": "YulTypedName",
														"src": "1025:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1033:5:5",
														"nodeType": "YulTypedName",
														"src": "1033:5:5",
														"type": ""
													}
												],
												"src": "987:139:5"
											},
											{
												"body": {
													"nativeSrc": "1215:391:5",
													"nodeType": "YulBlock",
													"src": "1215:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1261:83:5",
																"nodeType": "YulBlock",
																"src": "1261:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1263:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1263:77:5"
																			},
																			"nativeSrc": "1263:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1263:79:5"
																		},
																		"nativeSrc": "1263:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1263:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1236:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1236:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1245:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1245:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1232:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1232:3:5"
																		},
																		"nativeSrc": "1232:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1232:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1257:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1257:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1228:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1228:3:5"
																},
																"nativeSrc": "1228:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1228:32:5"
															},
															"nativeSrc": "1225:119:5",
															"nodeType": "YulIf",
															"src": "1225:119:5"
														},
														{
															"nativeSrc": "1354:117:5",
															"nodeType": "YulBlock",
															"src": "1354:117:5",
															"statements": [
																{
																	"nativeSrc": "1369:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1369:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1383:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1383:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1373:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1373:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1398:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1398:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1433:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1433:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1444:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1444:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1429:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1429:3:5"
																				},
																				"nativeSrc": "1429:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1429:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1453:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1453:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1408:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1408:20:5"
																		},
																		"nativeSrc": "1408:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1408:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1398:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1398:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1481:118:5",
															"nodeType": "YulBlock",
															"src": "1481:118:5",
															"statements": [
																{
																	"nativeSrc": "1496:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1510:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1510:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1500:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1526:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1526:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1561:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1561:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1572:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1572:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1557:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1557:3:5"
																				},
																				"nativeSrc": "1557:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1557:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1581:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1581:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1536:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1536:20:5"
																		},
																		"nativeSrc": "1536:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1526:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1526:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1132:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1177:9:5",
														"nodeType": "YulTypedName",
														"src": "1177:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1188:7:5",
														"nodeType": "YulTypedName",
														"src": "1188:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1200:6:5",
														"nodeType": "YulTypedName",
														"src": "1200:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1208:6:5",
														"nodeType": "YulTypedName",
														"src": "1208:6:5",
														"type": ""
													}
												],
												"src": "1132:474:5"
											},
											{
												"body": {
													"nativeSrc": "1677:53:5",
													"nodeType": "YulBlock",
													"src": "1677:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1694:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1717:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1717:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1699:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1699:17:5"
																		},
																		"nativeSrc": "1699:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1699:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1687:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1687:6:5"
																},
																"nativeSrc": "1687:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1687:37:5"
															},
															"nativeSrc": "1687:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1687:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1612:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1665:5:5",
														"nodeType": "YulTypedName",
														"src": "1665:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1672:3:5",
														"nodeType": "YulTypedName",
														"src": "1672:3:5",
														"type": ""
													}
												],
												"src": "1612:118:5"
											},
											{
												"body": {
													"nativeSrc": "1834:124:5",
													"nodeType": "YulBlock",
													"src": "1834:124:5",
													"statements": [
														{
															"nativeSrc": "1844:26:5",
															"nodeType": "YulAssignment",
															"src": "1844:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1856:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1856:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1867:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1867:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1852:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1852:3:5"
																},
																"nativeSrc": "1852:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1852:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1844:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1844:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1924:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1924:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1937:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1937:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1948:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1948:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1933:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1933:3:5"
																		},
																		"nativeSrc": "1933:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1933:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1880:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1880:43:5"
																},
																"nativeSrc": "1880:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1880:71:5"
															},
															"nativeSrc": "1880:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1880:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1736:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1806:9:5",
														"nodeType": "YulTypedName",
														"src": "1806:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1818:6:5",
														"nodeType": "YulTypedName",
														"src": "1818:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1829:4:5",
														"nodeType": "YulTypedName",
														"src": "1829:4:5",
														"type": ""
													}
												],
												"src": "1736:222:5"
											},
											{
												"body": {
													"nativeSrc": "2009:81:5",
													"nodeType": "YulBlock",
													"src": "2009:81:5",
													"statements": [
														{
															"nativeSrc": "2019:65:5",
															"nodeType": "YulAssignment",
															"src": "2019:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2034:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2034:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2041:42:5",
																		"nodeType": "YulLiteral",
																		"src": "2041:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2030:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2030:3:5"
																},
																"nativeSrc": "2030:54:5",
																"nodeType": "YulFunctionCall",
																"src": "2030:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2019:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "2019:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1964:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1991:5:5",
														"nodeType": "YulTypedName",
														"src": "1991:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2001:7:5",
														"nodeType": "YulTypedName",
														"src": "2001:7:5",
														"type": ""
													}
												],
												"src": "1964:126:5"
											},
											{
												"body": {
													"nativeSrc": "2141:51:5",
													"nodeType": "YulBlock",
													"src": "2141:51:5",
													"statements": [
														{
															"nativeSrc": "2151:35:5",
															"nodeType": "YulAssignment",
															"src": "2151:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2180:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2180:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2162:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "2162:17:5"
																},
																"nativeSrc": "2162:24:5",
																"nodeType": "YulFunctionCall",
																"src": "2162:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2151:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "2151:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2096:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2123:5:5",
														"nodeType": "YulTypedName",
														"src": "2123:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2133:7:5",
														"nodeType": "YulTypedName",
														"src": "2133:7:5",
														"type": ""
													}
												],
												"src": "2096:96:5"
											},
											{
												"body": {
													"nativeSrc": "2263:53:5",
													"nodeType": "YulBlock",
													"src": "2263:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2280:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2280:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2303:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2303:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2285:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2285:17:5"
																		},
																		"nativeSrc": "2285:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2285:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2273:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2273:6:5"
																},
																"nativeSrc": "2273:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2273:37:5"
															},
															"nativeSrc": "2273:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2273:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2198:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2251:5:5",
														"nodeType": "YulTypedName",
														"src": "2251:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2258:3:5",
														"nodeType": "YulTypedName",
														"src": "2258:3:5",
														"type": ""
													}
												],
												"src": "2198:118:5"
											},
											{
												"body": {
													"nativeSrc": "2420:124:5",
													"nodeType": "YulBlock",
													"src": "2420:124:5",
													"statements": [
														{
															"nativeSrc": "2430:26:5",
															"nodeType": "YulAssignment",
															"src": "2430:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2442:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2442:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2453:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2453:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2438:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2438:3:5"
																},
																"nativeSrc": "2438:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2438:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2430:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2430:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2510:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2510:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2523:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2523:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2534:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2534:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2519:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2519:3:5"
																		},
																		"nativeSrc": "2519:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2519:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2466:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2466:43:5"
																},
																"nativeSrc": "2466:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2466:71:5"
															},
															"nativeSrc": "2466:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2466:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2322:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2392:9:5",
														"nodeType": "YulTypedName",
														"src": "2392:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2404:6:5",
														"nodeType": "YulTypedName",
														"src": "2404:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2415:4:5",
														"nodeType": "YulTypedName",
														"src": "2415:4:5",
														"type": ""
													}
												],
												"src": "2322:222:5"
											},
											{
												"body": {
													"nativeSrc": "2582:28:5",
													"nodeType": "YulBlock",
													"src": "2582:28:5",
													"statements": [
														{
															"nativeSrc": "2592:12:5",
															"nodeType": "YulAssignment",
															"src": "2592:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "2599:5:5",
																"nodeType": "YulIdentifier",
																"src": "2599:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2592:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2592:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2550:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2568:5:5",
														"nodeType": "YulTypedName",
														"src": "2568:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2578:3:5",
														"nodeType": "YulTypedName",
														"src": "2578:3:5",
														"type": ""
													}
												],
												"src": "2550:60:5"
											},
											{
												"body": {
													"nativeSrc": "2676:82:5",
													"nodeType": "YulBlock",
													"src": "2676:82:5",
													"statements": [
														{
															"nativeSrc": "2686:66:5",
															"nodeType": "YulAssignment",
															"src": "2686:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2744:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2744:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2726:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2726:17:5"
																				},
																				"nativeSrc": "2726:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2726:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2717:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "2717:8:5"
																		},
																		"nativeSrc": "2717:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2717:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2699:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "2699:17:5"
																},
																"nativeSrc": "2699:53:5",
																"nodeType": "YulFunctionCall",
																"src": "2699:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2686:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2686:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2616:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2656:5:5",
														"nodeType": "YulTypedName",
														"src": "2656:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2666:9:5",
														"nodeType": "YulTypedName",
														"src": "2666:9:5",
														"type": ""
													}
												],
												"src": "2616:142:5"
											},
											{
												"body": {
													"nativeSrc": "2824:66:5",
													"nodeType": "YulBlock",
													"src": "2824:66:5",
													"statements": [
														{
															"nativeSrc": "2834:50:5",
															"nodeType": "YulAssignment",
															"src": "2834:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2878:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2878:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2847:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "2847:30:5"
																},
																"nativeSrc": "2847:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2847:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2834:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2834:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2764:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2804:5:5",
														"nodeType": "YulTypedName",
														"src": "2804:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2814:9:5",
														"nodeType": "YulTypedName",
														"src": "2814:9:5",
														"type": ""
													}
												],
												"src": "2764:126:5"
											},
											{
												"body": {
													"nativeSrc": "2975:66:5",
													"nodeType": "YulBlock",
													"src": "2975:66:5",
													"statements": [
														{
															"nativeSrc": "2985:50:5",
															"nodeType": "YulAssignment",
															"src": "2985:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3029:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3029:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2998:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "2998:30:5"
																},
																"nativeSrc": "2998:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2998:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2985:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2985:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISwapRouter_$191_to_t_address",
												"nativeSrc": "2896:145:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2955:5:5",
														"nodeType": "YulTypedName",
														"src": "2955:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2965:9:5",
														"nodeType": "YulTypedName",
														"src": "2965:9:5",
														"type": ""
													}
												],
												"src": "2896:145:5"
											},
											{
												"body": {
													"nativeSrc": "3131:85:5",
													"nodeType": "YulBlock",
													"src": "3131:85:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3148:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3148:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3203:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3203:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ISwapRouter_$191_to_t_address",
																			"nativeSrc": "3153:49:5",
																			"nodeType": "YulIdentifier",
																			"src": "3153:49:5"
																		},
																		"nativeSrc": "3153:56:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3153:56:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3141:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3141:6:5"
																},
																"nativeSrc": "3141:69:5",
																"nodeType": "YulFunctionCall",
																"src": "3141:69:5"
															},
															"nativeSrc": "3141:69:5",
															"nodeType": "YulExpressionStatement",
															"src": "3141:69:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack",
												"nativeSrc": "3047:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3119:5:5",
														"nodeType": "YulTypedName",
														"src": "3119:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3126:3:5",
														"nodeType": "YulTypedName",
														"src": "3126:3:5",
														"type": ""
													}
												],
												"src": "3047:169:5"
											},
											{
												"body": {
													"nativeSrc": "3339:143:5",
													"nodeType": "YulBlock",
													"src": "3339:143:5",
													"statements": [
														{
															"nativeSrc": "3349:26:5",
															"nodeType": "YulAssignment",
															"src": "3349:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3361:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3361:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3372:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3372:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3357:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3357:3:5"
																},
																"nativeSrc": "3357:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3357:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3349:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3349:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3448:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3448:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3461:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3461:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3472:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3472:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3457:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3457:3:5"
																		},
																		"nativeSrc": "3457:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3457:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack",
																	"nativeSrc": "3385:62:5",
																	"nodeType": "YulIdentifier",
																	"src": "3385:62:5"
																},
																"nativeSrc": "3385:90:5",
																"nodeType": "YulFunctionCall",
																"src": "3385:90:5"
															},
															"nativeSrc": "3385:90:5",
															"nodeType": "YulExpressionStatement",
															"src": "3385:90:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed",
												"nativeSrc": "3222:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3311:9:5",
														"nodeType": "YulTypedName",
														"src": "3311:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3323:6:5",
														"nodeType": "YulTypedName",
														"src": "3323:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3334:4:5",
														"nodeType": "YulTypedName",
														"src": "3334:4:5",
														"type": ""
													}
												],
												"src": "3222:260:5"
											},
											{
												"body": {
													"nativeSrc": "3554:263:5",
													"nodeType": "YulBlock",
													"src": "3554:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3600:83:5",
																"nodeType": "YulBlock",
																"src": "3600:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3602:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3602:77:5"
																			},
																			"nativeSrc": "3602:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3602:79:5"
																		},
																		"nativeSrc": "3602:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3602:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3575:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3575:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3584:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3584:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3571:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3571:3:5"
																		},
																		"nativeSrc": "3571:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3571:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3596:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3596:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3567:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3567:3:5"
																},
																"nativeSrc": "3567:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3567:32:5"
															},
															"nativeSrc": "3564:119:5",
															"nodeType": "YulIf",
															"src": "3564:119:5"
														},
														{
															"nativeSrc": "3693:117:5",
															"nodeType": "YulBlock",
															"src": "3693:117:5",
															"statements": [
																{
																	"nativeSrc": "3708:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3708:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3722:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3722:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3712:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3712:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3737:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3737:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3772:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3772:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3783:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3783:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3768:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3768:3:5"
																				},
																				"nativeSrc": "3768:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3768:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3792:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3792:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3747:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3747:20:5"
																		},
																		"nativeSrc": "3747:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3747:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3737:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3737:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3488:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3524:9:5",
														"nodeType": "YulTypedName",
														"src": "3524:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3535:7:5",
														"nodeType": "YulTypedName",
														"src": "3535:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3547:6:5",
														"nodeType": "YulTypedName",
														"src": "3547:6:5",
														"type": ""
													}
												],
												"src": "3488:329:5"
											},
											{
												"body": {
													"nativeSrc": "3865:52:5",
													"nodeType": "YulBlock",
													"src": "3865:52:5",
													"statements": [
														{
															"nativeSrc": "3875:35:5",
															"nodeType": "YulAssignment",
															"src": "3875:35:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3900:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3900:2:5",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3904:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3904:5:5"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "3896:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3896:3:5"
																},
																"nativeSrc": "3896:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3896:14:5"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3875:8:5",
																	"nodeType": "YulIdentifier",
																	"src": "3875:8:5"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "3823:94:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3846:5:5",
														"nodeType": "YulTypedName",
														"src": "3846:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3856:8:5",
														"nodeType": "YulTypedName",
														"src": "3856:8:5",
														"type": ""
													}
												],
												"src": "3823:94:5"
											},
											{
												"body": {
													"nativeSrc": "3970:47:5",
													"nodeType": "YulBlock",
													"src": "3970:47:5",
													"statements": [
														{
															"nativeSrc": "3980:31:5",
															"nodeType": "YulAssignment",
															"src": "3980:31:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4005:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4005:5:5"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "3991:13:5",
																	"nodeType": "YulIdentifier",
																	"src": "3991:13:5"
																},
																"nativeSrc": "3991:20:5",
																"nodeType": "YulFunctionCall",
																"src": "3991:20:5"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "3980:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "3980:7:5"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "3923:94:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3952:5:5",
														"nodeType": "YulTypedName",
														"src": "3952:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "3962:7:5",
														"nodeType": "YulTypedName",
														"src": "3962:7:5",
														"type": ""
													}
												],
												"src": "3923:94:5"
											},
											{
												"body": {
													"nativeSrc": "4070:53:5",
													"nodeType": "YulBlock",
													"src": "4070:53:5",
													"statements": [
														{
															"nativeSrc": "4080:37:5",
															"nodeType": "YulAssignment",
															"src": "4080:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4111:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4111:5:5"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "4091:19:5",
																	"nodeType": "YulIdentifier",
																	"src": "4091:19:5"
																},
																"nativeSrc": "4091:26:5",
																"nodeType": "YulFunctionCall",
																"src": "4091:26:5"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "4080:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "4080:7:5"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "4023:100:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4052:5:5",
														"nodeType": "YulTypedName",
														"src": "4052:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "4062:7:5",
														"nodeType": "YulTypedName",
														"src": "4062:7:5",
														"type": ""
													}
												],
												"src": "4023:100:5"
											},
											{
												"body": {
													"nativeSrc": "4212:74:5",
													"nodeType": "YulBlock",
													"src": "4212:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4229:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4229:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4272:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4272:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4254:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "4254:17:5"
																				},
																				"nativeSrc": "4254:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4254:24:5"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "4234:19:5",
																			"nodeType": "YulIdentifier",
																			"src": "4234:19:5"
																		},
																		"nativeSrc": "4234:45:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4234:45:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4222:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4222:6:5"
																},
																"nativeSrc": "4222:58:5",
																"nodeType": "YulFunctionCall",
																"src": "4222:58:5"
															},
															"nativeSrc": "4222:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "4222:58:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "4129:157:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4200:5:5",
														"nodeType": "YulTypedName",
														"src": "4200:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4207:3:5",
														"nodeType": "YulTypedName",
														"src": "4207:3:5",
														"type": ""
													}
												],
												"src": "4129:157:5"
											},
											{
												"body": {
													"nativeSrc": "4335:53:5",
													"nodeType": "YulBlock",
													"src": "4335:53:5",
													"statements": [
														{
															"nativeSrc": "4345:36:5",
															"nodeType": "YulAssignment",
															"src": "4345:36:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4370:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4370:3:5",
																		"type": "",
																		"value": "232"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4375:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4375:5:5"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4366:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4366:3:5"
																},
																"nativeSrc": "4366:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4366:15:5"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4345:8:5",
																	"nodeType": "YulIdentifier",
																	"src": "4345:8:5"
																}
															]
														}
													]
												},
												"name": "shift_left_232",
												"nativeSrc": "4292:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4316:5:5",
														"nodeType": "YulTypedName",
														"src": "4316:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4326:8:5",
														"nodeType": "YulTypedName",
														"src": "4326:8:5",
														"type": ""
													}
												],
												"src": "4292:96:5"
											},
											{
												"body": {
													"nativeSrc": "4440:48:5",
													"nodeType": "YulBlock",
													"src": "4440:48:5",
													"statements": [
														{
															"nativeSrc": "4450:32:5",
															"nodeType": "YulAssignment",
															"src": "4450:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4476:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4476:5:5"
																	}
																],
																"functionName": {
																	"name": "shift_left_232",
																	"nativeSrc": "4461:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "4461:14:5"
																},
																"nativeSrc": "4461:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4461:21:5"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "4450:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "4450:7:5"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint24",
												"nativeSrc": "4394:94:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4422:5:5",
														"nodeType": "YulTypedName",
														"src": "4422:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "4432:7:5",
														"nodeType": "YulTypedName",
														"src": "4432:7:5",
														"type": ""
													}
												],
												"src": "4394:94:5"
											},
											{
												"body": {
													"nativeSrc": "4575:72:5",
													"nodeType": "YulBlock",
													"src": "4575:72:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4592:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4592:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4633:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4633:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint24",
																					"nativeSrc": "4616:16:5",
																					"nodeType": "YulIdentifier",
																					"src": "4616:16:5"
																				},
																				"nativeSrc": "4616:23:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4616:23:5"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint24",
																			"nativeSrc": "4597:18:5",
																			"nodeType": "YulIdentifier",
																			"src": "4597:18:5"
																		},
																		"nativeSrc": "4597:43:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4597:43:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4585:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4585:6:5"
																},
																"nativeSrc": "4585:56:5",
																"nodeType": "YulFunctionCall",
																"src": "4585:56:5"
															},
															"nativeSrc": "4585:56:5",
															"nodeType": "YulExpressionStatement",
															"src": "4585:56:5"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24_nonPadded_inplace_fromStack",
												"nativeSrc": "4494:153:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4563:5:5",
														"nodeType": "YulTypedName",
														"src": "4563:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4570:3:5",
														"nodeType": "YulTypedName",
														"src": "4570:3:5",
														"type": ""
													}
												],
												"src": "4494:153:5"
											},
											{
												"body": {
													"nativeSrc": "4877:586:5",
													"nodeType": "YulBlock",
													"src": "4877:586:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4950:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4950:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "4959:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4959:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "4888:61:5",
																	"nodeType": "YulIdentifier",
																	"src": "4888:61:5"
																},
																"nativeSrc": "4888:75:5",
																"nodeType": "YulFunctionCall",
																"src": "4888:75:5"
															},
															"nativeSrc": "4888:75:5",
															"nodeType": "YulExpressionStatement",
															"src": "4888:75:5"
														},
														{
															"nativeSrc": "4972:19:5",
															"nodeType": "YulAssignment",
															"src": "4972:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4983:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4983:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4979:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4979:3:5"
																},
																"nativeSrc": "4979:12:5",
																"nodeType": "YulFunctionCall",
																"src": "4979:12:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4972:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4972:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5061:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5061:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5070:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5070:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_nonPadded_inplace_fromStack",
																	"nativeSrc": "5001:59:5",
																	"nodeType": "YulIdentifier",
																	"src": "5001:59:5"
																},
																"nativeSrc": "5001:73:5",
																"nodeType": "YulFunctionCall",
																"src": "5001:73:5"
															},
															"nativeSrc": "5001:73:5",
															"nodeType": "YulExpressionStatement",
															"src": "5001:73:5"
														},
														{
															"nativeSrc": "5083:18:5",
															"nodeType": "YulAssignment",
															"src": "5083:18:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5094:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5094:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5099:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5099:1:5",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5090:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5090:3:5"
																},
																"nativeSrc": "5090:11:5",
																"nodeType": "YulFunctionCall",
																"src": "5090:11:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5083:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5083:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5173:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5173:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5182:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5182:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "5111:61:5",
																	"nodeType": "YulIdentifier",
																	"src": "5111:61:5"
																},
																"nativeSrc": "5111:75:5",
																"nodeType": "YulFunctionCall",
																"src": "5111:75:5"
															},
															"nativeSrc": "5111:75:5",
															"nodeType": "YulExpressionStatement",
															"src": "5111:75:5"
														},
														{
															"nativeSrc": "5195:19:5",
															"nodeType": "YulAssignment",
															"src": "5195:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5206:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5206:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5211:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5211:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5202:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5202:3:5"
																},
																"nativeSrc": "5202:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5202:12:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5195:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5195:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "5284:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5284:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5293:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5293:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_nonPadded_inplace_fromStack",
																	"nativeSrc": "5224:59:5",
																	"nodeType": "YulIdentifier",
																	"src": "5224:59:5"
																},
																"nativeSrc": "5224:73:5",
																"nodeType": "YulFunctionCall",
																"src": "5224:73:5"
															},
															"nativeSrc": "5224:73:5",
															"nodeType": "YulExpressionStatement",
															"src": "5224:73:5"
														},
														{
															"nativeSrc": "5306:18:5",
															"nodeType": "YulAssignment",
															"src": "5306:18:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5317:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5317:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5322:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5322:1:5",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5313:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5313:3:5"
																},
																"nativeSrc": "5313:11:5",
																"nodeType": "YulFunctionCall",
																"src": "5313:11:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5306:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5306:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "5396:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5396:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5405:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5405:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "5334:61:5",
																	"nodeType": "YulIdentifier",
																	"src": "5334:61:5"
																},
																"nativeSrc": "5334:75:5",
																"nodeType": "YulFunctionCall",
																"src": "5334:75:5"
															},
															"nativeSrc": "5334:75:5",
															"nodeType": "YulExpressionStatement",
															"src": "5334:75:5"
														},
														{
															"nativeSrc": "5418:19:5",
															"nodeType": "YulAssignment",
															"src": "5418:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5429:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5429:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5434:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5434:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5425:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5425:3:5"
																},
																"nativeSrc": "5425:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5425:12:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5418:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5418:3:5"
																}
															]
														},
														{
															"nativeSrc": "5447:10:5",
															"nodeType": "YulAssignment",
															"src": "5447:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "5454:3:5",
																"nodeType": "YulIdentifier",
																"src": "5454:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5447:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5447:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint24_t_address_t_uint24_t_address__to_t_address_t_uint24_t_address_t_uint24_t_address__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "4653:810:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4824:3:5",
														"nodeType": "YulTypedName",
														"src": "4824:3:5",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4830:6:5",
														"nodeType": "YulTypedName",
														"src": "4830:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4838:6:5",
														"nodeType": "YulTypedName",
														"src": "4838:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4846:6:5",
														"nodeType": "YulTypedName",
														"src": "4846:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4854:6:5",
														"nodeType": "YulTypedName",
														"src": "4854:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4862:6:5",
														"nodeType": "YulTypedName",
														"src": "4862:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4873:3:5",
														"nodeType": "YulTypedName",
														"src": "4873:3:5",
														"type": ""
													}
												],
												"src": "4653:810:5"
											},
											{
												"body": {
													"nativeSrc": "5527:40:5",
													"nodeType": "YulBlock",
													"src": "5527:40:5",
													"statements": [
														{
															"nativeSrc": "5538:22:5",
															"nodeType": "YulAssignment",
															"src": "5538:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5554:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5554:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5548:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5548:5:5"
																},
																"nativeSrc": "5548:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5548:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5538:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5538:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "5469:98:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5510:5:5",
														"nodeType": "YulTypedName",
														"src": "5510:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5520:6:5",
														"nodeType": "YulTypedName",
														"src": "5520:6:5",
														"type": ""
													}
												],
												"src": "5469:98:5"
											},
											{
												"body": {
													"nativeSrc": "5658:73:5",
													"nodeType": "YulBlock",
													"src": "5658:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5675:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5675:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5680:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5680:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5668:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5668:6:5"
																},
																"nativeSrc": "5668:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5668:19:5"
															},
															"nativeSrc": "5668:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "5668:19:5"
														},
														{
															"nativeSrc": "5696:29:5",
															"nodeType": "YulAssignment",
															"src": "5696:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5715:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5715:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5720:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5720:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5711:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5711:3:5"
																},
																"nativeSrc": "5711:14:5",
																"nodeType": "YulFunctionCall",
																"src": "5711:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5696:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "5696:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr",
												"nativeSrc": "5573:158:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5630:3:5",
														"nodeType": "YulTypedName",
														"src": "5630:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5635:6:5",
														"nodeType": "YulTypedName",
														"src": "5635:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5646:11:5",
														"nodeType": "YulTypedName",
														"src": "5646:11:5",
														"type": ""
													}
												],
												"src": "5573:158:5"
											},
											{
												"body": {
													"nativeSrc": "5799:77:5",
													"nodeType": "YulBlock",
													"src": "5799:77:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "5816:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5816:3:5"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "5821:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5821:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5826:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5826:6:5"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "5810:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5810:5:5"
																},
																"nativeSrc": "5810:23:5",
																"nodeType": "YulFunctionCall",
																"src": "5810:23:5"
															},
															"nativeSrc": "5810:23:5",
															"nodeType": "YulExpressionStatement",
															"src": "5810:23:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "5853:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "5853:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5858:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5858:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5849:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5849:3:5"
																		},
																		"nativeSrc": "5849:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5849:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5867:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5867:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5842:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5842:6:5"
																},
																"nativeSrc": "5842:27:5",
																"nodeType": "YulFunctionCall",
																"src": "5842:27:5"
															},
															"nativeSrc": "5842:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "5842:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "5737:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5781:3:5",
														"nodeType": "YulTypedName",
														"src": "5781:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "5786:3:5",
														"nodeType": "YulTypedName",
														"src": "5786:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5791:6:5",
														"nodeType": "YulTypedName",
														"src": "5791:6:5",
														"type": ""
													}
												],
												"src": "5737:139:5"
											},
											{
												"body": {
													"nativeSrc": "5930:54:5",
													"nodeType": "YulBlock",
													"src": "5930:54:5",
													"statements": [
														{
															"nativeSrc": "5940:38:5",
															"nodeType": "YulAssignment",
															"src": "5940:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5958:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5958:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5965:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5965:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5954:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5954:3:5"
																		},
																		"nativeSrc": "5954:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5954:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5974:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5974:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5970:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5970:3:5"
																		},
																		"nativeSrc": "5970:7:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5970:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5950:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5950:3:5"
																},
																"nativeSrc": "5950:28:5",
																"nodeType": "YulFunctionCall",
																"src": "5950:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5940:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5940:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "5882:102:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5913:5:5",
														"nodeType": "YulTypedName",
														"src": "5913:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5923:6:5",
														"nodeType": "YulTypedName",
														"src": "5923:6:5",
														"type": ""
													}
												],
												"src": "5882:102:5"
											},
											{
												"body": {
													"nativeSrc": "6070:273:5",
													"nodeType": "YulBlock",
													"src": "6070:273:5",
													"statements": [
														{
															"nativeSrc": "6080:52:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6080:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6126:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6126:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "6094:31:5",
																	"nodeType": "YulIdentifier",
																	"src": "6094:31:5"
																},
																"nativeSrc": "6094:38:5",
																"nodeType": "YulFunctionCall",
																"src": "6094:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6084:6:5",
																	"nodeType": "YulTypedName",
																	"src": "6084:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6141:67:5",
															"nodeType": "YulAssignment",
															"src": "6141:67:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6196:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6196:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6201:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6201:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr",
																	"nativeSrc": "6148:47:5",
																	"nodeType": "YulIdentifier",
																	"src": "6148:47:5"
																},
																"nativeSrc": "6148:60:5",
																"nodeType": "YulFunctionCall",
																"src": "6148:60:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6141:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6141:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6256:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6256:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6263:4:5",
																				"nodeType": "YulLiteral",
																				"src": "6263:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6252:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6252:3:5"
																		},
																		"nativeSrc": "6252:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6252:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6270:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6270:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6275:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6275:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6217:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "6217:34:5"
																},
																"nativeSrc": "6217:65:5",
																"nodeType": "YulFunctionCall",
																"src": "6217:65:5"
															},
															"nativeSrc": "6217:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "6217:65:5"
														},
														{
															"nativeSrc": "6291:46:5",
															"nodeType": "YulAssignment",
															"src": "6291:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6302:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6302:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6329:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6329:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6307:21:5",
																			"nodeType": "YulIdentifier",
																			"src": "6307:21:5"
																		},
																		"nativeSrc": "6307:29:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6307:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6298:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6298:3:5"
																},
																"nativeSrc": "6298:39:5",
																"nodeType": "YulFunctionCall",
																"src": "6298:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6291:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6291:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr",
												"nativeSrc": "5990:353:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6051:5:5",
														"nodeType": "YulTypedName",
														"src": "6051:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6058:3:5",
														"nodeType": "YulTypedName",
														"src": "6058:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6066:3:5",
														"nodeType": "YulTypedName",
														"src": "6066:3:5",
														"type": ""
													}
												],
												"src": "5990:353:5"
											},
											{
												"body": {
													"nativeSrc": "6404:53:5",
													"nodeType": "YulBlock",
													"src": "6404:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6421:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6421:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6444:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6444:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6426:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "6426:17:5"
																		},
																		"nativeSrc": "6426:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6426:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6414:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6414:6:5"
																},
																"nativeSrc": "6414:37:5",
																"nodeType": "YulFunctionCall",
																"src": "6414:37:5"
															},
															"nativeSrc": "6414:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "6414:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "6349:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6392:5:5",
														"nodeType": "YulTypedName",
														"src": "6392:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6399:3:5",
														"nodeType": "YulTypedName",
														"src": "6399:3:5",
														"type": ""
													}
												],
												"src": "6349:108:5"
											},
											{
												"body": {
													"nativeSrc": "6518:53:5",
													"nodeType": "YulBlock",
													"src": "6518:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6535:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6535:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6558:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6558:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6540:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "6540:17:5"
																		},
																		"nativeSrc": "6540:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6540:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6528:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6528:6:5"
																},
																"nativeSrc": "6528:37:5",
																"nodeType": "YulFunctionCall",
																"src": "6528:37:5"
															},
															"nativeSrc": "6528:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "6528:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "6463:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6506:5:5",
														"nodeType": "YulTypedName",
														"src": "6506:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6513:3:5",
														"nodeType": "YulTypedName",
														"src": "6513:3:5",
														"type": ""
													}
												],
												"src": "6463:108:5"
											},
											{
												"body": {
													"nativeSrc": "6803:1027:5",
													"nodeType": "YulBlock",
													"src": "6803:1027:5",
													"statements": [
														{
															"nativeSrc": "6813:26:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6813:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6829:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6829:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6834:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6834:4:5",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6825:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6825:3:5"
																},
																"nativeSrc": "6825:14:5",
																"nodeType": "YulFunctionCall",
																"src": "6825:14:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "6817:4:5",
																	"nodeType": "YulTypedName",
																	"src": "6817:4:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6849:233:5",
															"nodeType": "YulBlock",
															"src": "6849:233:5",
															"statements": [
																{
																	"nativeSrc": "6884:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6884:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6914:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "6914:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6921:4:5",
																						"nodeType": "YulLiteral",
																						"src": "6921:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6910:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6910:3:5"
																				},
																				"nativeSrc": "6910:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6910:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6904:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "6904:5:5"
																		},
																		"nativeSrc": "6904:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6904:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6888:12:5",
																			"nodeType": "YulTypedName",
																			"src": "6888:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6952:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6952:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6957:4:5",
																						"nodeType": "YulLiteral",
																						"src": "6957:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6948:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6948:3:5"
																				},
																				"nativeSrc": "6948:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6948:14:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nativeSrc": "6968:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "6968:4:5"
																					},
																					{
																						"name": "pos",
																						"nativeSrc": "6974:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6974:3:5"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6964:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6964:3:5"
																				},
																				"nativeSrc": "6964:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6964:14:5"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "6941:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "6941:6:5"
																		},
																		"nativeSrc": "6941:38:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6941:38:5"
																	},
																	"nativeSrc": "6941:38:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "6941:38:5"
																},
																{
																	"nativeSrc": "6992:79:5",
																	"nodeType": "YulAssignment",
																	"src": "6992:79:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7052:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "7052:12:5"
																			},
																			{
																				"name": "tail",
																				"nativeSrc": "7066:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "7066:4:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr",
																			"nativeSrc": "7000:51:5",
																			"nodeType": "YulIdentifier",
																			"src": "7000:51:5"
																		},
																		"nativeSrc": "7000:71:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7000:71:5"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nativeSrc": "6992:4:5",
																			"nodeType": "YulIdentifier",
																			"src": "6992:4:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7092:169:5",
															"nodeType": "YulBlock",
															"src": "7092:169:5",
															"statements": [
																{
																	"nativeSrc": "7132:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7132:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7162:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7162:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7169:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7169:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7158:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7158:3:5"
																				},
																				"nativeSrc": "7158:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7158:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7152:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7152:5:5"
																		},
																		"nativeSrc": "7152:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7152:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7136:12:5",
																			"nodeType": "YulTypedName",
																			"src": "7136:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7222:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "7222:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7240:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "7240:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7245:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7245:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7236:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7236:3:5"
																				},
																				"nativeSrc": "7236:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7236:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "7188:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "7188:33:5"
																		},
																		"nativeSrc": "7188:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7188:63:5"
																	},
																	"nativeSrc": "7188:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "7188:63:5"
																}
															]
														},
														{
															"nativeSrc": "7271:168:5",
															"nodeType": "YulBlock",
															"src": "7271:168:5",
															"statements": [
																{
																	"nativeSrc": "7310:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7310:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7340:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7340:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7347:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7347:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7336:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7336:3:5"
																				},
																				"nativeSrc": "7336:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7336:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7330:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7330:5:5"
																		},
																		"nativeSrc": "7330:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7330:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7314:12:5",
																			"nodeType": "YulTypedName",
																			"src": "7314:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7400:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "7400:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7418:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "7418:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7423:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7423:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7414:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7414:3:5"
																				},
																				"nativeSrc": "7414:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7414:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7366:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "7366:33:5"
																		},
																		"nativeSrc": "7366:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7366:63:5"
																	},
																	"nativeSrc": "7366:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "7366:63:5"
																}
															]
														},
														{
															"nativeSrc": "7449:169:5",
															"nodeType": "YulBlock",
															"src": "7449:169:5",
															"statements": [
																{
																	"nativeSrc": "7489:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7489:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7519:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7519:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7526:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7526:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7515:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7515:3:5"
																				},
																				"nativeSrc": "7515:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7515:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7509:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7509:5:5"
																		},
																		"nativeSrc": "7509:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7509:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7493:12:5",
																			"nodeType": "YulTypedName",
																			"src": "7493:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7579:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "7579:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7597:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "7597:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7602:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7602:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7593:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7593:3:5"
																				},
																				"nativeSrc": "7593:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7593:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7545:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "7545:33:5"
																		},
																		"nativeSrc": "7545:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7545:63:5"
																	},
																	"nativeSrc": "7545:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "7545:63:5"
																}
															]
														},
														{
															"nativeSrc": "7628:175:5",
															"nodeType": "YulBlock",
															"src": "7628:175:5",
															"statements": [
																{
																	"nativeSrc": "7674:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7674:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7704:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7704:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7711:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7711:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7700:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7700:3:5"
																				},
																				"nativeSrc": "7700:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7700:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7694:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7694:5:5"
																		},
																		"nativeSrc": "7694:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7694:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7678:12:5",
																			"nodeType": "YulTypedName",
																			"src": "7678:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7764:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "7764:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7782:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "7782:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7787:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7787:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7778:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7778:3:5"
																				},
																				"nativeSrc": "7778:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7778:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7730:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "7730:33:5"
																		},
																		"nativeSrc": "7730:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7730:63:5"
																	},
																	"nativeSrc": "7730:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "7730:63:5"
																}
															]
														},
														{
															"nativeSrc": "7813:11:5",
															"nodeType": "YulAssignment",
															"src": "7813:11:5",
															"value": {
																"name": "tail",
																"nativeSrc": "7820:4:5",
																"nodeType": "YulIdentifier",
																"src": "7820:4:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7813:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7813:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactOutputParams_$181_memory_ptr_to_t_struct$_ExactOutputParams_$181_memory_ptr_fromStack",
												"nativeSrc": "6661:1169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6782:5:5",
														"nodeType": "YulTypedName",
														"src": "6782:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6789:3:5",
														"nodeType": "YulTypedName",
														"src": "6789:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6798:3:5",
														"nodeType": "YulTypedName",
														"src": "6798:3:5",
														"type": ""
													}
												],
												"src": "6661:1169:5"
											},
											{
												"body": {
													"nativeSrc": "8002:243:5",
													"nodeType": "YulBlock",
													"src": "8002:243:5",
													"statements": [
														{
															"nativeSrc": "8012:26:5",
															"nodeType": "YulAssignment",
															"src": "8012:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8024:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8024:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8035:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8035:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8020:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8020:3:5"
																},
																"nativeSrc": "8020:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8020:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8012:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8012:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8059:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8059:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8070:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8070:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8055:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8055:3:5"
																		},
																		"nativeSrc": "8055:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8055:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8078:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8078:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8084:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8084:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8074:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8074:3:5"
																		},
																		"nativeSrc": "8074:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8074:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8048:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8048:6:5"
																},
																"nativeSrc": "8048:47:5",
																"nodeType": "YulFunctionCall",
																"src": "8048:47:5"
															},
															"nativeSrc": "8048:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "8048:47:5"
														},
														{
															"nativeSrc": "8104:134:5",
															"nodeType": "YulAssignment",
															"src": "8104:134:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8224:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8224:6:5"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8233:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "8233:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactOutputParams_$181_memory_ptr_to_t_struct$_ExactOutputParams_$181_memory_ptr_fromStack",
																	"nativeSrc": "8112:111:5",
																	"nodeType": "YulIdentifier",
																	"src": "8112:111:5"
																},
																"nativeSrc": "8112:126:5",
																"nodeType": "YulFunctionCall",
																"src": "8112:126:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8104:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8104:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactOutputParams_$181_memory_ptr__to_t_struct$_ExactOutputParams_$181_memory_ptr__fromStack_reversed",
												"nativeSrc": "7836:409:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7974:9:5",
														"nodeType": "YulTypedName",
														"src": "7974:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7986:6:5",
														"nodeType": "YulTypedName",
														"src": "7986:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7997:4:5",
														"nodeType": "YulTypedName",
														"src": "7997:4:5",
														"type": ""
													}
												],
												"src": "7836:409:5"
											},
											{
												"body": {
													"nativeSrc": "8314:80:5",
													"nodeType": "YulBlock",
													"src": "8314:80:5",
													"statements": [
														{
															"nativeSrc": "8324:22:5",
															"nodeType": "YulAssignment",
															"src": "8324:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8339:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8339:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8333:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8333:5:5"
																},
																"nativeSrc": "8333:13:5",
																"nodeType": "YulFunctionCall",
																"src": "8333:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8324:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8324:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8382:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8382:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "8355:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "8355:26:5"
																},
																"nativeSrc": "8355:33:5",
																"nodeType": "YulFunctionCall",
																"src": "8355:33:5"
															},
															"nativeSrc": "8355:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "8355:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "8251:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8292:6:5",
														"nodeType": "YulTypedName",
														"src": "8292:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8300:3:5",
														"nodeType": "YulTypedName",
														"src": "8300:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8308:5:5",
														"nodeType": "YulTypedName",
														"src": "8308:5:5",
														"type": ""
													}
												],
												"src": "8251:143:5"
											},
											{
												"body": {
													"nativeSrc": "8477:274:5",
													"nodeType": "YulBlock",
													"src": "8477:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "8523:83:5",
																"nodeType": "YulBlock",
																"src": "8523:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8525:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "8525:77:5"
																			},
																			"nativeSrc": "8525:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8525:79:5"
																		},
																		"nativeSrc": "8525:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8525:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8498:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "8498:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8507:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8507:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8494:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8494:3:5"
																		},
																		"nativeSrc": "8494:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8494:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8519:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8519:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8490:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8490:3:5"
																},
																"nativeSrc": "8490:32:5",
																"nodeType": "YulFunctionCall",
																"src": "8490:32:5"
															},
															"nativeSrc": "8487:119:5",
															"nodeType": "YulIf",
															"src": "8487:119:5"
														},
														{
															"nativeSrc": "8616:128:5",
															"nodeType": "YulBlock",
															"src": "8616:128:5",
															"statements": [
																{
																	"nativeSrc": "8631:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8631:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8645:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8645:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8635:6:5",
																			"nodeType": "YulTypedName",
																			"src": "8635:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8660:74:5",
																	"nodeType": "YulAssignment",
																	"src": "8660:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8706:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "8706:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8717:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "8717:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8702:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8702:3:5"
																				},
																				"nativeSrc": "8702:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8702:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8726:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "8726:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8670:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "8670:31:5"
																		},
																		"nativeSrc": "8670:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8670:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8660:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "8660:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "8400:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8447:9:5",
														"nodeType": "YulTypedName",
														"src": "8447:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8458:7:5",
														"nodeType": "YulTypedName",
														"src": "8458:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8470:6:5",
														"nodeType": "YulTypedName",
														"src": "8470:6:5",
														"type": ""
													}
												],
												"src": "8400:351:5"
											},
											{
												"body": {
													"nativeSrc": "8785:152:5",
													"nodeType": "YulBlock",
													"src": "8785:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8802:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8802:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8805:77:5",
																		"nodeType": "YulLiteral",
																		"src": "8805:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8795:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8795:6:5"
																},
																"nativeSrc": "8795:88:5",
																"nodeType": "YulFunctionCall",
																"src": "8795:88:5"
															},
															"nativeSrc": "8795:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "8795:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8899:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8899:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8902:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8902:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8892:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8892:6:5"
																},
																"nativeSrc": "8892:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8892:15:5"
															},
															"nativeSrc": "8892:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8892:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8923:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8923:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8926:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8926:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8916:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8916:6:5"
																},
																"nativeSrc": "8916:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8916:15:5"
															},
															"nativeSrc": "8916:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8916:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8757:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "8757:180:5"
											},
											{
												"body": {
													"nativeSrc": "8988:149:5",
													"nodeType": "YulBlock",
													"src": "8988:149:5",
													"statements": [
														{
															"nativeSrc": "8998:25:5",
															"nodeType": "YulAssignment",
															"src": "8998:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9021:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9021:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9003:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "9003:17:5"
																},
																"nativeSrc": "9003:20:5",
																"nodeType": "YulFunctionCall",
																"src": "9003:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8998:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "8998:1:5"
																}
															]
														},
														{
															"nativeSrc": "9032:25:5",
															"nodeType": "YulAssignment",
															"src": "9032:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9055:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9055:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9037:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "9037:17:5"
																},
																"nativeSrc": "9037:20:5",
																"nodeType": "YulFunctionCall",
																"src": "9037:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9032:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "9032:1:5"
																}
															]
														},
														{
															"nativeSrc": "9066:17:5",
															"nodeType": "YulAssignment",
															"src": "9066:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9078:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9078:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9081:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9081:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9074:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9074:3:5"
																},
																"nativeSrc": "9074:9:5",
																"nodeType": "YulFunctionCall",
																"src": "9074:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9066:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9066:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9108:22:5",
																"nodeType": "YulBlock",
																"src": "9108:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9110:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "9110:16:5"
																			},
																			"nativeSrc": "9110:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9110:18:5"
																		},
																		"nativeSrc": "9110:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9110:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9099:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "9099:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9105:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9105:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9096:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "9096:2:5"
																},
																"nativeSrc": "9096:11:5",
																"nodeType": "YulFunctionCall",
																"src": "9096:11:5"
															},
															"nativeSrc": "9093:37:5",
															"nodeType": "YulIf",
															"src": "9093:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8943:194:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8974:1:5",
														"nodeType": "YulTypedName",
														"src": "8974:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8977:1:5",
														"nodeType": "YulTypedName",
														"src": "8977:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8983:4:5",
														"nodeType": "YulTypedName",
														"src": "8983:4:5",
														"type": ""
													}
												],
												"src": "8943:194:5"
											},
											{
												"body": {
													"nativeSrc": "9365:1027:5",
													"nodeType": "YulBlock",
													"src": "9365:1027:5",
													"statements": [
														{
															"nativeSrc": "9375:26:5",
															"nodeType": "YulVariableDeclaration",
															"src": "9375:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9391:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9391:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9396:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9396:4:5",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9387:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9387:3:5"
																},
																"nativeSrc": "9387:14:5",
																"nodeType": "YulFunctionCall",
																"src": "9387:14:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "9379:4:5",
																	"nodeType": "YulTypedName",
																	"src": "9379:4:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9411:233:5",
															"nodeType": "YulBlock",
															"src": "9411:233:5",
															"statements": [
																{
																	"nativeSrc": "9446:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9446:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9476:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "9476:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9483:4:5",
																						"nodeType": "YulLiteral",
																						"src": "9483:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9472:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "9472:3:5"
																				},
																				"nativeSrc": "9472:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9472:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9466:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9466:5:5"
																		},
																		"nativeSrc": "9466:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9466:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "9450:12:5",
																			"nodeType": "YulTypedName",
																			"src": "9450:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "9514:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "9514:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9519:4:5",
																						"nodeType": "YulLiteral",
																						"src": "9519:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9510:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "9510:3:5"
																				},
																				"nativeSrc": "9510:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9510:14:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nativeSrc": "9530:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "9530:4:5"
																					},
																					{
																						"name": "pos",
																						"nativeSrc": "9536:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "9536:3:5"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9526:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "9526:3:5"
																				},
																				"nativeSrc": "9526:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9526:14:5"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "9503:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "9503:6:5"
																		},
																		"nativeSrc": "9503:38:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9503:38:5"
																	},
																	"nativeSrc": "9503:38:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "9503:38:5"
																},
																{
																	"nativeSrc": "9554:79:5",
																	"nodeType": "YulAssignment",
																	"src": "9554:79:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "9614:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "9614:12:5"
																			},
																			{
																				"name": "tail",
																				"nativeSrc": "9628:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9628:4:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr",
																			"nativeSrc": "9562:51:5",
																			"nodeType": "YulIdentifier",
																			"src": "9562:51:5"
																		},
																		"nativeSrc": "9562:71:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9562:71:5"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nativeSrc": "9554:4:5",
																			"nodeType": "YulIdentifier",
																			"src": "9554:4:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9654:169:5",
															"nodeType": "YulBlock",
															"src": "9654:169:5",
															"statements": [
																{
																	"nativeSrc": "9694:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9694:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9724:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "9724:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9731:4:5",
																						"nodeType": "YulLiteral",
																						"src": "9731:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9720:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "9720:3:5"
																				},
																				"nativeSrc": "9720:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9720:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9714:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9714:5:5"
																		},
																		"nativeSrc": "9714:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9714:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "9698:12:5",
																			"nodeType": "YulTypedName",
																			"src": "9698:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "9784:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "9784:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "9802:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "9802:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9807:4:5",
																						"nodeType": "YulLiteral",
																						"src": "9807:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9798:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "9798:3:5"
																				},
																				"nativeSrc": "9798:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9798:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "9750:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "9750:33:5"
																		},
																		"nativeSrc": "9750:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9750:63:5"
																	},
																	"nativeSrc": "9750:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "9750:63:5"
																}
															]
														},
														{
															"nativeSrc": "9833:168:5",
															"nodeType": "YulBlock",
															"src": "9833:168:5",
															"statements": [
																{
																	"nativeSrc": "9872:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9872:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9902:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "9902:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9909:4:5",
																						"nodeType": "YulLiteral",
																						"src": "9909:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9898:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "9898:3:5"
																				},
																				"nativeSrc": "9898:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9898:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9892:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9892:5:5"
																		},
																		"nativeSrc": "9892:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9892:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "9876:12:5",
																			"nodeType": "YulTypedName",
																			"src": "9876:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "9962:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "9962:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "9980:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "9980:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9985:4:5",
																						"nodeType": "YulLiteral",
																						"src": "9985:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9976:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "9976:3:5"
																				},
																				"nativeSrc": "9976:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9976:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "9928:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "9928:33:5"
																		},
																		"nativeSrc": "9928:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9928:63:5"
																	},
																	"nativeSrc": "9928:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "9928:63:5"
																}
															]
														},
														{
															"nativeSrc": "10011:168:5",
															"nodeType": "YulBlock",
															"src": "10011:168:5",
															"statements": [
																{
																	"nativeSrc": "10050:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10050:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10080:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "10080:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10087:4:5",
																						"nodeType": "YulLiteral",
																						"src": "10087:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10076:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "10076:3:5"
																				},
																				"nativeSrc": "10076:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10076:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10070:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "10070:5:5"
																		},
																		"nativeSrc": "10070:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10070:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "10054:12:5",
																			"nodeType": "YulTypedName",
																			"src": "10054:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "10140:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "10140:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "10158:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "10158:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10163:4:5",
																						"nodeType": "YulLiteral",
																						"src": "10163:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10154:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "10154:3:5"
																				},
																				"nativeSrc": "10154:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10154:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "10106:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "10106:33:5"
																		},
																		"nativeSrc": "10106:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10106:63:5"
																	},
																	"nativeSrc": "10106:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "10106:63:5"
																}
															]
														},
														{
															"nativeSrc": "10189:176:5",
															"nodeType": "YulBlock",
															"src": "10189:176:5",
															"statements": [
																{
																	"nativeSrc": "10236:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10236:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10266:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "10266:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10273:4:5",
																						"nodeType": "YulLiteral",
																						"src": "10273:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10262:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "10262:3:5"
																				},
																				"nativeSrc": "10262:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10262:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10256:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "10256:5:5"
																		},
																		"nativeSrc": "10256:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10256:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "10240:12:5",
																			"nodeType": "YulTypedName",
																			"src": "10240:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "10326:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "10326:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "10344:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "10344:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10349:4:5",
																						"nodeType": "YulLiteral",
																						"src": "10349:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10340:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "10340:3:5"
																				},
																				"nativeSrc": "10340:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10340:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "10292:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "10292:33:5"
																		},
																		"nativeSrc": "10292:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10292:63:5"
																	},
																	"nativeSrc": "10292:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "10292:63:5"
																}
															]
														},
														{
															"nativeSrc": "10375:11:5",
															"nodeType": "YulAssignment",
															"src": "10375:11:5",
															"value": {
																"name": "tail",
																"nativeSrc": "10382:4:5",
																"nodeType": "YulIdentifier",
																"src": "10382:4:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10375:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10375:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputParams_$135_memory_ptr_to_t_struct$_ExactInputParams_$135_memory_ptr_fromStack",
												"nativeSrc": "9225:1167:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9344:5:5",
														"nodeType": "YulTypedName",
														"src": "9344:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9351:3:5",
														"nodeType": "YulTypedName",
														"src": "9351:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9360:3:5",
														"nodeType": "YulTypedName",
														"src": "9360:3:5",
														"type": ""
													}
												],
												"src": "9225:1167:5"
											},
											{
												"body": {
													"nativeSrc": "10562:241:5",
													"nodeType": "YulBlock",
													"src": "10562:241:5",
													"statements": [
														{
															"nativeSrc": "10572:26:5",
															"nodeType": "YulAssignment",
															"src": "10572:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10584:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10584:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10595:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10595:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10580:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10580:3:5"
																},
																"nativeSrc": "10580:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10580:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10572:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10572:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10619:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10619:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10630:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10630:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10615:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10615:3:5"
																		},
																		"nativeSrc": "10615:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10615:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10638:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "10638:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10644:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10644:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10634:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10634:3:5"
																		},
																		"nativeSrc": "10634:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10634:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10608:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10608:6:5"
																},
																"nativeSrc": "10608:47:5",
																"nodeType": "YulFunctionCall",
																"src": "10608:47:5"
															},
															"nativeSrc": "10608:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "10608:47:5"
														},
														{
															"nativeSrc": "10664:132:5",
															"nodeType": "YulAssignment",
															"src": "10664:132:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10782:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10782:6:5"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "10791:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "10791:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputParams_$135_memory_ptr_to_t_struct$_ExactInputParams_$135_memory_ptr_fromStack",
																	"nativeSrc": "10672:109:5",
																	"nodeType": "YulIdentifier",
																	"src": "10672:109:5"
																},
																"nativeSrc": "10672:124:5",
																"nodeType": "YulFunctionCall",
																"src": "10672:124:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10664:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10664:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputParams_$135_memory_ptr__to_t_struct$_ExactInputParams_$135_memory_ptr__fromStack_reversed",
												"nativeSrc": "10398:405:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10534:9:5",
														"nodeType": "YulTypedName",
														"src": "10534:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10546:6:5",
														"nodeType": "YulTypedName",
														"src": "10546:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10557:4:5",
														"nodeType": "YulTypedName",
														"src": "10557:4:5",
														"type": ""
													}
												],
												"src": "10398:405:5"
											},
											{
												"body": {
													"nativeSrc": "10963:288:5",
													"nodeType": "YulBlock",
													"src": "10963:288:5",
													"statements": [
														{
															"nativeSrc": "10973:26:5",
															"nodeType": "YulAssignment",
															"src": "10973:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10985:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10985:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10996:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10996:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10981:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10981:3:5"
																},
																"nativeSrc": "10981:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10981:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10973:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10973:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11053:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11053:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11066:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11066:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11077:1:5",
																				"nodeType": "YulLiteral",
																				"src": "11077:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11062:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11062:3:5"
																		},
																		"nativeSrc": "11062:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11062:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11009:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "11009:43:5"
																},
																"nativeSrc": "11009:71:5",
																"nodeType": "YulFunctionCall",
																"src": "11009:71:5"
															},
															"nativeSrc": "11009:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "11009:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11134:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11134:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11147:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11147:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11158:2:5",
																				"nodeType": "YulLiteral",
																				"src": "11158:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11143:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11143:3:5"
																		},
																		"nativeSrc": "11143:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11143:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11090:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "11090:43:5"
																},
																"nativeSrc": "11090:72:5",
																"nodeType": "YulFunctionCall",
																"src": "11090:72:5"
															},
															"nativeSrc": "11090:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "11090:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11216:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11216:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11229:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11229:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11240:2:5",
																				"nodeType": "YulLiteral",
																				"src": "11240:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11225:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11225:3:5"
																		},
																		"nativeSrc": "11225:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11225:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11172:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "11172:43:5"
																},
																"nativeSrc": "11172:72:5",
																"nodeType": "YulFunctionCall",
																"src": "11172:72:5"
															},
															"nativeSrc": "11172:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "11172:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10809:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10919:9:5",
														"nodeType": "YulTypedName",
														"src": "10919:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10931:6:5",
														"nodeType": "YulTypedName",
														"src": "10931:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10939:6:5",
														"nodeType": "YulTypedName",
														"src": "10939:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10947:6:5",
														"nodeType": "YulTypedName",
														"src": "10947:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10958:4:5",
														"nodeType": "YulTypedName",
														"src": "10958:4:5",
														"type": ""
													}
												],
												"src": "10809:442:5"
											},
											{
												"body": {
													"nativeSrc": "11370:34:5",
													"nodeType": "YulBlock",
													"src": "11370:34:5",
													"statements": [
														{
															"nativeSrc": "11380:18:5",
															"nodeType": "YulAssignment",
															"src": "11380:18:5",
															"value": {
																"name": "pos",
																"nativeSrc": "11395:3:5",
																"nodeType": "YulIdentifier",
																"src": "11395:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11380:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "11380:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11257:147:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11342:3:5",
														"nodeType": "YulTypedName",
														"src": "11342:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11347:6:5",
														"nodeType": "YulTypedName",
														"src": "11347:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11358:11:5",
														"nodeType": "YulTypedName",
														"src": "11358:11:5",
														"type": ""
													}
												],
												"src": "11257:147:5"
											},
											{
												"body": {
													"nativeSrc": "11518:278:5",
													"nodeType": "YulBlock",
													"src": "11518:278:5",
													"statements": [
														{
															"nativeSrc": "11528:52:5",
															"nodeType": "YulVariableDeclaration",
															"src": "11528:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11574:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "11574:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "11542:31:5",
																	"nodeType": "YulIdentifier",
																	"src": "11542:31:5"
																},
																"nativeSrc": "11542:38:5",
																"nodeType": "YulFunctionCall",
																"src": "11542:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11532:6:5",
																	"nodeType": "YulTypedName",
																	"src": "11532:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11589:95:5",
															"nodeType": "YulAssignment",
															"src": "11589:95:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11672:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11672:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11677:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11677:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11596:75:5",
																	"nodeType": "YulIdentifier",
																	"src": "11596:75:5"
																},
																"nativeSrc": "11596:88:5",
																"nodeType": "YulFunctionCall",
																"src": "11596:88:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11589:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11589:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11732:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "11732:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11739:4:5",
																				"nodeType": "YulLiteral",
																				"src": "11739:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11728:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11728:3:5"
																		},
																		"nativeSrc": "11728:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11728:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11746:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11746:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11751:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11751:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "11693:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "11693:34:5"
																},
																"nativeSrc": "11693:65:5",
																"nodeType": "YulFunctionCall",
																"src": "11693:65:5"
															},
															"nativeSrc": "11693:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "11693:65:5"
														},
														{
															"nativeSrc": "11767:23:5",
															"nodeType": "YulAssignment",
															"src": "11767:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11778:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11778:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11783:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11783:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11774:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11774:3:5"
																},
																"nativeSrc": "11774:16:5",
																"nodeType": "YulFunctionCall",
																"src": "11774:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11767:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11767:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11410:386:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11499:5:5",
														"nodeType": "YulTypedName",
														"src": "11499:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11506:3:5",
														"nodeType": "YulTypedName",
														"src": "11506:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11514:3:5",
														"nodeType": "YulTypedName",
														"src": "11514:3:5",
														"type": ""
													}
												],
												"src": "11410:386:5"
											},
											{
												"body": {
													"nativeSrc": "11936:137:5",
													"nodeType": "YulBlock",
													"src": "11936:137:5",
													"statements": [
														{
															"nativeSrc": "11947:100:5",
															"nodeType": "YulAssignment",
															"src": "11947:100:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12034:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12034:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12043:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12043:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11954:79:5",
																	"nodeType": "YulIdentifier",
																	"src": "11954:79:5"
																},
																"nativeSrc": "11954:93:5",
																"nodeType": "YulFunctionCall",
																"src": "11954:93:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11947:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11947:3:5"
																}
															]
														},
														{
															"nativeSrc": "12057:10:5",
															"nodeType": "YulAssignment",
															"src": "12057:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "12064:3:5",
																"nodeType": "YulIdentifier",
																"src": "12064:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12057:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12057:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "11802:271:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11915:3:5",
														"nodeType": "YulTypedName",
														"src": "11915:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11921:6:5",
														"nodeType": "YulTypedName",
														"src": "11921:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11932:3:5",
														"nodeType": "YulTypedName",
														"src": "11932:3:5",
														"type": ""
													}
												],
												"src": "11802:271:5"
											},
											{
												"body": {
													"nativeSrc": "12121:48:5",
													"nodeType": "YulBlock",
													"src": "12121:48:5",
													"statements": [
														{
															"nativeSrc": "12131:32:5",
															"nodeType": "YulAssignment",
															"src": "12131:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12156:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "12156:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "12149:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "12149:6:5"
																		},
																		"nativeSrc": "12149:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12149:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12142:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12142:6:5"
																},
																"nativeSrc": "12142:21:5",
																"nodeType": "YulFunctionCall",
																"src": "12142:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12131:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "12131:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "12079:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12103:5:5",
														"nodeType": "YulTypedName",
														"src": "12103:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12113:7:5",
														"nodeType": "YulTypedName",
														"src": "12113:7:5",
														"type": ""
													}
												],
												"src": "12079:90:5"
											},
											{
												"body": {
													"nativeSrc": "12215:76:5",
													"nodeType": "YulBlock",
													"src": "12215:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "12269:16:5",
																"nodeType": "YulBlock",
																"src": "12269:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12278:1:5",
																					"nodeType": "YulLiteral",
																					"src": "12278:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12281:1:5",
																					"nodeType": "YulLiteral",
																					"src": "12281:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12271:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "12271:6:5"
																			},
																			"nativeSrc": "12271:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "12271:12:5"
																		},
																		"nativeSrc": "12271:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "12271:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12238:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "12238:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12260:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "12260:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "12245:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "12245:14:5"
																				},
																				"nativeSrc": "12245:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "12245:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12235:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "12235:2:5"
																		},
																		"nativeSrc": "12235:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12235:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12228:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12228:6:5"
																},
																"nativeSrc": "12228:40:5",
																"nodeType": "YulFunctionCall",
																"src": "12228:40:5"
															},
															"nativeSrc": "12225:60:5",
															"nodeType": "YulIf",
															"src": "12225:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "12175:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12208:5:5",
														"nodeType": "YulTypedName",
														"src": "12208:5:5",
														"type": ""
													}
												],
												"src": "12175:116:5"
											},
											{
												"body": {
													"nativeSrc": "12357:77:5",
													"nodeType": "YulBlock",
													"src": "12357:77:5",
													"statements": [
														{
															"nativeSrc": "12367:22:5",
															"nodeType": "YulAssignment",
															"src": "12367:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12382:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12382:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12376:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "12376:5:5"
																},
																"nativeSrc": "12376:13:5",
																"nodeType": "YulFunctionCall",
																"src": "12376:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12367:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "12367:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12422:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "12422:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "12398:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "12398:23:5"
																},
																"nativeSrc": "12398:30:5",
																"nodeType": "YulFunctionCall",
																"src": "12398:30:5"
															},
															"nativeSrc": "12398:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "12398:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "12297:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12335:6:5",
														"nodeType": "YulTypedName",
														"src": "12335:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12343:3:5",
														"nodeType": "YulTypedName",
														"src": "12343:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12351:5:5",
														"nodeType": "YulTypedName",
														"src": "12351:5:5",
														"type": ""
													}
												],
												"src": "12297:137:5"
											},
											{
												"body": {
													"nativeSrc": "12514:271:5",
													"nodeType": "YulBlock",
													"src": "12514:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "12560:83:5",
																"nodeType": "YulBlock",
																"src": "12560:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12562:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "12562:77:5"
																			},
																			"nativeSrc": "12562:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "12562:79:5"
																		},
																		"nativeSrc": "12562:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "12562:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12535:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "12535:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12544:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12544:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12531:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12531:3:5"
																		},
																		"nativeSrc": "12531:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12531:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12556:2:5",
																		"nodeType": "YulLiteral",
																		"src": "12556:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12527:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12527:3:5"
																},
																"nativeSrc": "12527:32:5",
																"nodeType": "YulFunctionCall",
																"src": "12527:32:5"
															},
															"nativeSrc": "12524:119:5",
															"nodeType": "YulIf",
															"src": "12524:119:5"
														},
														{
															"nativeSrc": "12653:125:5",
															"nodeType": "YulBlock",
															"src": "12653:125:5",
															"statements": [
																{
																	"nativeSrc": "12668:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12668:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12682:1:5",
																		"nodeType": "YulLiteral",
																		"src": "12682:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12672:6:5",
																			"nodeType": "YulTypedName",
																			"src": "12672:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12697:71:5",
																	"nodeType": "YulAssignment",
																	"src": "12697:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12740:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "12740:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12751:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "12751:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12736:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "12736:3:5"
																				},
																				"nativeSrc": "12736:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "12736:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12760:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "12760:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "12707:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "12707:28:5"
																		},
																		"nativeSrc": "12707:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12707:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12697:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "12697:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "12440:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12484:9:5",
														"nodeType": "YulTypedName",
														"src": "12484:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12495:7:5",
														"nodeType": "YulTypedName",
														"src": "12495:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12507:6:5",
														"nodeType": "YulTypedName",
														"src": "12507:6:5",
														"type": ""
													}
												],
												"src": "12440:345:5"
											},
											{
												"body": {
													"nativeSrc": "12887:73:5",
													"nodeType": "YulBlock",
													"src": "12887:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12904:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12904:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12909:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12909:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12897:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12897:6:5"
																},
																"nativeSrc": "12897:19:5",
																"nodeType": "YulFunctionCall",
																"src": "12897:19:5"
															},
															"nativeSrc": "12897:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "12897:19:5"
														},
														{
															"nativeSrc": "12925:29:5",
															"nodeType": "YulAssignment",
															"src": "12925:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12944:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12944:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12949:4:5",
																		"nodeType": "YulLiteral",
																		"src": "12949:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12940:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12940:3:5"
																},
																"nativeSrc": "12940:14:5",
																"nodeType": "YulFunctionCall",
																"src": "12940:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12925:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "12925:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "12791:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12859:3:5",
														"nodeType": "YulTypedName",
														"src": "12859:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12864:6:5",
														"nodeType": "YulTypedName",
														"src": "12864:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12875:11:5",
														"nodeType": "YulTypedName",
														"src": "12875:11:5",
														"type": ""
													}
												],
												"src": "12791:169:5"
											},
											{
												"body": {
													"nativeSrc": "13072:47:5",
													"nodeType": "YulBlock",
													"src": "13072:47:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13094:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "13094:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13102:1:5",
																				"nodeType": "YulLiteral",
																				"src": "13102:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13090:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13090:3:5"
																		},
																		"nativeSrc": "13090:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13090:14:5"
																	},
																	{
																		"hexValue": "535446",
																		"kind": "string",
																		"nativeSrc": "13106:5:5",
																		"nodeType": "YulLiteral",
																		"src": "13106:5:5",
																		"type": "",
																		"value": "STF"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13083:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "13083:6:5"
																},
																"nativeSrc": "13083:29:5",
																"nodeType": "YulFunctionCall",
																"src": "13083:29:5"
															},
															"nativeSrc": "13083:29:5",
															"nodeType": "YulExpressionStatement",
															"src": "13083:29:5"
														}
													]
												},
												"name": "store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
												"nativeSrc": "12966:153:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13064:6:5",
														"nodeType": "YulTypedName",
														"src": "13064:6:5",
														"type": ""
													}
												],
												"src": "12966:153:5"
											},
											{
												"body": {
													"nativeSrc": "13271:219:5",
													"nodeType": "YulBlock",
													"src": "13271:219:5",
													"statements": [
														{
															"nativeSrc": "13281:73:5",
															"nodeType": "YulAssignment",
															"src": "13281:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13347:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "13347:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13352:1:5",
																		"nodeType": "YulLiteral",
																		"src": "13352:1:5",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13288:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "13288:58:5"
																},
																"nativeSrc": "13288:66:5",
																"nodeType": "YulFunctionCall",
																"src": "13288:66:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13281:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13281:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13452:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "13452:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																	"nativeSrc": "13363:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "13363:88:5"
																},
																"nativeSrc": "13363:93:5",
																"nodeType": "YulFunctionCall",
																"src": "13363:93:5"
															},
															"nativeSrc": "13363:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "13363:93:5"
														},
														{
															"nativeSrc": "13465:19:5",
															"nodeType": "YulAssignment",
															"src": "13465:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13476:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "13476:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13481:2:5",
																		"nodeType": "YulLiteral",
																		"src": "13481:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13472:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13472:3:5"
																},
																"nativeSrc": "13472:12:5",
																"nodeType": "YulFunctionCall",
																"src": "13472:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13465:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13465:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13125:365:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13259:3:5",
														"nodeType": "YulTypedName",
														"src": "13259:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13267:3:5",
														"nodeType": "YulTypedName",
														"src": "13267:3:5",
														"type": ""
													}
												],
												"src": "13125:365:5"
											},
											{
												"body": {
													"nativeSrc": "13667:248:5",
													"nodeType": "YulBlock",
													"src": "13667:248:5",
													"statements": [
														{
															"nativeSrc": "13677:26:5",
															"nodeType": "YulAssignment",
															"src": "13677:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13689:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "13689:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13700:2:5",
																		"nodeType": "YulLiteral",
																		"src": "13700:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13685:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13685:3:5"
																},
																"nativeSrc": "13685:18:5",
																"nodeType": "YulFunctionCall",
																"src": "13685:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13677:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "13677:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13724:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "13724:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13735:1:5",
																				"nodeType": "YulLiteral",
																				"src": "13735:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13720:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13720:3:5"
																		},
																		"nativeSrc": "13720:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13720:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13743:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "13743:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13749:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "13749:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13739:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13739:3:5"
																		},
																		"nativeSrc": "13739:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13739:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13713:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "13713:6:5"
																},
																"nativeSrc": "13713:47:5",
																"nodeType": "YulFunctionCall",
																"src": "13713:47:5"
															},
															"nativeSrc": "13713:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "13713:47:5"
														},
														{
															"nativeSrc": "13769:139:5",
															"nodeType": "YulAssignment",
															"src": "13769:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13903:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "13903:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13777:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "13777:124:5"
																},
																"nativeSrc": "13777:131:5",
																"nodeType": "YulFunctionCall",
																"src": "13777:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13769:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "13769:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13496:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13647:9:5",
														"nodeType": "YulTypedName",
														"src": "13647:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13662:4:5",
														"nodeType": "YulTypedName",
														"src": "13662:4:5",
														"type": ""
													}
												],
												"src": "13496:419:5"
											},
											{
												"body": {
													"nativeSrc": "14047:206:5",
													"nodeType": "YulBlock",
													"src": "14047:206:5",
													"statements": [
														{
															"nativeSrc": "14057:26:5",
															"nodeType": "YulAssignment",
															"src": "14057:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14069:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "14069:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14080:2:5",
																		"nodeType": "YulLiteral",
																		"src": "14080:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14065:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14065:3:5"
																},
																"nativeSrc": "14065:18:5",
																"nodeType": "YulFunctionCall",
																"src": "14065:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14057:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "14057:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14137:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "14137:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14150:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "14150:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14161:1:5",
																				"nodeType": "YulLiteral",
																				"src": "14161:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14146:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14146:3:5"
																		},
																		"nativeSrc": "14146:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14146:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14093:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "14093:43:5"
																},
																"nativeSrc": "14093:71:5",
																"nodeType": "YulFunctionCall",
																"src": "14093:71:5"
															},
															"nativeSrc": "14093:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "14093:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14218:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "14218:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14231:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "14231:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14242:2:5",
																				"nodeType": "YulLiteral",
																				"src": "14242:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14227:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14227:3:5"
																		},
																		"nativeSrc": "14227:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14227:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14174:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "14174:43:5"
																},
																"nativeSrc": "14174:72:5",
																"nodeType": "YulFunctionCall",
																"src": "14174:72:5"
															},
															"nativeSrc": "14174:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "14174:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13921:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14011:9:5",
														"nodeType": "YulTypedName",
														"src": "14011:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14023:6:5",
														"nodeType": "YulTypedName",
														"src": "14023:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14031:6:5",
														"nodeType": "YulTypedName",
														"src": "14031:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14042:4:5",
														"nodeType": "YulTypedName",
														"src": "14042:4:5",
														"type": ""
													}
												],
												"src": "13921:332:5"
											},
											{
												"body": {
													"nativeSrc": "14365:46:5",
													"nodeType": "YulBlock",
													"src": "14365:46:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14387:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "14387:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14395:1:5",
																				"nodeType": "YulLiteral",
																				"src": "14395:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14383:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14383:3:5"
																		},
																		"nativeSrc": "14383:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14383:14:5"
																	},
																	{
																		"hexValue": "5341",
																		"kind": "string",
																		"nativeSrc": "14399:4:5",
																		"nodeType": "YulLiteral",
																		"src": "14399:4:5",
																		"type": "",
																		"value": "SA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14376:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "14376:6:5"
																},
																"nativeSrc": "14376:28:5",
																"nodeType": "YulFunctionCall",
																"src": "14376:28:5"
															},
															"nativeSrc": "14376:28:5",
															"nodeType": "YulExpressionStatement",
															"src": "14376:28:5"
														}
													]
												},
												"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
												"nativeSrc": "14259:152:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14357:6:5",
														"nodeType": "YulTypedName",
														"src": "14357:6:5",
														"type": ""
													}
												],
												"src": "14259:152:5"
											},
											{
												"body": {
													"nativeSrc": "14563:219:5",
													"nodeType": "YulBlock",
													"src": "14563:219:5",
													"statements": [
														{
															"nativeSrc": "14573:73:5",
															"nodeType": "YulAssignment",
															"src": "14573:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14639:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "14639:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14644:1:5",
																		"nodeType": "YulLiteral",
																		"src": "14644:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14580:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "14580:58:5"
																},
																"nativeSrc": "14580:66:5",
																"nodeType": "YulFunctionCall",
																"src": "14580:66:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14573:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14573:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14744:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "14744:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																	"nativeSrc": "14655:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "14655:88:5"
																},
																"nativeSrc": "14655:93:5",
																"nodeType": "YulFunctionCall",
																"src": "14655:93:5"
															},
															"nativeSrc": "14655:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "14655:93:5"
														},
														{
															"nativeSrc": "14757:19:5",
															"nodeType": "YulAssignment",
															"src": "14757:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14768:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "14768:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14773:2:5",
																		"nodeType": "YulLiteral",
																		"src": "14773:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14764:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14764:3:5"
																},
																"nativeSrc": "14764:12:5",
																"nodeType": "YulFunctionCall",
																"src": "14764:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14757:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14757:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14417:365:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14551:3:5",
														"nodeType": "YulTypedName",
														"src": "14551:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14559:3:5",
														"nodeType": "YulTypedName",
														"src": "14559:3:5",
														"type": ""
													}
												],
												"src": "14417:365:5"
											},
											{
												"body": {
													"nativeSrc": "14959:248:5",
													"nodeType": "YulBlock",
													"src": "14959:248:5",
													"statements": [
														{
															"nativeSrc": "14969:26:5",
															"nodeType": "YulAssignment",
															"src": "14969:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14981:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "14981:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14992:2:5",
																		"nodeType": "YulLiteral",
																		"src": "14992:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14977:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14977:3:5"
																},
																"nativeSrc": "14977:18:5",
																"nodeType": "YulFunctionCall",
																"src": "14977:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14969:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "14969:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15016:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "15016:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15027:1:5",
																				"nodeType": "YulLiteral",
																				"src": "15027:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15012:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "15012:3:5"
																		},
																		"nativeSrc": "15012:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "15012:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15035:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "15035:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15041:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "15041:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15031:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "15031:3:5"
																		},
																		"nativeSrc": "15031:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "15031:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15005:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "15005:6:5"
																},
																"nativeSrc": "15005:47:5",
																"nodeType": "YulFunctionCall",
																"src": "15005:47:5"
															},
															"nativeSrc": "15005:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "15005:47:5"
														},
														{
															"nativeSrc": "15061:139:5",
															"nodeType": "YulAssignment",
															"src": "15061:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15195:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "15195:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15069:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "15069:124:5"
																},
																"nativeSrc": "15069:131:5",
																"nodeType": "YulFunctionCall",
																"src": "15069:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15061:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "15061:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14788:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14939:9:5",
														"nodeType": "YulTypedName",
														"src": "14939:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14954:4:5",
														"nodeType": "YulTypedName",
														"src": "14954:4:5",
														"type": ""
													}
												],
												"src": "14788:419:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISwapRouter_$191_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapRouter_$191_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function shift_left_232(value) -> newValue {\n        newValue :=\n\n        shl(232, value)\n\n    }\n\n    function leftAlign_t_uint24(value) -> aligned {\n        aligned := shift_left_232(value)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint24(cleanup_t_uint24(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_uint24_t_address_t_uint24_t_address__to_t_address_t_uint24_t_address_t_uint24_t_address__nonPadded_inplace_fromStack_reversed(pos , value4, value3, value2, value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint24_to_t_uint24_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 3)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint24_to_t_uint24_nonPadded_inplace_fromStack(value3,  pos)\n        pos := add(pos, 3)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value4,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct ISwapRouter.ExactOutputParams -> struct ISwapRouter.ExactOutputParams\n    function abi_encode_t_struct$_ExactOutputParams_$181_memory_ptr_to_t_struct$_ExactOutputParams_$181_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // path\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // amountOut\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // amountInMaximum\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_ExactOutputParams_$181_memory_ptr__to_t_struct$_ExactOutputParams_$181_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_ExactOutputParams_$181_memory_ptr_to_t_struct$_ExactOutputParams_$181_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    // struct ISwapRouter.ExactInputParams -> struct ISwapRouter.ExactInputParams\n    function abi_encode_t_struct$_ExactInputParams_$135_memory_ptr_to_t_struct$_ExactInputParams_$135_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // path\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputParams_$135_memory_ptr__to_t_struct$_ExactInputParams_$135_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_ExactInputParams_$135_memory_ptr_to_t_struct$_ExactInputParams_$135_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86(memPtr) {\n\n        mstore(add(memPtr, 0), \"STF\")\n\n    }\n\n    function abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 3)\n        store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(memPtr) {\n\n        mstore(add(memPtr, 0), \"SA\")\n\n    }\n\n    function abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 2)\n        store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"369": [
									{
										"length": 32,
										"start": 503
									},
									{
										"length": 32,
										"start": 733
									},
									{
										"length": 32,
										"start": 932
									},
									{
										"length": 32,
										"start": 1094
									},
									{
										"length": 32,
										"start": 1283
									},
									{
										"length": 32,
										"start": 1513
									}
								],
								"375": [
									{
										"length": 32,
										"start": 426
									},
									{
										"length": 32,
										"start": 470
									},
									{
										"length": 32,
										"start": 614
									},
									{
										"length": 32,
										"start": 899
									},
									{
										"length": 32,
										"start": 974
									},
									{
										"length": 32,
										"start": 1166
									},
									{
										"length": 32,
										"start": 1206
									},
									{
										"length": 32,
										"start": 1250
									},
									{
										"length": 32,
										"start": 1334
									}
								],
								"377": [
									{
										"length": 32,
										"start": 1130
									}
								],
								"379": [
									{
										"length": 32,
										"start": 578
									},
									{
										"length": 32,
										"start": 1058
									},
									{
										"length": 32,
										"start": 1370
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC31C9C07 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0xC54E44EB EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0xE0BAB4C4 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0xEDD83557 EQ PUSH2 0x16E JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x89FE6AA EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x3B85CF6A EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0xF6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x92 PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST PUSH2 0x1A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF SWAP2 SWAP1 PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE0 PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFE PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10B SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11C PUSH2 0x444 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0xAAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH2 0x468 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x48C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x1D1 PUSH32 0x0 CALLER ADDRESS DUP6 PUSH2 0x688 JUMP JUMPDEST PUSH2 0x21C PUSH32 0x0 PUSH32 0x0 DUP5 PUSH2 0x7DA JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH2 0xBB8 PUSH32 0x0 PUSH2 0xBB8 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x299 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF28C0498 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP2 SWAP1 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x350 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 LT ISZERO PUSH2 0x401 JUMPI PUSH2 0x3C9 PUSH32 0x0 PUSH32 0x0 PUSH0 PUSH2 0x7DA JUMP JUMPDEST PUSH2 0x400 PUSH32 0x0 ADDRESS CALLER DUP6 DUP8 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0xD57 JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x4DD PUSH32 0x0 CALLER ADDRESS DUP6 PUSH2 0x688 JUMP JUMPDEST PUSH2 0x528 PUSH32 0x0 PUSH32 0x0 DUP5 PUSH2 0x7DA JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0x0 PUSH2 0xBB8 PUSH32 0x0 PUSH2 0xBB8 PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5A5 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC04B8D59 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x640 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x65C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x680 SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x6BE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x728 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x761 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x766 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x793 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x792 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x791 SWAP2 SWAP1 PUSH2 0xED7 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x7D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C9 SWAP1 PUSH2 0xF5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x80E SWAP3 SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x878 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x8E3 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x8E2 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x8E1 SWAP2 SWAP1 PUSH2 0xED7 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x922 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x919 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x940 DUP2 PUSH2 0x929 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x959 PUSH0 DUP4 ADD DUP5 PUSH2 0x937 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x975 DUP2 PUSH2 0x963 JUMP JUMPDEST DUP2 EQ PUSH2 0x97F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x990 DUP2 PUSH2 0x96C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9AC JUMPI PUSH2 0x9AB PUSH2 0x95F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9B9 DUP6 DUP3 DUP7 ADD PUSH2 0x982 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9CA DUP6 DUP3 DUP7 ADD PUSH2 0x982 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x9DD DUP2 PUSH2 0x963 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9F6 PUSH0 DUP4 ADD DUP5 PUSH2 0x9D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA25 DUP3 PUSH2 0x9FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA35 DUP2 PUSH2 0xA1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA4E PUSH0 DUP4 ADD DUP5 PUSH2 0xA2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA77 PUSH2 0xA72 PUSH2 0xA6D DUP5 PUSH2 0x9FC JUMP JUMPDEST PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x9FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA88 DUP3 PUSH2 0xA5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA99 DUP3 PUSH2 0xA7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA9 DUP2 PUSH2 0xA8F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAC2 PUSH0 DUP4 ADD DUP5 PUSH2 0xAA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xADD JUMPI PUSH2 0xADC PUSH2 0x95F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAEA DUP5 DUP3 DUP6 ADD PUSH2 0x982 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB09 DUP3 PUSH2 0xAF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB1A DUP3 PUSH2 0xAFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB32 PUSH2 0xB2D DUP3 PUSH2 0xA1B JUMP JUMPDEST PUSH2 0xB10 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xE8 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB4E DUP3 PUSH2 0xB38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB66 PUSH2 0xB61 DUP3 PUSH2 0x929 JUMP JUMPDEST PUSH2 0xB44 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB77 DUP3 DUP9 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xB87 DUP3 DUP8 PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SWAP2 POP PUSH2 0xB97 DUP3 DUP7 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xBA7 DUP3 DUP6 PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SWAP2 POP PUSH2 0xBB7 DUP3 DUP5 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC0C DUP3 PUSH2 0xBCA JUMP JUMPDEST PUSH2 0xC16 DUP2 DUP6 PUSH2 0xBD4 JUMP JUMPDEST SWAP4 POP PUSH2 0xC26 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0xC2F DUP2 PUSH2 0xBF2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC43 DUP2 PUSH2 0xA1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC52 DUP2 PUSH2 0x963 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0xC72 DUP3 DUP3 PUSH2 0xC02 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0xC87 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xC3A JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0xC9A PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0xC49 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0xCAD PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0xC49 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xCC0 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0xC49 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCE3 DUP2 DUP5 PUSH2 0xC58 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCF9 DUP2 PUSH2 0x96C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD14 JUMPI PUSH2 0xD13 PUSH2 0x95F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD21 DUP5 DUP3 DUP6 ADD PUSH2 0xCEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD61 DUP3 PUSH2 0x963 JUMP JUMPDEST SWAP2 POP PUSH2 0xD6C DUP4 PUSH2 0x963 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xD84 JUMPI PUSH2 0xD83 PUSH2 0xD2A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0xDA4 DUP3 DUP3 PUSH2 0xC02 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0xDB9 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xC3A JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0xDCC PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0xC49 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0xDDF PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0xC49 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xDF2 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0xC49 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE15 DUP2 DUP5 PUSH2 0xD8A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE30 PUSH0 DUP4 ADD DUP7 PUSH2 0xA2C JUMP JUMPDEST PUSH2 0xE3D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA2C JUMP JUMPDEST PUSH2 0xE4A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9D4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE66 DUP3 PUSH2 0xBCA JUMP JUMPDEST PUSH2 0xE70 DUP2 DUP6 PUSH2 0xE52 JUMP JUMPDEST SWAP4 POP PUSH2 0xE80 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xBE4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE97 DUP3 DUP5 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB6 DUP2 PUSH2 0xEA2 JUMP JUMPDEST DUP2 EQ PUSH2 0xEC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xED1 DUP2 PUSH2 0xEAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEEC JUMPI PUSH2 0xEEB PUSH2 0x95F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEF9 DUP5 DUP3 DUP6 ADD PUSH2 0xEC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354460000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF46 PUSH1 0x3 DUP4 PUSH2 0xF02 JUMP JUMPDEST SWAP2 POP PUSH2 0xF51 DUP3 PUSH2 0xF12 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF73 DUP2 PUSH2 0xF3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF8D PUSH0 DUP4 ADD DUP6 PUSH2 0xA2C JUMP JUMPDEST PUSH2 0xF9A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9D4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFD5 PUSH1 0x2 DUP4 PUSH2 0xF02 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE0 DUP3 PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1002 DUP2 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY CALL PREVRANDAO PUSH19 0x1D762FE0A1827D275FA40D513CBDBE36947159 PUSH27 0x7FA4067A2B4E289664736F6C634300081A00330000000000000000 ",
							"sourceMap": "205:3796:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;516:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2879:1119;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;430:74;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;394:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;233:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;358:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;323:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1268:740;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;516:37;549:4;516:37;:::o;2879:1119::-;2999:16;3028:143;3074:3;3092:10;3125:4;3145:15;3028:31;:143::i;:::-;3182:69;3209:3;3222:10;3235:15;3182:26;:69::i;:::-;3264:43;3310:311;;;;;;;;462:42;549:4;3412;549;3427:3;3379:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3310:311;;;;3461:10;3310:311;;;;;;3500:15;3310:311;;;;3545:9;3310:311;;;;3590:15;3310:311;;;3264:357;;3645:10;:22;;;3668:6;3645:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3634:41;;3703:15;3692:8;:26;3688:303;;;3735:55;3762:3;3775:10;3788:1;3735:26;:55::i;:::-;3805:174;3855:3;3885:4;3909:10;3956:8;3938:15;:26;;;;:::i;:::-;3805:31;:174::i;:::-;3688:303;3017:981;2879:1119;;;;:::o;430:74::-;462:42;430:74;:::o;394:29::-;;;:::o;233:39::-;;;:::o;358:29::-;;;:::o;323:28::-;;;:::o;1268:740::-;1352:17;1382:136;1428:3;1446:10;1479:4;1499:8;1382:31;:136::i;:::-;1531:62;1558:3;1571:10;1584:8;1531:26;:62::i;:::-;1606:42;1651:295;;;;;;;;1736:3;549:4;1750;549;462:42;1719:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1651:295;;;;1801:10;1651:295;;;;;;1840:15;1651:295;;;;1884:8;1651:295;;;;1929:1;1651:295;;;1606:340;;1971:10;:21;;;1993:6;1971:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1959:41;;1371:637;1268:740;;;:::o;561:358:3:-;701:12;715:17;748:5;:10;;782:28;;;812:4;818:2;822:5;759:69;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;748:81;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:129;;;;847:7;:57;;;;;874:1;859:4;:11;:16;:44;;;;890:4;879:24;;;;;;;;;;;;:::i;:::-;859:44;847:57;839:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;690:229;;561:358;;;;:::o;1873:307::-;1986:12;2000:17;2021:5;:10;;2055:23;;;2080:2;2084:5;2032:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:70;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:106;;;;2109:7;:57;;;;;2136:1;2121:4;:11;:16;:44;;;;2152:4;2141:24;;;;;;;;;;;;:::i;:::-;2121:44;2109:57;2101:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1975:205;;1873:307;;;:::o;7:91:5:-;43:7;83:8;76:5;72:20;61:31;;7:91;;;:::o;104:115::-;189:23;206:5;189:23;:::i;:::-;184:3;177:36;104:115;;:::o;225:218::-;316:4;354:2;343:9;339:18;331:26;;367:69;433:1;422:9;418:17;409:6;367:69;:::i;:::-;225:218;;;;:::o;530:117::-;639:1;636;629:12;776:77;813:7;842:5;831:16;;776:77;;;:::o;859:122::-;932:24;950:5;932:24;:::i;:::-;925:5;922:35;912:63;;971:1;968;961:12;912:63;859:122;:::o;987:139::-;1033:5;1071:6;1058:20;1049:29;;1087:33;1114:5;1087:33;:::i;:::-;987:139;;;;:::o;1132:474::-;1200:6;1208;1257:2;1245:9;1236:7;1232:23;1228:32;1225:119;;;1263:79;;:::i;:::-;1225:119;1383:1;1408:53;1453:7;1444:6;1433:9;1429:22;1408:53;:::i;:::-;1398:63;;1354:117;1510:2;1536:53;1581:7;1572:6;1561:9;1557:22;1536:53;:::i;:::-;1526:63;;1481:118;1132:474;;;;;:::o;1612:118::-;1699:24;1717:5;1699:24;:::i;:::-;1694:3;1687:37;1612:118;;:::o;1736:222::-;1829:4;1867:2;1856:9;1852:18;1844:26;;1880:71;1948:1;1937:9;1933:17;1924:6;1880:71;:::i;:::-;1736:222;;;;:::o;1964:126::-;2001:7;2041:42;2034:5;2030:54;2019:65;;1964:126;;;:::o;2096:96::-;2133:7;2162:24;2180:5;2162:24;:::i;:::-;2151:35;;2096:96;;;:::o;2198:118::-;2285:24;2303:5;2285:24;:::i;:::-;2280:3;2273:37;2198:118;;:::o;2322:222::-;2415:4;2453:2;2442:9;2438:18;2430:26;;2466:71;2534:1;2523:9;2519:17;2510:6;2466:71;:::i;:::-;2322:222;;;;:::o;2550:60::-;2578:3;2599:5;2592:12;;2550:60;;;:::o;2616:142::-;2666:9;2699:53;2717:34;2726:24;2744:5;2726:24;:::i;:::-;2717:34;:::i;:::-;2699:53;:::i;:::-;2686:66;;2616:142;;;:::o;2764:126::-;2814:9;2847:37;2878:5;2847:37;:::i;:::-;2834:50;;2764:126;;;:::o;2896:145::-;2965:9;2998:37;3029:5;2998:37;:::i;:::-;2985:50;;2896:145;;;:::o;3047:169::-;3153:56;3203:5;3153:56;:::i;:::-;3148:3;3141:69;3047:169;;:::o;3222:260::-;3334:4;3372:2;3361:9;3357:18;3349:26;;3385:90;3472:1;3461:9;3457:17;3448:6;3385:90;:::i;:::-;3222:260;;;;:::o;3488:329::-;3547:6;3596:2;3584:9;3575:7;3571:23;3567:32;3564:119;;;3602:79;;:::i;:::-;3564:119;3722:1;3747:53;3792:7;3783:6;3772:9;3768:22;3747:53;:::i;:::-;3737:63;;3693:117;3488:329;;;;:::o;3823:94::-;3856:8;3904:5;3900:2;3896:14;3875:35;;3823:94;;;:::o;3923:::-;3962:7;3991:20;4005:5;3991:20;:::i;:::-;3980:31;;3923:94;;;:::o;4023:100::-;4062:7;4091:26;4111:5;4091:26;:::i;:::-;4080:37;;4023:100;;;:::o;4129:157::-;4234:45;4254:24;4272:5;4254:24;:::i;:::-;4234:45;:::i;:::-;4229:3;4222:58;4129:157;;:::o;4292:96::-;4326:8;4375:5;4370:3;4366:15;4345:36;;4292:96;;;:::o;4394:94::-;4432:7;4461:21;4476:5;4461:21;:::i;:::-;4450:32;;4394:94;;;:::o;4494:153::-;4597:43;4616:23;4633:5;4616:23;:::i;:::-;4597:43;:::i;:::-;4592:3;4585:56;4494:153;;:::o;4653:810::-;4873:3;4888:75;4959:3;4950:6;4888:75;:::i;:::-;4988:2;4983:3;4979:12;4972:19;;5001:73;5070:3;5061:6;5001:73;:::i;:::-;5099:1;5094:3;5090:11;5083:18;;5111:75;5182:3;5173:6;5111:75;:::i;:::-;5211:2;5206:3;5202:12;5195:19;;5224:73;5293:3;5284:6;5224:73;:::i;:::-;5322:1;5317:3;5313:11;5306:18;;5334:75;5405:3;5396:6;5334:75;:::i;:::-;5434:2;5429:3;5425:12;5418:19;;5454:3;5447:10;;4653:810;;;;;;;;:::o;5469:98::-;5520:6;5554:5;5548:12;5538:22;;5469:98;;;:::o;5573:158::-;5646:11;5680:6;5675:3;5668:19;5720:4;5715:3;5711:14;5696:29;;5573:158;;;;:::o;5737:139::-;5826:6;5821:3;5816;5810:23;5867:1;5858:6;5853:3;5849:16;5842:27;5737:139;;;:::o;5882:102::-;5923:6;5974:2;5970:7;5965:2;5958:5;5954:14;5950:28;5940:38;;5882:102;;;:::o;5990:353::-;6066:3;6094:38;6126:5;6094:38;:::i;:::-;6148:60;6201:6;6196:3;6148:60;:::i;:::-;6141:67;;6217:65;6275:6;6270:3;6263:4;6256:5;6252:16;6217:65;:::i;:::-;6307:29;6329:6;6307:29;:::i;:::-;6302:3;6298:39;6291:46;;6070:273;5990:353;;;;:::o;6349:108::-;6426:24;6444:5;6426:24;:::i;:::-;6421:3;6414:37;6349:108;;:::o;6463:::-;6540:24;6558:5;6540:24;:::i;:::-;6535:3;6528:37;6463:108;;:::o;6661:1169::-;6798:3;6834:4;6829:3;6825:14;6921:4;6914:5;6910:16;6904:23;6974:3;6968:4;6964:14;6957:4;6952:3;6948:14;6941:38;7000:71;7066:4;7052:12;7000:71;:::i;:::-;6992:79;;6849:233;7169:4;7162:5;7158:16;7152:23;7188:63;7245:4;7240:3;7236:14;7222:12;7188:63;:::i;:::-;7092:169;7347:4;7340:5;7336:16;7330:23;7366:63;7423:4;7418:3;7414:14;7400:12;7366:63;:::i;:::-;7271:168;7526:4;7519:5;7515:16;7509:23;7545:63;7602:4;7597:3;7593:14;7579:12;7545:63;:::i;:::-;7449:169;7711:4;7704:5;7700:16;7694:23;7730:63;7787:4;7782:3;7778:14;7764:12;7730:63;:::i;:::-;7628:175;7820:4;7813:11;;6803:1027;6661:1169;;;;:::o;7836:409::-;7997:4;8035:2;8024:9;8020:18;8012:26;;8084:9;8078:4;8074:20;8070:1;8059:9;8055:17;8048:47;8112:126;8233:4;8224:6;8112:126;:::i;:::-;8104:134;;7836:409;;;;:::o;8251:143::-;8308:5;8339:6;8333:13;8324:22;;8355:33;8382:5;8355:33;:::i;:::-;8251:143;;;;:::o;8400:351::-;8470:6;8519:2;8507:9;8498:7;8494:23;8490:32;8487:119;;;8525:79;;:::i;:::-;8487:119;8645:1;8670:64;8726:7;8717:6;8706:9;8702:22;8670:64;:::i;:::-;8660:74;;8616:128;8400:351;;;;:::o;8757:180::-;8805:77;8802:1;8795:88;8902:4;8899:1;8892:15;8926:4;8923:1;8916:15;8943:194;8983:4;9003:20;9021:1;9003:20;:::i;:::-;8998:25;;9037:20;9055:1;9037:20;:::i;:::-;9032:25;;9081:1;9078;9074:9;9066:17;;9105:1;9099:4;9096:11;9093:37;;;9110:18;;:::i;:::-;9093:37;8943:194;;;;:::o;9225:1167::-;9360:3;9396:4;9391:3;9387:14;9483:4;9476:5;9472:16;9466:23;9536:3;9530:4;9526:14;9519:4;9514:3;9510:14;9503:38;9562:71;9628:4;9614:12;9562:71;:::i;:::-;9554:79;;9411:233;9731:4;9724:5;9720:16;9714:23;9750:63;9807:4;9802:3;9798:14;9784:12;9750:63;:::i;:::-;9654:169;9909:4;9902:5;9898:16;9892:23;9928:63;9985:4;9980:3;9976:14;9962:12;9928:63;:::i;:::-;9833:168;10087:4;10080:5;10076:16;10070:23;10106:63;10163:4;10158:3;10154:14;10140:12;10106:63;:::i;:::-;10011:168;10273:4;10266:5;10262:16;10256:23;10292:63;10349:4;10344:3;10340:14;10326:12;10292:63;:::i;:::-;10189:176;10382:4;10375:11;;9365:1027;9225:1167;;;;:::o;10398:405::-;10557:4;10595:2;10584:9;10580:18;10572:26;;10644:9;10638:4;10634:20;10630:1;10619:9;10615:17;10608:47;10672:124;10791:4;10782:6;10672:124;:::i;:::-;10664:132;;10398:405;;;;:::o;10809:442::-;10958:4;10996:2;10985:9;10981:18;10973:26;;11009:71;11077:1;11066:9;11062:17;11053:6;11009:71;:::i;:::-;11090:72;11158:2;11147:9;11143:18;11134:6;11090:72;:::i;:::-;11172;11240:2;11229:9;11225:18;11216:6;11172:72;:::i;:::-;10809:442;;;;;;:::o;11257:147::-;11358:11;11395:3;11380:18;;11257:147;;;;:::o;11410:386::-;11514:3;11542:38;11574:5;11542:38;:::i;:::-;11596:88;11677:6;11672:3;11596:88;:::i;:::-;11589:95;;11693:65;11751:6;11746:3;11739:4;11732:5;11728:16;11693:65;:::i;:::-;11783:6;11778:3;11774:16;11767:23;;11518:278;11410:386;;;;:::o;11802:271::-;11932:3;11954:93;12043:3;12034:6;11954:93;:::i;:::-;11947:100;;12064:3;12057:10;;11802:271;;;;:::o;12079:90::-;12113:7;12156:5;12149:13;12142:21;12131:32;;12079:90;;;:::o;12175:116::-;12245:21;12260:5;12245:21;:::i;:::-;12238:5;12235:32;12225:60;;12281:1;12278;12271:12;12225:60;12175:116;:::o;12297:137::-;12351:5;12382:6;12376:13;12367:22;;12398:30;12422:5;12398:30;:::i;:::-;12297:137;;;;:::o;12440:345::-;12507:6;12556:2;12544:9;12535:7;12531:23;12527:32;12524:119;;;12562:79;;:::i;:::-;12524:119;12682:1;12707:61;12760:7;12751:6;12740:9;12736:22;12707:61;:::i;:::-;12697:71;;12653:125;12440:345;;;;:::o;12791:169::-;12875:11;12909:6;12904:3;12897:19;12949:4;12944:3;12940:14;12925:29;;12791:169;;;;:::o;12966:153::-;13106:5;13102:1;13094:6;13090:14;13083:29;12966:153;:::o;13125:365::-;13267:3;13288:66;13352:1;13347:3;13288:66;:::i;:::-;13281:73;;13363:93;13452:3;13363:93;:::i;:::-;13481:2;13476:3;13472:12;13465:19;;13125:365;;;:::o;13496:419::-;13662:4;13700:2;13689:9;13685:18;13677:26;;13749:9;13743:4;13739:20;13735:1;13724:9;13720:17;13713:47;13777:131;13903:4;13777:131;:::i;:::-;13769:139;;13496:419;;;:::o;13921:332::-;14042:4;14080:2;14069:9;14065:18;14057:26;;14093:71;14161:1;14150:9;14146:17;14137:6;14093:71;:::i;:::-;14174:72;14242:2;14231:9;14227:18;14218:6;14174:72;:::i;:::-;13921:332;;;;;:::o;14259:152::-;14399:4;14395:1;14387:6;14383:14;14376:28;14259:152;:::o;14417:365::-;14559:3;14580:66;14644:1;14639:3;14580:66;:::i;:::-;14573:73;;14655:93;14744:3;14655:93;:::i;:::-;14773:2;14768:3;14764:12;14757:19;;14417:365;;;:::o;14788:419::-;14954:4;14992:2;14981:9;14977:18;14969:26;;15041:9;15035:4;15031:20;15027:1;15016:9;15012:17;15005:47;15069:131;15195:4;15069:131;:::i;:::-;15061:139;;14788:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "831800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DAI()": "infinite",
								"USDC()": "infinite",
								"USDT()": "infinite",
								"WETH9()": "418",
								"poolFee()": "332",
								"swapExactInputMultihop(uint256)": "infinite",
								"swapExactOutputMultihop(uint256,uint256)": "infinite",
								"swapRouter()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 205,
									"end": 4001,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 562,
									"end": 753,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 562,
									"end": 753,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 562,
									"end": 753,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 562,
									"end": 753,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 562,
									"end": 753,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 562,
									"end": 753,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 562,
									"end": 753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 562,
									"end": 753,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 667,
									"end": 678,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 654,
									"end": 678,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 654,
									"end": 678,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 654,
									"end": 678,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 654,
									"end": 678,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 654,
									"end": 678,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 654,
									"end": 678,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 654,
									"end": 678,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 654,
									"end": 678,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 654,
									"end": 678,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 654,
									"end": 678,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 695,
									"end": 699,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 689,
									"end": 699,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 689,
									"end": 699,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 689,
									"end": 699,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 689,
									"end": 699,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 689,
									"end": 699,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 689,
									"end": 699,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 689,
									"end": 699,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 689,
									"end": 699,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 689,
									"end": 699,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 689,
									"end": 699,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 717,
									"end": 722,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 710,
									"end": 722,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 710,
									"end": 722,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 710,
									"end": 722,
									"name": "PUSH",
									"source": 4,
									"value": "C0"
								},
								{
									"begin": 710,
									"end": 722,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 710,
									"end": 722,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 710,
									"end": 722,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 710,
									"end": 722,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 710,
									"end": 722,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 710,
									"end": 722,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 710,
									"end": 722,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 740,
									"end": 745,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 733,
									"end": 745,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 733,
									"end": 745,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 733,
									"end": 745,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 733,
									"end": 745,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 733,
									"end": 745,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 733,
									"end": 745,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 733,
									"end": 745,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 733,
									"end": 745,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 733,
									"end": 745,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 733,
									"end": 745,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 562,
									"end": 753,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 683,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 624,
									"end": 631,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 671,
									"end": 676,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 653,
									"end": 677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 653,
									"end": 677,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 642,
									"end": 677,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 642,
									"end": 677,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 689,
									"end": 849,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 689,
									"end": 849,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 818,
									"end": 823,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 781,
									"end": 824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 781,
									"end": 824,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 781,
									"end": 824,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 774,
									"end": 779,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 771,
									"end": 825,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 761,
									"end": 843,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 839,
									"end": 840,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 829,
									"end": 841,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 761,
									"end": 843,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 689,
									"end": 849,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 689,
									"end": 849,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 931,
									"end": 936,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 962,
									"end": 968,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 956,
									"end": 969,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 947,
									"end": 969,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 947,
									"end": 969,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1024,
									"end": 1029,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 978,
									"end": 1030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1164,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1042,
									"end": 1164,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1139,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1133,
									"end": 1138,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1139,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1115,
									"end": 1139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1139,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1115,
									"end": 1139,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1108,
									"end": 1113,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1140,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1095,
									"end": 1158,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1095,
									"end": 1158,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1154,
									"end": 1155,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1151,
									"end": 1152,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1144,
									"end": 1156,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1095,
									"end": 1158,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1095,
									"end": 1158,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1164,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1164,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1170,
									"end": 1313,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1170,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1227,
									"end": 1232,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1258,
									"end": 1264,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1252,
									"end": 1265,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1243,
									"end": 1265,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1243,
									"end": 1265,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1274,
									"end": 1307,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1301,
									"end": 1306,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1274,
									"end": 1307,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1274,
									"end": 1307,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1274,
									"end": 1307,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1274,
									"end": 1307,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1170,
									"end": 1313,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1170,
									"end": 1313,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1170,
									"end": 1313,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1170,
									"end": 1313,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1170,
									"end": 1313,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 2177,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1319,
									"end": 2177,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1435,
									"end": 1441,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1443,
									"end": 1449,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1451,
									"end": 1457,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1459,
									"end": 1465,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1508,
									"end": 1511,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1496,
									"end": 1505,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1487,
									"end": 1494,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1483,
									"end": 1506,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1479,
									"end": 1512,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1476,
									"end": 1596,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1476,
									"end": 1596,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1476,
									"end": 1596,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1515,
									"end": 1594,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1515,
									"end": 1594,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1515,
									"end": 1594,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1515,
									"end": 1594,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1515,
									"end": 1594,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1476,
									"end": 1596,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1476,
									"end": 1596,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1660,
									"end": 1743,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1735,
									"end": 1742,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1726,
									"end": 1732,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1715,
									"end": 1724,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 1711,
									"end": 1733,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1660,
									"end": 1743,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1660,
									"end": 1743,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1660,
									"end": 1743,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1660,
									"end": 1743,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1650,
									"end": 1743,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 1650,
									"end": 1743,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1606,
									"end": 1753,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1792,
									"end": 1794,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1818,
									"end": 1882,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1874,
									"end": 1881,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1865,
									"end": 1871,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 1850,
									"end": 1872,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1818,
									"end": 1882,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1818,
									"end": 1882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1818,
									"end": 1882,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1818,
									"end": 1882,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1808,
									"end": 1882,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1808,
									"end": 1882,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1763,
									"end": 1892,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1931,
									"end": 1933,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1957,
									"end": 2021,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 2013,
									"end": 2020,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 2004,
									"end": 2010,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1993,
									"end": 2002,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 1989,
									"end": 2011,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1957,
									"end": 2021,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1957,
									"end": 2021,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1957,
									"end": 2021,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1957,
									"end": 2021,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1947,
									"end": 2021,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1947,
									"end": 2021,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1902,
									"end": 2031,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2070,
									"end": 2072,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 2096,
									"end": 2160,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 2152,
									"end": 2159,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 2143,
									"end": 2149,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2132,
									"end": 2141,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 2128,
									"end": 2150,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2096,
									"end": 2160,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 2096,
									"end": 2160,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2096,
									"end": 2160,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 2096,
									"end": 2160,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2086,
									"end": 2160,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2086,
									"end": 2160,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2041,
									"end": 2170,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 2177,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 2177,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 2177,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 2177,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 2177,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 2177,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 2177,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 2177,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "PUSH",
									"source": 4,
									"value": "C0"
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "379"
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "377"
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "375"
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "369"
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 4001,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122039f144721d762fe0a1827d275fa40d513cbdbe369471597a7fa4067a2b4e289664736f6c634300081a0033",
									".code": [
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH",
											"source": 4,
											"value": "C31C9C07"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH",
											"source": 4,
											"value": "C31C9C07"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH",
											"source": 4,
											"value": "C54E44EB"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH",
											"source": 4,
											"value": "E0BAB4C4"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH",
											"source": 4,
											"value": "EDD83557"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH",
											"source": 4,
											"value": "89FE6AA"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH",
											"source": 4,
											"value": "3B85CF6A"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH",
											"source": 4,
											"value": "4AA4A4FC"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH",
											"source": 4,
											"value": "89A30271"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 4001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 516,
											"end": 553,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 516,
											"end": 553,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 516,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 516,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 516,
											"end": 553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 516,
											"end": 553,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 516,
											"end": 553,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 516,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 516,
											"end": 553,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 516,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 516,
											"end": 553,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 516,
											"end": 553,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 516,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 516,
											"end": 553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 516,
											"end": 553,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 516,
											"end": 553,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 516,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 516,
											"end": 553,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 516,
											"end": 553,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 516,
											"end": 553,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 516,
											"end": 553,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 516,
											"end": 553,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 516,
											"end": 553,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2879,
											"end": 3998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2879,
											"end": 3998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2879,
											"end": 3998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 430,
											"end": 504,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 430,
											"end": 504,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 430,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 430,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 430,
											"end": 504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 430,
											"end": 504,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 430,
											"end": 504,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 430,
											"end": 504,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 504,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 430,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 430,
											"end": 504,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 430,
											"end": 504,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 430,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 430,
											"end": 504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 430,
											"end": 504,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 430,
											"end": 504,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 430,
											"end": 504,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 504,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 430,
											"end": 504,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 430,
											"end": 504,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 430,
											"end": 504,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 430,
											"end": 504,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 430,
											"end": 504,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 394,
											"end": 423,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 394,
											"end": 423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 394,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 394,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 394,
											"end": 423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 394,
											"end": 423,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 394,
											"end": 423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 394,
											"end": 423,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 394,
											"end": 423,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 394,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 394,
											"end": 423,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 394,
											"end": 423,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 394,
											"end": 423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 394,
											"end": 423,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 394,
											"end": 423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 394,
											"end": 423,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 394,
											"end": 423,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 394,
											"end": 423,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 423,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 394,
											"end": 423,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 394,
											"end": 423,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 423,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 233,
											"end": 272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 233,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 233,
											"end": 272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 233,
											"end": 272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 233,
											"end": 272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 233,
											"end": 272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 233,
											"end": 272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 358,
											"end": 387,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 358,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 358,
											"end": 387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 358,
											"end": 387,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 358,
											"end": 387,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 358,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 358,
											"end": 387,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 358,
											"end": 387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 358,
											"end": 387,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 358,
											"end": 387,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 358,
											"end": 387,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 387,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 358,
											"end": 387,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 358,
											"end": 387,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 387,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 323,
											"end": 351,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 323,
											"end": 351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 323,
											"end": 351,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 323,
											"end": 351,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 323,
											"end": 351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 323,
											"end": 351,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 323,
											"end": 351,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 323,
											"end": 351,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 323,
											"end": 351,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 323,
											"end": 351,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 323,
											"end": 351,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1268,
											"end": 2008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1268,
											"end": 2008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1268,
											"end": 2008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 516,
											"end": 553,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 516,
											"end": 553,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 549,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 516,
											"end": 553,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 516,
											"end": 553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2999,
											"end": 3015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3074,
											"end": 3077,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 3092,
											"end": 3102,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3129,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3160,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3028,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3028,
											"end": 3171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3028,
											"end": 3171,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3028,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3209,
											"end": 3212,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 3222,
											"end": 3232,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 3235,
											"end": 3250,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3182,
											"end": 3251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3251,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3182,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3264,
											"end": 3307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 462,
											"end": 504,
											"name": "PUSH",
											"source": 4,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 549,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 3412,
											"end": 3416,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 549,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 3427,
											"end": 3430,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3379,
											"end": 3431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3379,
											"end": 3431,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3461,
											"end": 3471,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3500,
											"end": 3515,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3545,
											"end": 3554,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3590,
											"end": 3605,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3621,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3264,
											"end": 3621,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3264,
											"end": 3621,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3655,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 3645,
											"end": 3667,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3645,
											"end": 3667,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3667,
											"name": "PUSH",
											"source": 4,
											"value": "F28C0498"
										},
										{
											"begin": 3668,
											"end": 3674,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3645,
											"end": 3675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3645,
											"end": 3675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3634,
											"end": 3675,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3634,
											"end": 3675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3703,
											"end": 3718,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3692,
											"end": 3700,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3692,
											"end": 3718,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3688,
											"end": 3991,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3688,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3688,
											"end": 3991,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3735,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3762,
											"end": 3765,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 3775,
											"end": 3785,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 3788,
											"end": 3789,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3735,
											"end": 3790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3735,
											"end": 3790,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3735,
											"end": 3790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3855,
											"end": 3858,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 3885,
											"end": 3889,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3909,
											"end": 3919,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3956,
											"end": 3964,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 3953,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3938,
											"end": 3964,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 3964,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3938,
											"end": 3964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 3964,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3938,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3805,
											"end": 3979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3979,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3805,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3688,
											"end": 3991,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3688,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3017,
											"end": 3998,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 3998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 430,
											"end": 504,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 430,
											"end": 504,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 462,
											"end": 504,
											"name": "PUSH",
											"source": 4,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 430,
											"end": 504,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 430,
											"end": 504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 394,
											"end": 423,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 394,
											"end": 423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 394,
											"end": 423,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 394,
											"end": 423,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 394,
											"end": 423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 233,
											"end": 272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 233,
											"end": 272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 358,
											"end": 387,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 358,
											"end": 387,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 358,
											"end": 387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 323,
											"end": 351,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 323,
											"end": 351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1352,
											"end": 1369,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1428,
											"end": 1431,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 1446,
											"end": 1456,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1479,
											"end": 1483,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1507,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1382,
											"end": 1518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1518,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1382,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 1571,
											"end": 1581,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 1584,
											"end": 1592,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1531,
											"end": 1593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1593,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1531,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1648,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 549,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 1750,
											"end": 1754,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 549,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 462,
											"end": 504,
											"name": "PUSH",
											"source": 4,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1719,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1811,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1840,
											"end": 1855,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 1892,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1929,
											"end": 1930,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 1981,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 4,
											"value": "C04B8D59"
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1971,
											"end": 2000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1971,
											"end": 2000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 2000,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 2000,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1371,
											"end": 2008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 2008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 561,
											"end": 919,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 561,
											"end": 919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 701,
											"end": 713,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 732,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 753,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 748,
											"end": 758,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 748,
											"end": 758,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 812,
											"end": 816,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 818,
											"end": 820,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 822,
											"end": 827,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 759,
											"end": 828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 748,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 847,
											"end": 854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 847,
											"end": 904,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 874,
											"end": 875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 859,
											"end": 870,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 859,
											"end": 875,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 859,
											"end": 903,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 890,
											"end": 894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 879,
											"end": 903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 859,
											"end": 903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 847,
											"end": 904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 839,
											"end": 912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 690,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1986,
											"end": 1998,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2017,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2080,
											"end": 2082,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2032,
											"end": 2090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2021,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2116,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2137,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2125,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2132,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2137,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2152,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2141,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2101,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 98,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 7,
											"end": 98,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 43,
											"end": 50,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 91,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFF"
										},
										{
											"begin": 76,
											"end": 81,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 72,
											"end": 92,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 61,
											"end": 92,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 61,
											"end": 92,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 98,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 98,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 104,
											"end": 219,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 104,
											"end": 219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 189,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 206,
											"end": 211,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 189,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 189,
											"end": 212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 189,
											"end": 212,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 189,
											"end": 212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 184,
											"end": 187,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 177,
											"end": 213,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 104,
											"end": 219,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 104,
											"end": 219,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 104,
											"end": 219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 225,
											"end": 443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 316,
											"end": 320,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 354,
											"end": 356,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 343,
											"end": 352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 339,
											"end": 357,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 331,
											"end": 357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 331,
											"end": 357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 367,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 433,
											"end": 434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 431,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 418,
											"end": 435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 409,
											"end": 415,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 367,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 367,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 367,
											"end": 436,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 367,
											"end": 436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 530,
											"end": 647,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 530,
											"end": 647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 639,
											"end": 640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 637,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 629,
											"end": 641,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 776,
											"end": 853,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 776,
											"end": 853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 813,
											"end": 820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 847,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 831,
											"end": 847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 831,
											"end": 847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 776,
											"end": 853,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 776,
											"end": 853,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 776,
											"end": 853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 776,
											"end": 853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 859,
											"end": 981,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 859,
											"end": 981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 950,
											"end": 955,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 932,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 932,
											"end": 956,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 925,
											"end": 930,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 922,
											"end": 957,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 912,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 912,
											"end": 975,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 971,
											"end": 972,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 968,
											"end": 969,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 961,
											"end": 973,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 912,
											"end": 975,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 912,
											"end": 975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 859,
											"end": 981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 859,
											"end": 981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1126,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 987,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1038,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1071,
											"end": 1077,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1049,
											"end": 1078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1049,
											"end": 1078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1114,
											"end": 1119,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1087,
											"end": 1120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1126,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1126,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1606,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1132,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1206,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1214,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1259,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1254,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1236,
											"end": 1243,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1255,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1225,
											"end": 1344,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1225,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1225,
											"end": 1344,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1263,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1263,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1263,
											"end": 1342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1263,
											"end": 1342,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1263,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1225,
											"end": 1344,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1225,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1384,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1408,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1453,
											"end": 1460,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1450,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1433,
											"end": 1442,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1429,
											"end": 1451,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1408,
											"end": 1461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1461,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1408,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1461,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1354,
											"end": 1471,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1512,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1536,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1581,
											"end": 1588,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1572,
											"end": 1578,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1557,
											"end": 1579,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1536,
											"end": 1589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1589,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1536,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1526,
											"end": 1589,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1526,
											"end": 1589,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1606,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1606,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1606,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1606,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1606,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1730,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1612,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 1717,
											"end": 1722,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1699,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 1699,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1697,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1724,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1958,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1736,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1833,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1869,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1856,
											"end": 1865,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1852,
											"end": 1870,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1870,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1870,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1948,
											"end": 1949,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 1946,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1933,
											"end": 1950,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1924,
											"end": 1930,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1880,
											"end": 1951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 1951,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1880,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1958,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1958,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1958,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1958,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1964,
											"end": 2090,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1964,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2034,
											"end": 2039,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2084,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2084,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1964,
											"end": 2090,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1964,
											"end": 2090,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1964,
											"end": 2090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1964,
											"end": 2090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2192,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2096,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2140,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2180,
											"end": 2185,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2162,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2186,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2162,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2151,
											"end": 2186,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2151,
											"end": 2186,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2192,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2198,
											"end": 2316,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2198,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2303,
											"end": 2308,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2285,
											"end": 2309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2280,
											"end": 2283,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2310,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2198,
											"end": 2316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2198,
											"end": 2316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2198,
											"end": 2316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2322,
											"end": 2544,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2322,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2419,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 2455,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2451,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2430,
											"end": 2456,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2430,
											"end": 2456,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2534,
											"end": 2535,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2532,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2536,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2516,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2466,
											"end": 2537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2537,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2466,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2322,
											"end": 2544,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2322,
											"end": 2544,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2322,
											"end": 2544,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2322,
											"end": 2544,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2322,
											"end": 2544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2550,
											"end": 2610,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2550,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2578,
											"end": 2581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2550,
											"end": 2610,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2550,
											"end": 2610,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2550,
											"end": 2610,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2550,
											"end": 2610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2758,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2616,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 2717,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2726,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 2744,
											"end": 2749,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2726,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2726,
											"end": 2750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2726,
											"end": 2750,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 2726,
											"end": 2750,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2717,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2751,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2717,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2699,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2699,
											"end": 2752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2699,
											"end": 2752,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 2699,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 2752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 2752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2758,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2758,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2764,
											"end": 2890,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2764,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2823,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2878,
											"end": 2883,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2847,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2847,
											"end": 2884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2847,
											"end": 2884,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2847,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 2884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 2884,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2764,
											"end": 2890,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2764,
											"end": 2890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2764,
											"end": 2890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2764,
											"end": 2890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2896,
											"end": 3041,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2896,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 2974,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2998,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3029,
											"end": 3034,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2998,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2998,
											"end": 3035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2998,
											"end": 3035,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2998,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3035,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3035,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2896,
											"end": 3041,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2896,
											"end": 3041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2896,
											"end": 3041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2896,
											"end": 3041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3047,
											"end": 3216,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3047,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3153,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3203,
											"end": 3208,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3153,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3153,
											"end": 3209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3153,
											"end": 3209,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3153,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3148,
											"end": 3151,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3141,
											"end": 3210,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3047,
											"end": 3216,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3047,
											"end": 3216,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3047,
											"end": 3216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3482,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3222,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3338,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3372,
											"end": 3374,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3361,
											"end": 3370,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3357,
											"end": 3375,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3349,
											"end": 3375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3349,
											"end": 3375,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3385,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3472,
											"end": 3473,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3461,
											"end": 3470,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3474,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3448,
											"end": 3454,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3385,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3385,
											"end": 3475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3385,
											"end": 3475,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3385,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3482,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3482,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3817,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3488,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3598,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3584,
											"end": 3593,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3575,
											"end": 3582,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3571,
											"end": 3594,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3567,
											"end": 3599,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3683,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 3564,
											"end": 3683,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3602,
											"end": 3681,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 3602,
											"end": 3681,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3602,
											"end": 3681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3602,
											"end": 3681,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 3602,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3683,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 3564,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3723,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3747,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 3792,
											"end": 3799,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3783,
											"end": 3789,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3772,
											"end": 3781,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3790,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3747,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3747,
											"end": 3800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3747,
											"end": 3800,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 3747,
											"end": 3800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3800,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3800,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3693,
											"end": 3810,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3817,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3817,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3917,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3823,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3856,
											"end": 3864,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3909,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3902,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3896,
											"end": 3910,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3910,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3910,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3917,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4017,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3923,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3962,
											"end": 3969,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 4005,
											"end": 4010,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3991,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3991,
											"end": 4011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3991,
											"end": 4011,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 3991,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3980,
											"end": 4011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3980,
											"end": 4011,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4017,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4017,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4017,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4023,
											"end": 4123,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 4023,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4062,
											"end": 4069,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 4111,
											"end": 4116,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4091,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4091,
											"end": 4117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4091,
											"end": 4117,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 4091,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4117,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4117,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4023,
											"end": 4123,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4023,
											"end": 4123,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4023,
											"end": 4123,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4023,
											"end": 4123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4286,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 4129,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4234,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 4254,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 4272,
											"end": 4277,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4254,
											"end": 4278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4278,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 4254,
											"end": 4278,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4234,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 4234,
											"end": 4279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4234,
											"end": 4279,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 4234,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4229,
											"end": 4232,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4280,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4286,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4286,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4388,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 4292,
											"end": 4388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4326,
											"end": 4334,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4380,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4370,
											"end": 4373,
											"name": "PUSH",
											"source": 5,
											"value": "E8"
										},
										{
											"begin": 4366,
											"end": 4381,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4388,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4394,
											"end": 4488,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 4394,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4432,
											"end": 4439,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4461,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 4476,
											"end": 4481,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4461,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 4461,
											"end": 4482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4461,
											"end": 4482,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 4461,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4482,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4394,
											"end": 4488,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4394,
											"end": 4488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4394,
											"end": 4488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4394,
											"end": 4488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4494,
											"end": 4647,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 4494,
											"end": 4647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4597,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 4616,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 4633,
											"end": 4638,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4616,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4616,
											"end": 4639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4616,
											"end": 4639,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 4616,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4597,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 4597,
											"end": 4640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4597,
											"end": 4640,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 4597,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4592,
											"end": 4595,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4641,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4494,
											"end": 4647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4494,
											"end": 4647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4494,
											"end": 4647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 5463,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4653,
											"end": 5463,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4876,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4888,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 4959,
											"end": 4962,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4888,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 4888,
											"end": 4963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4888,
											"end": 4963,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 4888,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 4983,
											"end": 4986,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4979,
											"end": 4991,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 4991,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 4991,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 5070,
											"end": 5073,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5067,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5001,
											"end": 5074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5074,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 5001,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5099,
											"end": 5100,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5094,
											"end": 5097,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5090,
											"end": 5101,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5083,
											"end": 5101,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5083,
											"end": 5101,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5111,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 5182,
											"end": 5185,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5179,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5111,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5111,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5111,
											"end": 5186,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 5111,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5211,
											"end": 5213,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 5206,
											"end": 5209,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5214,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5195,
											"end": 5214,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5195,
											"end": 5214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 5293,
											"end": 5296,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5284,
											"end": 5290,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5224,
											"end": 5297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5297,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 5224,
											"end": 5297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5322,
											"end": 5323,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5317,
											"end": 5320,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5313,
											"end": 5324,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5306,
											"end": 5324,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5306,
											"end": 5324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5334,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 5405,
											"end": 5408,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5396,
											"end": 5402,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5334,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5334,
											"end": 5409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5334,
											"end": 5409,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 5334,
											"end": 5409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5434,
											"end": 5436,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 5429,
											"end": 5432,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5437,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5418,
											"end": 5437,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5418,
											"end": 5437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5454,
											"end": 5457,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5447,
											"end": 5457,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5447,
											"end": 5457,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 5463,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 5463,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 5463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 5463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 5463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 5463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 5463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 5463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 5463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5469,
											"end": 5567,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5469,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5520,
											"end": 5526,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5554,
											"end": 5559,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5548,
											"end": 5560,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5538,
											"end": 5560,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5538,
											"end": 5560,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5469,
											"end": 5567,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5469,
											"end": 5567,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5469,
											"end": 5567,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5469,
											"end": 5567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5731,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5573,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5646,
											"end": 5657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5680,
											"end": 5686,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5675,
											"end": 5678,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5668,
											"end": 5687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5724,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5715,
											"end": 5718,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5711,
											"end": 5725,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5696,
											"end": 5725,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5696,
											"end": 5725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5731,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5731,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5737,
											"end": 5876,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 5737,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5826,
											"end": 5832,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5821,
											"end": 5824,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5816,
											"end": 5819,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5810,
											"end": 5833,
											"name": "MCOPY",
											"source": 5
										},
										{
											"begin": 5867,
											"end": 5868,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5858,
											"end": 5864,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5853,
											"end": 5856,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5849,
											"end": 5865,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5842,
											"end": 5869,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5737,
											"end": 5876,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5737,
											"end": 5876,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5737,
											"end": 5876,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5737,
											"end": 5876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5984,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 5882,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5929,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5974,
											"end": 5976,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5970,
											"end": 5977,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5965,
											"end": 5967,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5958,
											"end": 5963,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5954,
											"end": 5968,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5950,
											"end": 5978,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 5978,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 5978,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5984,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6343,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5990,
											"end": 6343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6069,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 6126,
											"end": 6131,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6094,
											"end": 6132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 6094,
											"end": 6132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6094,
											"end": 6132,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 6094,
											"end": 6132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 6201,
											"end": 6207,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6196,
											"end": 6199,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 6148,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6208,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 6148,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6141,
											"end": 6208,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6141,
											"end": 6208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6217,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 6275,
											"end": 6281,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6270,
											"end": 6273,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6263,
											"end": 6267,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6256,
											"end": 6261,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6252,
											"end": 6268,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6217,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 6217,
											"end": 6282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6217,
											"end": 6282,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 6217,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 6329,
											"end": 6335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 6307,
											"end": 6336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6336,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 6307,
											"end": 6336,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6302,
											"end": 6305,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6298,
											"end": 6337,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6291,
											"end": 6337,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6291,
											"end": 6337,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6070,
											"end": 6343,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6343,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6343,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6343,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6343,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6349,
											"end": 6457,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 6349,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6426,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 6444,
											"end": 6449,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6426,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 6426,
											"end": 6450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6426,
											"end": 6450,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 6426,
											"end": 6450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6421,
											"end": 6424,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6414,
											"end": 6451,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6349,
											"end": 6457,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6349,
											"end": 6457,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6349,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6463,
											"end": 6571,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 6463,
											"end": 6571,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6540,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 6558,
											"end": 6563,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6540,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 6540,
											"end": 6564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6540,
											"end": 6564,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 6540,
											"end": 6564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6535,
											"end": 6538,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6528,
											"end": 6565,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6463,
											"end": 6571,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6463,
											"end": 6571,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6463,
											"end": 6571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6661,
											"end": 7830,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 6661,
											"end": 7830,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6798,
											"end": 6801,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6838,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 6829,
											"end": 6832,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6825,
											"end": 6839,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6921,
											"end": 6925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6914,
											"end": 6919,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6904,
											"end": 6927,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6974,
											"end": 6977,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6968,
											"end": 6972,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6964,
											"end": 6978,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6957,
											"end": 6961,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6952,
											"end": 6955,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6948,
											"end": 6962,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6941,
											"end": 6979,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7000,
											"end": 7071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 7066,
											"end": 7070,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7052,
											"end": 7064,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7000,
											"end": 7071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 7000,
											"end": 7071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7000,
											"end": 7071,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 7000,
											"end": 7071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6992,
											"end": 7071,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6992,
											"end": 7071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6849,
											"end": 7082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7169,
											"end": 7173,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7162,
											"end": 7167,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7158,
											"end": 7174,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7152,
											"end": 7175,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7188,
											"end": 7251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 7245,
											"end": 7249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7240,
											"end": 7243,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7236,
											"end": 7250,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7222,
											"end": 7234,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7188,
											"end": 7251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 7188,
											"end": 7251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7188,
											"end": 7251,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 7188,
											"end": 7251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7347,
											"end": 7351,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7340,
											"end": 7345,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7336,
											"end": 7352,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7330,
											"end": 7353,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7366,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 7423,
											"end": 7427,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7418,
											"end": 7421,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7414,
											"end": 7428,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7400,
											"end": 7412,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7366,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 7366,
											"end": 7429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7366,
											"end": 7429,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 7366,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7271,
											"end": 7439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7526,
											"end": 7530,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7519,
											"end": 7524,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7515,
											"end": 7531,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7532,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7545,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 7602,
											"end": 7606,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7597,
											"end": 7600,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7593,
											"end": 7607,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7591,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7545,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 7545,
											"end": 7608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7545,
											"end": 7608,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 7545,
											"end": 7608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7449,
											"end": 7618,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7711,
											"end": 7715,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 7704,
											"end": 7709,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7700,
											"end": 7716,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7694,
											"end": 7717,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7730,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 7787,
											"end": 7791,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 7782,
											"end": 7785,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7778,
											"end": 7792,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7764,
											"end": 7776,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7730,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 7730,
											"end": 7793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7730,
											"end": 7793,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 7730,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7628,
											"end": 7803,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7820,
											"end": 7824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7813,
											"end": 7824,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7813,
											"end": 7824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6803,
											"end": 7830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6661,
											"end": 7830,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6661,
											"end": 7830,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6661,
											"end": 7830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6661,
											"end": 7830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6661,
											"end": 7830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7836,
											"end": 8245,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 7836,
											"end": 8245,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7997,
											"end": 8001,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8024,
											"end": 8033,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8020,
											"end": 8038,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8012,
											"end": 8038,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8012,
											"end": 8038,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8084,
											"end": 8093,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8078,
											"end": 8082,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8074,
											"end": 8094,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8070,
											"end": 8071,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8059,
											"end": 8068,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8055,
											"end": 8072,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8048,
											"end": 8095,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8112,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 8233,
											"end": 8237,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8224,
											"end": 8230,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8112,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 8112,
											"end": 8238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8112,
											"end": 8238,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 8112,
											"end": 8238,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8104,
											"end": 8238,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8104,
											"end": 8238,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7836,
											"end": 8245,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7836,
											"end": 8245,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7836,
											"end": 8245,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7836,
											"end": 8245,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7836,
											"end": 8245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8251,
											"end": 8394,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 8251,
											"end": 8394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8308,
											"end": 8313,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8339,
											"end": 8345,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8333,
											"end": 8346,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8324,
											"end": 8346,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8324,
											"end": 8346,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8355,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 8382,
											"end": 8387,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8355,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 8355,
											"end": 8388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8355,
											"end": 8388,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 8355,
											"end": 8388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8251,
											"end": 8394,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8251,
											"end": 8394,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8251,
											"end": 8394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8251,
											"end": 8394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8251,
											"end": 8394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8400,
											"end": 8751,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 8400,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8470,
											"end": 8476,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8519,
											"end": 8521,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8507,
											"end": 8516,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8498,
											"end": 8505,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8494,
											"end": 8517,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8490,
											"end": 8522,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 8487,
											"end": 8606,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8487,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 8487,
											"end": 8606,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8525,
											"end": 8604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 8525,
											"end": 8604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 8525,
											"end": 8604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8525,
											"end": 8604,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 8525,
											"end": 8604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8487,
											"end": 8606,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 8487,
											"end": 8606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8645,
											"end": 8646,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8670,
											"end": 8734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 8726,
											"end": 8733,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8717,
											"end": 8723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8706,
											"end": 8715,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8702,
											"end": 8724,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8670,
											"end": 8734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 8670,
											"end": 8734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8670,
											"end": 8734,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 8670,
											"end": 8734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8660,
											"end": 8734,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8660,
											"end": 8734,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8616,
											"end": 8744,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8400,
											"end": 8751,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8400,
											"end": 8751,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8400,
											"end": 8751,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8400,
											"end": 8751,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8400,
											"end": 8751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8757,
											"end": 8937,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 8757,
											"end": 8937,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8805,
											"end": 8882,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8802,
											"end": 8803,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8795,
											"end": 8883,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8902,
											"end": 8906,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 8899,
											"end": 8900,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8892,
											"end": 8907,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8926,
											"end": 8930,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8923,
											"end": 8924,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8916,
											"end": 8931,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 9137,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 8943,
											"end": 9137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8983,
											"end": 8987,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9003,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 9021,
											"end": 9022,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9003,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 9003,
											"end": 9023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9003,
											"end": 9023,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 9003,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8998,
											"end": 9023,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8998,
											"end": 9023,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9037,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 9055,
											"end": 9056,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9037,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 9037,
											"end": 9057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9037,
											"end": 9057,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 9037,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9032,
											"end": 9057,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9032,
											"end": 9057,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9081,
											"end": 9082,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9078,
											"end": 9079,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9074,
											"end": 9083,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9066,
											"end": 9083,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9066,
											"end": 9083,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9105,
											"end": 9106,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9099,
											"end": 9103,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9096,
											"end": 9107,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 9093,
											"end": 9130,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9093,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 9093,
											"end": 9130,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9110,
											"end": 9128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 9110,
											"end": 9128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 9110,
											"end": 9128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9110,
											"end": 9128,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 9110,
											"end": 9128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9093,
											"end": 9130,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 9093,
											"end": 9130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 9137,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 9137,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 9137,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 9137,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 9137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9225,
											"end": 10392,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 9225,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9360,
											"end": 9363,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9396,
											"end": 9400,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 9391,
											"end": 9394,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9401,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9483,
											"end": 9487,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9476,
											"end": 9481,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9472,
											"end": 9488,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9466,
											"end": 9489,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9536,
											"end": 9539,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9530,
											"end": 9534,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 9540,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9519,
											"end": 9523,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9514,
											"end": 9517,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9510,
											"end": 9524,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9503,
											"end": 9541,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9562,
											"end": 9633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 9628,
											"end": 9632,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9614,
											"end": 9626,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9562,
											"end": 9633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 9562,
											"end": 9633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9562,
											"end": 9633,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 9562,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9633,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9411,
											"end": 9644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9731,
											"end": 9735,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9724,
											"end": 9729,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9720,
											"end": 9736,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9714,
											"end": 9737,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9750,
											"end": 9813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 9807,
											"end": 9811,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9802,
											"end": 9805,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9798,
											"end": 9812,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9784,
											"end": 9796,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9750,
											"end": 9813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 9750,
											"end": 9813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9750,
											"end": 9813,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 9750,
											"end": 9813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9654,
											"end": 9823,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9909,
											"end": 9913,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9902,
											"end": 9907,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9898,
											"end": 9914,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9892,
											"end": 9915,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9928,
											"end": 9991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 9985,
											"end": 9989,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9980,
											"end": 9983,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9976,
											"end": 9990,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9962,
											"end": 9974,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9928,
											"end": 9991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 9928,
											"end": 9991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9928,
											"end": 9991,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 9928,
											"end": 9991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9833,
											"end": 10001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10087,
											"end": 10091,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10080,
											"end": 10085,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10076,
											"end": 10092,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10070,
											"end": 10093,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10106,
											"end": 10169,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 10163,
											"end": 10167,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10158,
											"end": 10161,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10154,
											"end": 10168,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10140,
											"end": 10152,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10106,
											"end": 10169,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 10106,
											"end": 10169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10106,
											"end": 10169,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 10106,
											"end": 10169,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10011,
											"end": 10179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10273,
											"end": 10277,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10262,
											"end": 10278,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10256,
											"end": 10279,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10292,
											"end": 10355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 10349,
											"end": 10353,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 10344,
											"end": 10347,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10340,
											"end": 10354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10326,
											"end": 10338,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10292,
											"end": 10355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 10292,
											"end": 10355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10292,
											"end": 10355,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 10292,
											"end": 10355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10189,
											"end": 10365,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10382,
											"end": 10386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10375,
											"end": 10386,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10375,
											"end": 10386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9365,
											"end": 10392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9225,
											"end": 10392,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9225,
											"end": 10392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9225,
											"end": 10392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9225,
											"end": 10392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9225,
											"end": 10392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10398,
											"end": 10803,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 10398,
											"end": 10803,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10557,
											"end": 10561,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10595,
											"end": 10597,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10584,
											"end": 10593,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10580,
											"end": 10598,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10572,
											"end": 10598,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10572,
											"end": 10598,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10644,
											"end": 10653,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10638,
											"end": 10642,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10634,
											"end": 10654,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10631,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10619,
											"end": 10628,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10615,
											"end": 10632,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10608,
											"end": 10655,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10672,
											"end": 10796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 10791,
											"end": 10795,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10782,
											"end": 10788,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10672,
											"end": 10796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 10672,
											"end": 10796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10672,
											"end": 10796,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 10672,
											"end": 10796,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10664,
											"end": 10796,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10664,
											"end": 10796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10398,
											"end": 10803,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10398,
											"end": 10803,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10398,
											"end": 10803,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10398,
											"end": 10803,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10398,
											"end": 10803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10809,
											"end": 11251,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 10809,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10958,
											"end": 10962,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10996,
											"end": 10998,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10985,
											"end": 10994,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10981,
											"end": 10999,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10973,
											"end": 10999,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10973,
											"end": 10999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11009,
											"end": 11080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 11077,
											"end": 11078,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11066,
											"end": 11075,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11062,
											"end": 11079,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11053,
											"end": 11059,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 11009,
											"end": 11080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 11009,
											"end": 11080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11009,
											"end": 11080,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 11009,
											"end": 11080,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11090,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 11158,
											"end": 11160,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11147,
											"end": 11156,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11143,
											"end": 11161,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11134,
											"end": 11140,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11090,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 11090,
											"end": 11162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11090,
											"end": 11162,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 11090,
											"end": 11162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11172,
											"end": 11244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 11240,
											"end": 11242,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11229,
											"end": 11238,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11225,
											"end": 11243,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11216,
											"end": 11222,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11172,
											"end": 11244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 11172,
											"end": 11244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11172,
											"end": 11244,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 11172,
											"end": 11244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10809,
											"end": 11251,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 10809,
											"end": 11251,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10809,
											"end": 11251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10809,
											"end": 11251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10809,
											"end": 11251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10809,
											"end": 11251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10809,
											"end": 11251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11257,
											"end": 11404,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 11257,
											"end": 11404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11358,
											"end": 11369,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11395,
											"end": 11398,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11380,
											"end": 11398,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11380,
											"end": 11398,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11257,
											"end": 11404,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11257,
											"end": 11404,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11257,
											"end": 11404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11257,
											"end": 11404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11257,
											"end": 11404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11410,
											"end": 11796,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 11410,
											"end": 11796,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11514,
											"end": 11517,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11542,
											"end": 11580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 11574,
											"end": 11579,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11542,
											"end": 11580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 11542,
											"end": 11580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11542,
											"end": 11580,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 11542,
											"end": 11580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11596,
											"end": 11684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 11677,
											"end": 11683,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11672,
											"end": 11675,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11596,
											"end": 11684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 11596,
											"end": 11684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11596,
											"end": 11684,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 11596,
											"end": 11684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11589,
											"end": 11684,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 11589,
											"end": 11684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11693,
											"end": 11758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 11751,
											"end": 11757,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11746,
											"end": 11749,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11739,
											"end": 11743,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11732,
											"end": 11737,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 11728,
											"end": 11744,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11693,
											"end": 11758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 11693,
											"end": 11758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11693,
											"end": 11758,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 11693,
											"end": 11758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11783,
											"end": 11789,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11778,
											"end": 11781,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11774,
											"end": 11790,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11767,
											"end": 11790,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11767,
											"end": 11790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11518,
											"end": 11796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11410,
											"end": 11796,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11410,
											"end": 11796,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11410,
											"end": 11796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11410,
											"end": 11796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11410,
											"end": 11796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11802,
											"end": 12073,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 11802,
											"end": 12073,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11932,
											"end": 11935,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11954,
											"end": 12047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 12043,
											"end": 12046,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12034,
											"end": 12040,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11954,
											"end": 12047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 11954,
											"end": 12047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11954,
											"end": 12047,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 11954,
											"end": 12047,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11947,
											"end": 12047,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11947,
											"end": 12047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12064,
											"end": 12067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12057,
											"end": 12067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12057,
											"end": 12067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11802,
											"end": 12073,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11802,
											"end": 12073,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11802,
											"end": 12073,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11802,
											"end": 12073,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11802,
											"end": 12073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12079,
											"end": 12169,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 12079,
											"end": 12169,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12113,
											"end": 12120,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12156,
											"end": 12161,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12149,
											"end": 12162,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12142,
											"end": 12163,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12131,
											"end": 12163,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12131,
											"end": 12163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12079,
											"end": 12169,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12079,
											"end": 12169,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12079,
											"end": 12169,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12079,
											"end": 12169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12175,
											"end": 12291,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 12175,
											"end": 12291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12245,
											"end": 12266,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 12260,
											"end": 12265,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12245,
											"end": 12266,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 12245,
											"end": 12266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12245,
											"end": 12266,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 12245,
											"end": 12266,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12238,
											"end": 12243,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12235,
											"end": 12267,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 12225,
											"end": 12285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 12225,
											"end": 12285,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12281,
											"end": 12282,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12278,
											"end": 12279,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12271,
											"end": 12283,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 12225,
											"end": 12285,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 12225,
											"end": 12285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12175,
											"end": 12291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12175,
											"end": 12291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12297,
											"end": 12434,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 12297,
											"end": 12434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12351,
											"end": 12356,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12382,
											"end": 12388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12376,
											"end": 12389,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12367,
											"end": 12389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12367,
											"end": 12389,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12398,
											"end": 12428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 12422,
											"end": 12427,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12398,
											"end": 12428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 12398,
											"end": 12428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12398,
											"end": 12428,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 12398,
											"end": 12428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12297,
											"end": 12434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12297,
											"end": 12434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12297,
											"end": 12434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12297,
											"end": 12434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12297,
											"end": 12434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12440,
											"end": 12785,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 12440,
											"end": 12785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12507,
											"end": 12513,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12556,
											"end": 12558,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12544,
											"end": 12553,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12535,
											"end": 12542,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12531,
											"end": 12554,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12527,
											"end": 12559,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 12524,
											"end": 12643,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12524,
											"end": 12643,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 12524,
											"end": 12643,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12562,
											"end": 12641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 12562,
											"end": 12641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 12562,
											"end": 12641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12562,
											"end": 12641,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 12562,
											"end": 12641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12524,
											"end": 12643,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 12524,
											"end": 12643,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12682,
											"end": 12683,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12707,
											"end": 12768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 12760,
											"end": 12767,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12751,
											"end": 12757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12740,
											"end": 12749,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12736,
											"end": 12758,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12707,
											"end": 12768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 12707,
											"end": 12768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12707,
											"end": 12768,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 12707,
											"end": 12768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12697,
											"end": 12768,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12697,
											"end": 12768,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12653,
											"end": 12778,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12440,
											"end": 12785,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12440,
											"end": 12785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12440,
											"end": 12785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12440,
											"end": 12785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12440,
											"end": 12785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12791,
											"end": 12960,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 12791,
											"end": 12960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12875,
											"end": 12886,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12909,
											"end": 12915,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12904,
											"end": 12907,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12897,
											"end": 12916,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12949,
											"end": 12953,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12944,
											"end": 12947,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12940,
											"end": 12954,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12925,
											"end": 12954,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12925,
											"end": 12954,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12791,
											"end": 12960,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12791,
											"end": 12960,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12791,
											"end": 12960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12791,
											"end": 12960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12791,
											"end": 12960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12966,
											"end": 13119,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 12966,
											"end": 13119,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13106,
											"end": 13111,
											"name": "PUSH",
											"source": 5,
											"value": "5354460000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13102,
											"end": 13103,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13094,
											"end": 13100,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13090,
											"end": 13104,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13083,
											"end": 13112,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12966,
											"end": 13119,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12966,
											"end": 13119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13125,
											"end": 13490,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 13125,
											"end": 13490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13267,
											"end": 13270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13288,
											"end": 13354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 13352,
											"end": 13353,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 13347,
											"end": 13350,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13288,
											"end": 13354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 13288,
											"end": 13354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13288,
											"end": 13354,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 13288,
											"end": 13354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13281,
											"end": 13354,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13281,
											"end": 13354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13363,
											"end": 13456,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 13452,
											"end": 13455,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13363,
											"end": 13456,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 13363,
											"end": 13456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13363,
											"end": 13456,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 13363,
											"end": 13456,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13481,
											"end": 13483,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13476,
											"end": 13479,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13465,
											"end": 13484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13465,
											"end": 13484,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13125,
											"end": 13490,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13125,
											"end": 13490,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13125,
											"end": 13490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13125,
											"end": 13490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13496,
											"end": 13915,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 13496,
											"end": 13915,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13662,
											"end": 13666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13700,
											"end": 13702,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13689,
											"end": 13698,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13685,
											"end": 13703,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13677,
											"end": 13703,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13677,
											"end": 13703,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13749,
											"end": 13758,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13743,
											"end": 13747,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13739,
											"end": 13759,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13735,
											"end": 13736,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13724,
											"end": 13733,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13720,
											"end": 13737,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13713,
											"end": 13760,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13777,
											"end": 13908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 13903,
											"end": 13907,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13777,
											"end": 13908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 13777,
											"end": 13908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13777,
											"end": 13908,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 13777,
											"end": 13908,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13769,
											"end": 13908,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13769,
											"end": 13908,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13496,
											"end": 13915,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13496,
											"end": 13915,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13496,
											"end": 13915,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13496,
											"end": 13915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13921,
											"end": 14253,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 13921,
											"end": 14253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14042,
											"end": 14046,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14080,
											"end": 14082,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 14069,
											"end": 14078,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14065,
											"end": 14083,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14057,
											"end": 14083,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14057,
											"end": 14083,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14093,
											"end": 14164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 14161,
											"end": 14162,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14150,
											"end": 14159,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14146,
											"end": 14163,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14137,
											"end": 14143,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 14093,
											"end": 14164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 14093,
											"end": 14164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14093,
											"end": 14164,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 14093,
											"end": 14164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14174,
											"end": 14246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 14242,
											"end": 14244,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14231,
											"end": 14240,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14227,
											"end": 14245,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14218,
											"end": 14224,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14174,
											"end": 14246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 14174,
											"end": 14246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14174,
											"end": 14246,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 14174,
											"end": 14246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13921,
											"end": 14253,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 13921,
											"end": 14253,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13921,
											"end": 14253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13921,
											"end": 14253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13921,
											"end": 14253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13921,
											"end": 14253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14259,
											"end": 14411,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 14259,
											"end": 14411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14399,
											"end": 14403,
											"name": "PUSH",
											"source": 5,
											"value": "5341000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14395,
											"end": 14396,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14387,
											"end": 14393,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14383,
											"end": 14397,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14376,
											"end": 14404,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14259,
											"end": 14411,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14259,
											"end": 14411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14417,
											"end": 14782,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 14417,
											"end": 14782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14559,
											"end": 14562,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14580,
											"end": 14646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 14644,
											"end": 14645,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 14639,
											"end": 14642,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14580,
											"end": 14646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 14580,
											"end": 14646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14580,
											"end": 14646,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 14580,
											"end": 14646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14573,
											"end": 14646,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14573,
											"end": 14646,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14655,
											"end": 14748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 14744,
											"end": 14747,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14655,
											"end": 14748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 14655,
											"end": 14748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14655,
											"end": 14748,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 14655,
											"end": 14748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14773,
											"end": 14775,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14768,
											"end": 14771,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14764,
											"end": 14776,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14757,
											"end": 14776,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14757,
											"end": 14776,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14417,
											"end": 14782,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14417,
											"end": 14782,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14417,
											"end": 14782,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14417,
											"end": 14782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14788,
											"end": 15207,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 14788,
											"end": 15207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14954,
											"end": 14958,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14992,
											"end": 14994,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14981,
											"end": 14990,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14969,
											"end": 14995,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14969,
											"end": 14995,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15041,
											"end": 15050,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15035,
											"end": 15039,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15031,
											"end": 15051,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15027,
											"end": 15028,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15016,
											"end": 15025,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15012,
											"end": 15029,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15005,
											"end": 15052,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15069,
											"end": 15200,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 15195,
											"end": 15199,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15069,
											"end": 15200,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 15069,
											"end": 15200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15069,
											"end": 15200,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 15069,
											"end": 15200,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15061,
											"end": 15200,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15061,
											"end": 15200,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14788,
											"end": 15207,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14788,
											"end": 15207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14788,
											"end": 15207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14788,
											"end": 15207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/SwapUniswap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DAI()": "e0bab4c4",
							"USDC()": "89a30271",
							"USDT()": "c54e44eb",
							"WETH9()": "4aa4a4fc",
							"poolFee()": "089fe6aa",
							"swapExactInputMultihop(uint256)": "edd83557",
							"swapExactOutputMultihop(uint256,uint256)": "3b85cf6a",
							"swapRouter()": "c31c9c07"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"_swapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dai\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swapExactInputMultihop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"name\":\"swapExactOutputMultihop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"swapExactInputMultihop(uint256)\":{\"details\":\"The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\",\"params\":{\"amountIn\":\"The amount of DAI to be swapped.\"},\"returns\":{\"amountOut\":\"The amount of WETH9 received after the swap.\"}},\"swapExactOutputMultihop(uint256,uint256)\":{\"details\":\"The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable, the calling address will need to approve for a slightly higher amount, anticipating some variance.\",\"params\":{\"amountInMaximum\":\"The maximum amount of DAI willing to be swapped for the specified amountOut of WETH9.\",\"amountOut\":\"The desired amount of WETH9.\"},\"returns\":{\"amountIn\":\"The amountIn of DAI actually spent to receive the desired amountOut.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"swapExactInputMultihop(uint256)\":{\"notice\":\"swapInputMultiplePools swaps a fixed amount of DAI for a maximum possible amount of WETH9 through an intermediary pool. For this example, we will swap DAI to USDC, then USDC to WETH9 to achieve our desired output.\"},\"swapExactOutputMultihop(uint256,uint256)\":{\"notice\":\"swapExactOutputMultihop swaps a minimum possible amount of DAI for a fixed amount of WETH through an intermediary pool. For this example, we want to swap DAI for WETH9 through a USDC pool but we specify the desired amountOut of WETH9. Notice how the path encoding is slightly different in for exact output swaps.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SwapUniswap.sol\":\"SwapUniswap\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"contracts/SwapUniswap.sol\":{\"keccak256\":\"0x708b6c990f68a89016d38bb244c57bcbd127b580636275f546c7fdda8c6cccce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11be95485b842ffa28d8b891eaeefe5f04412519c5eb9b0550e0e7e8ba3e58a5\",\"dweb:/ipfs/QmY1MAKEm59NknYyKAdFCZiabA4NcVkyRwUSUGzAj1DSCL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"swapExactInputMultihop(uint256)": {
								"notice": "swapInputMultiplePools swaps a fixed amount of DAI for a maximum possible amount of WETH9 through an intermediary pool. For this example, we will swap DAI to USDC, then USDC to WETH9 to achieve our desired output."
							},
							"swapExactOutputMultihop(uint256,uint256)": {
								"notice": "swapExactOutputMultihop swaps a minimum possible amount of DAI for a fixed amount of WETH through an intermediary pool. For this example, we want to swap DAI for WETH9 through a USDC pool but we specify the desired amountOut of WETH9. Notice how the path encoding is slightly different in for exact output swaps."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 92,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:1",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 91,
							"linearizedBaseContracts": [
								91
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:1",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1197:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 82,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1226:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 84,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1255:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 86,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:1"
									},
									"scope": 91,
									"src": "1157:133:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 92,
							"src": "215:1077:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1248:1"
				},
				"id": 1
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							191
						],
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 192,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 93,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"id": 94,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:2"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 95,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 192,
							"sourceUnit": 92,
							"src": "91:83:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 97,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"305:22:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 91,
										"src": "305:22:2"
									},
									"id": 98,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:2"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 96,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:2",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 191,
							"linearizedBaseContracts": [
								191,
								91
							],
							"name": "ISwapRouter",
							"nameLocation": "290:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 115,
									"members": [
										{
											"constant": false,
											"id": 100,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "382:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "374:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 99,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "407:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "399:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 101,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 104,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "432:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "425:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 103,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 106,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "453:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "445:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 105,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 108,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "480:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "472:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 107,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "506:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "498:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 109,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 112,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "532:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "524:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 111,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 114,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "566:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "558:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 113,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "341:22:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "334:256:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:2",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "860:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "909:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "877:38:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 118,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 117,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"877:22:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 115,
														"src": "877:22:2"
													},
													"referencedDeclaration": 115,
													"src": "877:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:2"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "951:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "943:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:2"
									},
									"scope": 191,
									"src": "851:111:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 135,
									"members": [
										{
											"constant": false,
											"id": 126,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1008:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1002:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 125,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 128,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1030:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1022:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 127,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 130,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1057:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1049:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 129,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 132,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1083:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1075:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 131,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 134,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1109:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1101:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 133,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "975:16:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "968:164:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:2",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1425:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1462:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1436:32:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$135_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 138,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 137,
														"name": "ExactInputParams",
														"nameLocations": [
															"1436:16:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 135,
														"src": "1436:16:2"
													},
													"referencedDeclaration": 135,
													"src": "1436:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$135_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:2"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1504:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1496:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:2"
									},
									"scope": 191,
									"src": "1416:99:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 161,
									"members": [
										{
											"constant": false,
											"id": 146,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1570:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1562:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 145,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 148,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1595:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1587:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 147,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 150,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1620:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1613:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 149,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 152,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1641:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1633:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 151,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 154,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1668:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1660:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 153,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 156,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1694:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1686:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 155,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 158,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1721:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1713:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 157,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 160,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1754:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1746:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 159,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1528:23:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "1521:257:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:2",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2048:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2099:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2066:39:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 164,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 163,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2066:23:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 161,
														"src": "2066:23:2"
													},
													"referencedDeclaration": 161,
													"src": "2066:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:2"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2141:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2133:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:2"
									},
									"scope": 191,
									"src": "2039:112:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 181,
									"members": [
										{
											"constant": false,
											"id": 172,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2198:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2192:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 171,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 174,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2220:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2212:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 173,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 176,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2247:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2239:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 178,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2273:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2265:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 177,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 180,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2300:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2292:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 179,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2164:17:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "2157:165:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:2",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2626:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2665:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2638:33:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$181_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 183,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2638:17:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "2638:17:2"
													},
													"referencedDeclaration": 181,
													"src": "2638:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$181_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:2"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2707:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2699:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:2"
									},
									"scope": 191,
									"src": "2617:100:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 192,
							"src": "280:2439:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2675:2"
				},
				"id": 2
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"TransferHelper": [
							362
						]
					},
					"id": 363,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 193,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 194,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 78,
							"src": "71:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 362,
							"linearizedBaseContracts": [
								362
							],
							"name": "TransferHelper",
							"nameLocation": "137:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "690:229:3",
										"statements": [
											{
												"assignments": [
													207,
													209
												],
												"declarations": [
													{
														"constant": false,
														"id": 207,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "706:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 242,
														"src": "701:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 206,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "701:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 209,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "728:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 242,
														"src": "715:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 208,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "715:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 222,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 214,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "782:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "789:12:3",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "782:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
																		}
																	},
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "802:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "782:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 217,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "812:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 218,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "818:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 219,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "822:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 212,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "759:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "763:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "759:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "759:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 210,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "748:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "754:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "748:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "748:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "700:129:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 224,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "847:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 225,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 209,
																					"src": "859:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "864:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "859:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "874:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "859:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 231,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 209,
																					"src": "890:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 233,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "897:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 232,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "897:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 234,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "896:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 229,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "879:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 230,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "883:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "879:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "879:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "859:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 237,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "858:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "847:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535446",
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "906:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															},
															"value": "STF"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															}
														],
														"id": 223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "839:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "839:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "839:73:3"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "158:398:3",
										"text": "@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "570:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "604:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "596:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "627:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "619:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "649:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "641:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "669:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "661:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:94:3"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "690:0:3"
									},
									"scope": 362,
									"src": "561:358:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "1314:206:3",
										"statements": [
											{
												"assignments": [
													254,
													256
												],
												"declarations": [
													{
														"constant": false,
														"id": 254,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1330:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "1325:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 253,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1325:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 256,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1352:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "1339:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 255,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1339:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 268,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 261,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "1394:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1401:8:3",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "1394:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1410:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1394:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 264,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 248,
																	"src": "1420:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 265,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "1424:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 259,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1371:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1375:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1371:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1371:59:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 257,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "1360:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1366:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1360:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1324:107:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 270,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "1449:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 271,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 256,
																					"src": "1461:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1466:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1461:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 273,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1476:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1461:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 277,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 256,
																					"src": "1492:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 279,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1499:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 278,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1499:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 280,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1498:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 275,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1481:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1485:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1481:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1481:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1461:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 283,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1460:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1449:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5354",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1508:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															},
															"value": "ST"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1441:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1441:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "1441:72:3"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "925:281:3",
										"text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
									},
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1220:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1250:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1242:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1273:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1265:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1293:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1285:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:72:3"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1314:0:3"
									},
									"scope": 362,
									"src": "1211:309:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "1975:205:3",
										"statements": [
											{
												"assignments": [
													300,
													302
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1991:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "1986:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 299,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1986:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "2013:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "2000:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 301,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2000:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 314,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 307,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "2055:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2062:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2055:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.approve(address,uint256) returns (bool)"
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2070:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2055:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 310,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "2080:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 311,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "2084:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 305,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2032:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2036:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2032:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2032:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 303,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "2021:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2027:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "2021:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2021:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1985:106:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 316,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "2109:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 317,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "2121:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2126:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2121:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2136:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2121:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 323,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "2152:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 325,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2159:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 324,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "2159:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 326,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2158:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 321,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2141:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2145:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "2141:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2141:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2121:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 329,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2120:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2109:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5341",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2168:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															},
															"value": "SA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															}
														],
														"id": 315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2101:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2101:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "2101:72:3"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "1526:342:3",
										"text": "@notice Approves the stipulated contract to spend the given allowance in the given token\n @dev Errors with 'SA' if transfer fails\n @param token The contract address of the token to be approved\n @param to The target of the approval\n @param value The amount of the given token the target will be allowed to spend"
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1882:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1903:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1934:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1926:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1954:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1946:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:72:3"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1975:0:3"
									},
									"scope": 362,
									"src": "1873:307:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "2431:104:3",
										"statements": [
											{
												"assignments": [
													344,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2447:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "2442:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 343,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2442:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 354,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2492:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "2482:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 349,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2486:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2482:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 345,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "2460:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2463:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2460:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 347,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "2475:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2460:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2441:54:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 356,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2513:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535445",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2522:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															},
															"value": "STE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															}
														],
														"id": 355,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2505:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "2505:23:3"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "2186:179:3",
										"text": "@notice Transfers ETH to the recipient address\n @dev Fails with `STE`\n @param to The destination of the transfer\n @param value The value to be transferred"
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "2379:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2403:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2395:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2415:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2407:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:27:3"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2431:0:3"
									},
									"scope": 362,
									"src": "2370:165:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 363,
							"src": "129:2408:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2493:3"
				},
				"id": 3
			},
			"contracts/SwapUniswap.sol": {
				"ast": {
					"absolutePath": "contracts/SwapUniswap.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"ISwapRouter": [
							191
						],
						"IUniswapV3SwapCallback": [
							91
						],
						"SwapUniswap": [
							574
						],
						"TransferHelper": [
							362
						]
					},
					"id": 575,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:4"
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"id": 365,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 575,
							"sourceUnit": 363,
							"src": "61:70:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 366,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 575,
							"sourceUnit": 192,
							"src": "133:68:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SwapUniswap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 574,
							"linearizedBaseContracts": [
								574
							],
							"name": "SwapUniswap",
							"nameLocation": "214:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 369,
									"mutability": "immutable",
									"name": "swapRouter",
									"nameLocation": "262:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 574,
									"src": "233:39:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISwapRouter_$191",
										"typeString": "contract ISwapRouter"
									},
									"typeName": {
										"id": 368,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 367,
											"name": "ISwapRouter",
											"nameLocations": [
												"233:11:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 191,
											"src": "233:11:4"
										},
										"referencedDeclaration": 191,
										"src": "233:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$191",
											"typeString": "contract ISwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "SwapUniswap.StableType",
									"id": 373,
									"members": [
										{
											"id": 370,
											"name": "DAI",
											"nameLocation": "298:3:4",
											"nodeType": "EnumValue",
											"src": "298:3:4"
										},
										{
											"id": 371,
											"name": "USDT",
											"nameLocation": "303:4:4",
											"nodeType": "EnumValue",
											"src": "303:4:4"
										},
										{
											"id": 372,
											"name": "USDC",
											"nameLocation": "309:4:4",
											"nodeType": "EnumValue",
											"src": "309:4:4"
										}
									],
									"name": "StableType",
									"nameLocation": "286:10:4",
									"nodeType": "EnumDefinition",
									"src": "281:34:4"
								},
								{
									"constant": false,
									"functionSelector": "e0bab4c4",
									"id": 375,
									"mutability": "immutable",
									"name": "DAI",
									"nameLocation": "348:3:4",
									"nodeType": "VariableDeclaration",
									"scope": 574,
									"src": "323:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 374,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "323:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c54e44eb",
									"id": 377,
									"mutability": "immutable",
									"name": "USDT",
									"nameLocation": "383:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 574,
									"src": "358:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 376,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "358:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "89a30271",
									"id": 379,
									"mutability": "immutable",
									"name": "USDC",
									"nameLocation": "419:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 574,
									"src": "394:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 378,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "394:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4aa4a4fc",
									"id": 382,
									"mutability": "constant",
									"name": "WETH9",
									"nameLocation": "454:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 574,
									"src": "430:74:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 380,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "430:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
										"id": 381,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "462:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "089fe6aa",
									"id": 385,
									"mutability": "constant",
									"name": "poolFee",
									"nameLocation": "539:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 574,
									"src": "516:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint24",
										"typeString": "uint24"
									},
									"typeName": {
										"id": 383,
										"name": "uint24",
										"nodeType": "ElementaryTypeName",
										"src": "516:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint24",
											"typeString": "uint24"
										}
									},
									"value": {
										"hexValue": "33303030",
										"id": 384,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "549:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3000_by_1",
											"typeString": "int_const 3000"
										},
										"value": "3000"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "643:110:4",
										"statements": [
											{
												"expression": {
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 397,
														"name": "swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "654:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$191",
															"typeString": "contract ISwapRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 398,
														"name": "_swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "667:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$191",
															"typeString": "contract ISwapRouter"
														}
													},
													"src": "654:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$191",
														"typeString": "contract ISwapRouter"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "654:24:4"
											},
											{
												"expression": {
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 401,
														"name": "DAI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "689:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 402,
														"name": "_dai",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "695:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "689:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "689:10:4"
											},
											{
												"expression": {
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 405,
														"name": "USDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "710:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 406,
														"name": "_usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "717:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "710:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "710:12:4"
											},
											{
												"expression": {
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 409,
														"name": "USDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "733:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 410,
														"name": "_usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "740:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "733:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "733:12:4"
											}
										]
									},
									"id": 414,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "_swapRouter",
												"nameLocation": "586:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "574:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISwapRouter_$191",
													"typeString": "contract ISwapRouter"
												},
												"typeName": {
													"id": 387,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 386,
														"name": "ISwapRouter",
														"nameLocations": [
															"574:11:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 191,
														"src": "574:11:4"
													},
													"referencedDeclaration": 191,
													"src": "574:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$191",
														"typeString": "contract ISwapRouter"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "_dai",
												"nameLocation": "607:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "599:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "_usdt",
												"nameLocation": "621:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "613:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "_usdc",
												"nameLocation": "636:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "628:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "628:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "573:69:4"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "643:0:4"
									},
									"scope": 574,
									"src": "562:191:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "1371:637:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 425,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "1428:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 426,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1446:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1450:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1446:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 430,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1479:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapUniswap_$574",
																		"typeString": "contract SwapUniswap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapUniswap_$574",
																		"typeString": "contract SwapUniswap"
																	}
																],
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1471:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 428,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1471:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1471:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 432,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "1499:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 422,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "1382:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1397:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 243,
														"src": "1382:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1382:136:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "1382:136:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 438,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "1558:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 441,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "1571:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1563:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 439,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1563:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1563:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "1584:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 435,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "1531:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1546:11:4",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 335,
														"src": "1531:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "1531:62:4"
											},
											{
												"assignments": [
													450
												],
												"declarations": [
													{
														"constant": false,
														"id": 450,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "1642:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 476,
														"src": "1606:42:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputParams_$135_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputParams"
														},
														"typeName": {
															"id": 449,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 448,
																"name": "ISwapRouter.ExactInputParams",
																"nameLocations": [
																	"1606:11:4",
																	"1618:16:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 135,
																"src": "1606:28:4"
															},
															"referencedDeclaration": 135,
															"src": "1606:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputParams_$135_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 468,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 455,
																	"name": "DAI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "1736:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 456,
																	"name": "poolFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "1741:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																{
																	"id": 457,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "1750:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 458,
																	"name": "poolFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "1756:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																{
																	"id": 459,
																	"name": "WETH9",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "1765:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 453,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1719:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1723:12:4",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1719:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1719:52:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"expression": {
																"id": 461,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1801:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1805:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1801:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 463,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1840:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1846:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1840:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 465,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "1884:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1929:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 451,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "1651:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$191_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1677:16:4",
														"memberName": "ExactInputParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 135,
														"src": "1651:42:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputParams_$135_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputParams storage pointer)"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1713:4:4",
														"1790:9:4",
														"1830:8:4",
														"1874:8:4",
														"1911:16:4"
													],
													"names": [
														"path",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum"
													],
													"nodeType": "FunctionCall",
													"src": "1651:295:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$135_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1606:340:4"
											},
											{
												"expression": {
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 469,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "1959:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 472,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "1993:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputParams_$135_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputParams_$135_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputParams memory"
																}
															],
															"expression": {
																"id": 470,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "1971:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$191",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1982:10:4",
															"memberName": "exactInput",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 144,
															"src": "1971:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputParams_$135_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactInputParams memory) payable external returns (uint256)"
															}
														},
														"id": 473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1971:29:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1959:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "1959:41:4"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "761:501:4",
										"text": "@notice swapInputMultiplePools swaps a fixed amount of DAI for a maximum possible amount of WETH9 through an intermediary pool.\n For this example, we will swap DAI to USDC, then USDC to WETH9 to achieve our desired output.\n @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n @param amountIn The amount of DAI to be swapped.\n @return amountOut The amount of WETH9 received after the swap."
									},
									"functionSelector": "edd83557",
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactInputMultihop",
									"nameLocation": "1277:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1318:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "1310:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1299:34:4"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1360:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "1352:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1351:19:4"
									},
									"scope": 574,
									"src": "1268:740:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "3017:981:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 490,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "3074:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 491,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3092:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3096:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3092:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 495,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3125:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapUniswap_$574",
																		"typeString": "contract SwapUniswap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapUniswap_$574",
																		"typeString": "contract SwapUniswap"
																	}
																],
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3117:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 493,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3117:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3117:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "amountInMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3145:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 487,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3028:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3043:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 243,
														"src": "3028:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3028:143:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "3028:143:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 503,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "3209:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 506,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "3222:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3214:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 504,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3214:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3214:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "amountInMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3235:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 500,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3182:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3197:11:4",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 335,
														"src": "3182:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3182:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "3182:69:4"
											},
											{
												"assignments": [
													515
												],
												"declarations": [
													{
														"constant": false,
														"id": 515,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "3301:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 572,
														"src": "3264:43:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactOutputParams_$181_memory_ptr",
															"typeString": "struct ISwapRouter.ExactOutputParams"
														},
														"typeName": {
															"id": 514,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 513,
																"name": "ISwapRouter.ExactOutputParams",
																"nameLocations": [
																	"3264:11:4",
																	"3276:17:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 181,
																"src": "3264:29:4"
															},
															"referencedDeclaration": 181,
															"src": "3264:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactOutputParams_$181_storage_ptr",
																"typeString": "struct ISwapRouter.ExactOutputParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 533,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 520,
																	"name": "WETH9",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "3396:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 521,
																	"name": "poolFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "3403:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																{
																	"id": 522,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "3412:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 523,
																	"name": "poolFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "3418:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																{
																	"id": 524,
																	"name": "DAI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "3427:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 518,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3379:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3383:12:4",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "3379:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3379:52:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"expression": {
																"id": 526,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3461:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3465:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3461:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 528,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3500:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3506:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3500:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 530,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3545:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 531,
															"name": "amountInMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3590:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 516,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "3310:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$191_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3336:17:4",
														"memberName": "ExactOutputParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 181,
														"src": "3310:43:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactOutputParams_$181_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactOutputParams storage pointer)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"3373:4:4",
														"3450:9:4",
														"3490:8:4",
														"3534:9:4",
														"3573:15:4"
													],
													"names": [
														"path",
														"recipient",
														"deadline",
														"amountOut",
														"amountInMaximum"
													],
													"nodeType": "FunctionCall",
													"src": "3310:311:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$181_memory_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3264:357:4"
											},
											{
												"expression": {
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 534,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "3634:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 537,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "3668:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactOutputParams_$181_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactOutputParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactOutputParams_$181_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactOutputParams memory"
																}
															],
															"expression": {
																"id": 535,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "3645:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$191",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3656:11:4",
															"memberName": "exactOutput",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "3645:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactOutputParams_$181_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactOutputParams memory) payable external returns (uint256)"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3645:30:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3634:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "3634:41:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 541,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "3692:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 542,
														"name": "amountInMaximum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "3703:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3692:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "3688:303:4",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "3720:271:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 547,
																		"name": "DAI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 375,
																		"src": "3762:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 550,
																				"name": "swapRouter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 369,
																				"src": "3775:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ISwapRouter_$191",
																					"typeString": "contract ISwapRouter"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ISwapRouter_$191",
																					"typeString": "contract ISwapRouter"
																				}
																			],
																			"id": 549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3767:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 548,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3767:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3767:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3788:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 544,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "3735:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3750:11:4",
																	"memberName": "safeApprove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 335,
																	"src": "3735:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3735:55:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 554,
															"nodeType": "ExpressionStatement",
															"src": "3735:55:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 558,
																		"name": "DAI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 375,
																		"src": "3855:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 561,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3885:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SwapUniswap_$574",
																					"typeString": "contract SwapUniswap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SwapUniswap_$574",
																					"typeString": "contract SwapUniswap"
																				}
																			],
																			"id": 560,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3877:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 559,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3877:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3877:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 563,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3909:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3913:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3909:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 565,
																			"name": "amountInMaximum",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 482,
																			"src": "3938:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 566,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 485,
																			"src": "3956:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3938:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 555,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "3805:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3820:16:4",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 243,
																	"src": "3805:31:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256)"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3805:174:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 569,
															"nodeType": "ExpressionStatement",
															"src": "3805:174:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "2016:857:4",
										"text": "@notice swapExactOutputMultihop swaps a minimum possible amount of DAI for a fixed amount of WETH through an intermediary pool.\n For this example, we want to swap DAI for WETH9 through a USDC pool but we specify the desired amountOut of WETH9. Notice how the path encoding is slightly different in for exact output swaps.\n @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\n the calling address will need to approve for a slightly higher amount, anticipating some variance.\n @param amountOut The desired amount of WETH9.\n @param amountInMaximum The maximum amount of DAI willing to be swapped for the specified amountOut of WETH9.\n @return amountIn The amountIn of DAI actually spent to receive the desired amountOut."
									},
									"functionSelector": "3b85cf6a",
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactOutputMultihop",
									"nameLocation": "2888:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2930:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "2922:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2922:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "amountInMaximum",
												"nameLocation": "2958:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "2950:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2950:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:69:4"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3007:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "2999:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2999:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2998:18:4"
									},
									"scope": 574,
									"src": "2879:1119:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 575,
							"src": "205:3796:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:3970:4"
				},
				"id": 4
			}
		}
	}
}