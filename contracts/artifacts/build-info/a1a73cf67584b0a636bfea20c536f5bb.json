{
	"id": "a1a73cf67584b0a636bfea20c536f5bb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SwapUniswap.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.26;\r\npragma abicoder v2;\r\n\r\nimport \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\";\r\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\r\nimport \"@uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol\";\r\n\r\ncontract SwapUniswap {\r\n    ISwapRouter public immutable swapRouter;\r\n    IQuoterV2 public immutable quoterV2;\r\n\r\n    enum StableType {\r\n        DAI,\r\n        USDT,\r\n        USDC\r\n    }\r\n\r\n    address public immutable DAI;\r\n    address public immutable USDT;\r\n    address public immutable USDC;\r\n    address public constant WETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n\r\n    uint24 public constant poolFee = 3000;\r\n\r\n    constructor(\r\n        ISwapRouter _swapRouter,\r\n        IQuoterV2 _quoterv2,\r\n        address _dai,\r\n        address _usdt,\r\n        address _usdc\r\n    ) {\r\n        swapRouter = _swapRouter;\r\n        quoterV2 = _quoterv2;\r\n        DAI = _dai;\r\n        USDT = _usdt;\r\n        USDC = _usdc;\r\n    }\r\n\r\n    function getAmountOutMinimum(\r\n        address tokenIn,\r\n        address tokenOut,\r\n        uint256 amountIn\r\n    ) public returns (uint256 amountOutMinimum, uint160 sqrtPriceX96After) {\r\n        IQuoterV2.QuoteExactInputSingleParams memory params = IQuoterV2\r\n            .QuoteExactInputSingleParams({\r\n                tokenIn: tokenIn,\r\n                tokenOut: tokenOut,\r\n                amountIn: amountIn,\r\n                fee: poolFee,\r\n                sqrtPriceLimitX96: 0\r\n            });\r\n\r\n        (amountOutMinimum, sqrtPriceX96After, , ) = quoterV2\r\n            .quoteExactInputSingle(params);\r\n    }\r\n\r\n    /// @notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\r\n    /// using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\r\n    /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\r\n    /// @param amountIn The exact amount of DAI that will be swapped for WETH9.\r\n    /// @return amountOut The amount of WETH9 received.\r\n    function swapExactInputSingle(\r\n        uint256 amountIn,\r\n        address token,\r\n        address stable\r\n    ) internal returns (uint256 amountOut) {\r\n        TransferHelper.safeTransferFrom(\r\n            token,\r\n            msg.sender,\r\n            address(this),\r\n            amountIn\r\n        );\r\n\r\n        TransferHelper.safeApprove(token, address(swapRouter), amountIn);\r\n\r\n        (\r\n            uint256 amountOutMinimum,\r\n            uint160 sqrtPriceX96After\r\n        ) = getAmountOutMinimum(token, stable, amountIn);\r\n\r\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter\r\n            .ExactInputSingleParams({\r\n                tokenIn: token,\r\n                tokenOut: stable,\r\n                fee: poolFee,\r\n                recipient: msg.sender,\r\n                deadline: block.timestamp,\r\n                amountIn: amountIn,\r\n                amountOutMinimum: amountOutMinimum,\r\n                sqrtPriceLimitX96: sqrtPriceX96After\r\n            });\r\n\r\n        amountOut = swapRouter.exactInputSingle(params);\r\n    }\r\n\r\n    /// @notice swapInputMultiplePools swaps a fixed amount of DAI for a maximum possible amount of WETH9 through an intermediary pool.\r\n    /// For this example, we will swap DAI to USDC, then USDC to WETH9 to achieve our desired output.\r\n    /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\r\n    /// @param amountIn The amount of DAI to be swapped.\r\n    /// @return amountOut The amount of WETH9 received after the swap.\r\n    function swapExactInputMultihop(\r\n        uint256 amountIn,\r\n        address token,\r\n        address stable\r\n    ) internal returns (uint256 amountOut) {\r\n        TransferHelper.safeTransferFrom(\r\n            token,\r\n            msg.sender,\r\n            address(this),\r\n            amountIn\r\n        );\r\n\r\n        TransferHelper.safeApprove(token, address(swapRouter), amountIn);\r\n\r\n        ISwapRouter.ExactInputParams memory params = ISwapRouter\r\n            .ExactInputParams({\r\n                path: abi.encodePacked(token, poolFee, USDC, poolFee, stable),\r\n                recipient: msg.sender,\r\n                deadline: block.timestamp,\r\n                amountIn: amountIn,\r\n                amountOutMinimum: 0\r\n            });\r\n\r\n        amountOut = swapRouter.exactInput(params);\r\n    }\r\n}\r\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\n/// @title QuoterV2 Interface\n/// @notice Supports quoting the calculated amounts from exact input or exact output swaps.\n/// @notice For each pool also tells you the number of initialized ticks crossed and the sqrt price of the pool after the swap.\n/// @dev These functions are not marked view because they rely on calling non-view functions and reverting\n/// to compute the result. They are also not gas efficient and should not be called on-chain.\ninterface IQuoterV2 {\n    /// @notice Returns the amount out received for a given exact input swap without executing the swap\n    /// @param path The path of the swap, i.e. each token pair and the pool fee\n    /// @param amountIn The amount of the first token to swap\n    /// @return amountOut The amount of the last token that would be received\n    /// @return sqrtPriceX96AfterList List of the sqrt price after the swap for each pool in the path\n    /// @return initializedTicksCrossedList List of the initialized ticks that the swap crossed for each pool in the path\n    /// @return gasEstimate The estimate of the gas that the swap consumes\n    function quoteExactInput(bytes memory path, uint256 amountIn)\n        external\n        returns (\n            uint256 amountOut,\n            uint160[] memory sqrtPriceX96AfterList,\n            uint32[] memory initializedTicksCrossedList,\n            uint256 gasEstimate\n        );\n\n    struct QuoteExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint256 amountIn;\n        uint24 fee;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Returns the amount out received for a given exact input but for a swap of a single pool\n    /// @param params The params for the quote, encoded as `QuoteExactInputSingleParams`\n    /// tokenIn The token being swapped in\n    /// tokenOut The token being swapped out\n    /// fee The fee of the token pool to consider for the pair\n    /// amountIn The desired input amount\n    /// sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n    /// @return amountOut The amount of `tokenOut` that would be received\n    /// @return sqrtPriceX96After The sqrt price of the pool after the swap\n    /// @return initializedTicksCrossed The number of initialized ticks that the swap crossed\n    /// @return gasEstimate The estimate of the gas that the swap consumes\n    function quoteExactInputSingle(QuoteExactInputSingleParams memory params)\n        external\n        returns (\n            uint256 amountOut,\n            uint160 sqrtPriceX96After,\n            uint32 initializedTicksCrossed,\n            uint256 gasEstimate\n        );\n\n    /// @notice Returns the amount in required for a given exact output swap without executing the swap\n    /// @param path The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\n    /// @param amountOut The amount of the last token to receive\n    /// @return amountIn The amount of first token required to be paid\n    /// @return sqrtPriceX96AfterList List of the sqrt price after the swap for each pool in the path\n    /// @return initializedTicksCrossedList List of the initialized ticks that the swap crossed for each pool in the path\n    /// @return gasEstimate The estimate of the gas that the swap consumes\n    function quoteExactOutput(bytes memory path, uint256 amountOut)\n        external\n        returns (\n            uint256 amountIn,\n            uint160[] memory sqrtPriceX96AfterList,\n            uint32[] memory initializedTicksCrossedList,\n            uint256 gasEstimate\n        );\n\n    struct QuoteExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint256 amount;\n        uint24 fee;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Returns the amount in required to receive the given exact output amount but for a swap of a single pool\n    /// @param params The params for the quote, encoded as `QuoteExactOutputSingleParams`\n    /// tokenIn The token being swapped in\n    /// tokenOut The token being swapped out\n    /// fee The fee of the token pool to consider for the pair\n    /// amountOut The desired output amount\n    /// sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n    /// @return amountIn The amount required as the input for the swap in order to receive `amountOut`\n    /// @return sqrtPriceX96After The sqrt price of the pool after the swap\n    /// @return initializedTicksCrossed The number of initialized ticks that the swap crossed\n    /// @return gasEstimate The estimate of the gas that the swap consumes\n    function quoteExactOutputSingle(QuoteExactOutputSingleParams memory params)\n        external\n        returns (\n            uint256 amountIn,\n            uint160 sqrtPriceX96After,\n            uint32 initializedTicksCrossed,\n            uint256 gasEstimate\n        );\n}\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\nlibrary TransferHelper {\n    /// @notice Transfers tokens from the targeted address to the given destination\n    /// @notice Errors with 'STF' if transfer fails\n    /// @param token The contract address of the token to be transferred\n    /// @param from The originating address from which the tokens will be transferred\n    /// @param to The destination address of the transfer\n    /// @param value The amount to be transferred\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\n    }\n\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Errors with ST if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\n    }\n\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\n    /// @dev Errors with 'SA' if transfer fails\n    /// @param token The contract address of the token to be approved\n    /// @param to The target of the approval\n    /// @param value The amount of the given token the target will be allowed to spend\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\n    }\n\n    /// @notice Transfers ETH to the recipient address\n    /// @dev Fails with `STE`\n    /// @param to The destination of the transfer\n    /// @param value The value to be transferred\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'STE');\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol": {
				"IQuoterV2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "quoteExactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint160[]",
									"name": "sqrtPriceX96AfterList",
									"type": "uint160[]"
								},
								{
									"internalType": "uint32[]",
									"name": "initializedTicksCrossedList",
									"type": "uint32[]"
								},
								{
									"internalType": "uint256",
									"name": "gasEstimate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IQuoterV2.QuoteExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "quoteExactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96After",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "initializedTicksCrossed",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "gasEstimate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "quoteExactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint160[]",
									"name": "sqrtPriceX96AfterList",
									"type": "uint160[]"
								},
								{
									"internalType": "uint32[]",
									"name": "initializedTicksCrossedList",
									"type": "uint32[]"
								},
								{
									"internalType": "uint256",
									"name": "gasEstimate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IQuoterV2.QuoteExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "quoteExactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96After",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "initializedTicksCrossed",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "gasEstimate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "These functions are not marked view because they rely on calling non-view functions and reverting to compute the result. They are also not gas efficient and should not be called on-chain.",
						"kind": "dev",
						"methods": {
							"quoteExactInput(bytes,uint256)": {
								"params": {
									"amountIn": "The amount of the first token to swap",
									"path": "The path of the swap, i.e. each token pair and the pool fee"
								},
								"returns": {
									"amountOut": "The amount of the last token that would be received",
									"gasEstimate": "The estimate of the gas that the swap consumes",
									"initializedTicksCrossedList": "List of the initialized ticks that the swap crossed for each pool in the path",
									"sqrtPriceX96AfterList": "List of the sqrt price after the swap for each pool in the path"
								}
							},
							"quoteExactInputSingle((address,address,uint256,uint24,uint160))": {
								"params": {
									"params": "The params for the quote, encoded as `QuoteExactInputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountIn The desired input amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap"
								},
								"returns": {
									"amountOut": "The amount of `tokenOut` that would be received",
									"gasEstimate": "The estimate of the gas that the swap consumes",
									"initializedTicksCrossed": "The number of initialized ticks that the swap crossed",
									"sqrtPriceX96After": "The sqrt price of the pool after the swap"
								}
							},
							"quoteExactOutput(bytes,uint256)": {
								"params": {
									"amountOut": "The amount of the last token to receive",
									"path": "The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order"
								},
								"returns": {
									"amountIn": "The amount of first token required to be paid",
									"gasEstimate": "The estimate of the gas that the swap consumes",
									"initializedTicksCrossedList": "List of the initialized ticks that the swap crossed for each pool in the path",
									"sqrtPriceX96AfterList": "List of the sqrt price after the swap for each pool in the path"
								}
							},
							"quoteExactOutputSingle((address,address,uint256,uint24,uint160))": {
								"params": {
									"params": "The params for the quote, encoded as `QuoteExactOutputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountOut The desired output amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap"
								},
								"returns": {
									"amountIn": "The amount required as the input for the swap in order to receive `amountOut`",
									"gasEstimate": "The estimate of the gas that the swap consumes",
									"initializedTicksCrossed": "The number of initialized ticks that the swap crossed",
									"sqrtPriceX96After": "The sqrt price of the pool after the swap"
								}
							}
						},
						"title": "QuoterV2 Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"quoteExactInput(bytes,uint256)": "cdca1753",
							"quoteExactInputSingle((address,address,uint256,uint24,uint160))": "c6a5026a",
							"quoteExactOutput(bytes,uint256)": "2f80bb1d",
							"quoteExactOutputSingle((address,address,uint256,uint24,uint160))": "bd21704a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"quoteExactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint160[]\",\"name\":\"sqrtPriceX96AfterList\",\"type\":\"uint160[]\"},{\"internalType\":\"uint32[]\",\"name\":\"initializedTicksCrossedList\",\"type\":\"uint32[]\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IQuoterV2.QuoteExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"quoteExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96After\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"initializedTicksCrossed\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"quoteExactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint160[]\",\"name\":\"sqrtPriceX96AfterList\",\"type\":\"uint160[]\"},{\"internalType\":\"uint32[]\",\"name\":\"initializedTicksCrossedList\",\"type\":\"uint32[]\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IQuoterV2.QuoteExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"quoteExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96After\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"initializedTicksCrossed\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"These functions are not marked view because they rely on calling non-view functions and reverting to compute the result. They are also not gas efficient and should not be called on-chain.\",\"kind\":\"dev\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"params\":{\"amountIn\":\"The amount of the first token to swap\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee\"},\"returns\":{\"amountOut\":\"The amount of the last token that would be received\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossedList\":\"List of the initialized ticks that the swap crossed for each pool in the path\",\"sqrtPriceX96AfterList\":\"List of the sqrt price after the swap for each pool in the path\"}},\"quoteExactInputSingle((address,address,uint256,uint24,uint160))\":{\"params\":{\"params\":\"The params for the quote, encoded as `QuoteExactInputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountIn The desired input amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\"},\"returns\":{\"amountOut\":\"The amount of `tokenOut` that would be received\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossed\":\"The number of initialized ticks that the swap crossed\",\"sqrtPriceX96After\":\"The sqrt price of the pool after the swap\"}},\"quoteExactOutput(bytes,uint256)\":{\"params\":{\"amountOut\":\"The amount of the last token to receive\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\"},\"returns\":{\"amountIn\":\"The amount of first token required to be paid\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossedList\":\"List of the initialized ticks that the swap crossed for each pool in the path\",\"sqrtPriceX96AfterList\":\"List of the sqrt price after the swap for each pool in the path\"}},\"quoteExactOutputSingle((address,address,uint256,uint24,uint160))\":{\"params\":{\"params\":\"The params for the quote, encoded as `QuoteExactOutputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountOut The desired output amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\"},\"returns\":{\"amountIn\":\"The amount required as the input for the swap in order to receive `amountOut`\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossed\":\"The number of initialized ticks that the swap crossed\",\"sqrtPriceX96After\":\"The sqrt price of the pool after the swap\"}}},\"title\":\"QuoterV2 Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"notice\":\"Returns the amount out received for a given exact input swap without executing the swap\"},\"quoteExactInputSingle((address,address,uint256,uint24,uint160))\":{\"notice\":\"Returns the amount out received for a given exact input but for a swap of a single pool\"},\"quoteExactOutput(bytes,uint256)\":{\"notice\":\"Returns the amount in required for a given exact output swap without executing the swap\"},\"quoteExactOutputSingle((address,address,uint256,uint24,uint160))\":{\"notice\":\"Returns the amount in required to receive the given exact output amount but for a swap of a single pool\"}},\"notice\":\"Supports quoting the calculated amounts from exact input or exact output swaps.For each pool also tells you the number of initialized ticks crossed and the sqrt price of the pool after the swap.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol\":\"IQuoterV2\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol\":{\"keccak256\":\"0x7e931f0cd34811851031c4f1318f59b4a4b427a2d2e2968b8e5ed87a9f7f89d6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://63a8d7dcdd081004356b39e1b8e19ee56b02b3abd3e4165781bde1a100a35bed\",\"dweb:/ipfs/QmdfpYkMxoaeEd646aSioLZcPodnCnpZy9Ny4j98uAba2J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"quoteExactInput(bytes,uint256)": {
								"notice": "Returns the amount out received for a given exact input swap without executing the swap"
							},
							"quoteExactInputSingle((address,address,uint256,uint24,uint160))": {
								"notice": "Returns the amount out received for a given exact input but for a swap of a single pool"
							},
							"quoteExactOutput(bytes,uint256)": {
								"notice": "Returns the amount in required for a given exact output swap without executing the swap"
							},
							"quoteExactOutputSingle((address,address,uint256,uint24,uint160))": {
								"notice": "Returns the amount in required to receive the given exact output amount but for a swap of a single pool"
							}
						},
						"notice": "Supports quoting the calculated amounts from exact input or exact output swaps.For each pool also tells you the number of initialized ticks crossed and the sqrt price of the pool after the swap.",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cafe8c5c3d58302551867c1bf162f0055aec99ac03bebaa27e50a78387ea9b9664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cafe8c5c3d58302551867c1bf162f0055aec99ac03bebaa27e50a78387ea9b9664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA INVALID DUP13 TLOAD RETURNDATASIZE PC ADDRESS 0x25 MLOAD DUP7 PUSH29 0x1BF162F0055AEC99AC03BEBAA27E50A78387EA9B9664736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "129:2408:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cafe8c5c3d58302551867c1bf162f0055aec99ac03bebaa27e50a78387ea9b9664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA INVALID DUP13 TLOAD RETURNDATASIZE PC ADDRESS 0x25 MLOAD DUP7 PUSH29 0x1BF162F0055AEC99AC03BEBAA27E50A78387EA9B9664736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "129:2408:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cafe8c5c3d58302551867c1bf162f0055aec99ac03bebaa27e50a78387ea9b9664736f6c634300081a0033",
									".code": [
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/SwapUniswap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SwapUniswap.sol": {
				"SwapUniswap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "_swapRouter",
									"type": "address"
								},
								{
									"internalType": "contract IQuoterV2",
									"name": "_quoterv2",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_dai",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdt",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdc",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "DAI",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDC",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDT",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "getAmountOutMinimum",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMinimum",
									"type": "uint256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96After",
									"type": "uint160"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolFee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "quoterV2",
							"outputs": [
								{
									"internalType": "contract IQuoterV2",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SwapUniswap.sol\":294:4481  contract SwapUniswap {... */\n  mstore(0x40, 0x0120)\n    /* \"contracts/SwapUniswap.sol\":722:1017  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/SwapUniswap.sol\":900:911  _swapRouter */\n  dup5\n    /* \"contracts/SwapUniswap.sol\":887:911  swapRouter = _swapRouter */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/SwapUniswap.sol\":933:942  _quoterv2 */\n  dup4\n    /* \"contracts/SwapUniswap.sol\":922:942  quoterV2 = _quoterv2 */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/SwapUniswap.sol\":959:963  _dai */\n  dup3\n    /* \"contracts/SwapUniswap.sol\":953:963  DAI = _dai */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/SwapUniswap.sol\":981:986  _usdt */\n  dup2\n    /* \"contracts/SwapUniswap.sol\":974:986  USDT = _usdt */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xe0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/SwapUniswap.sol\":1004:1009  _usdc */\n  dup1\n    /* \"contracts/SwapUniswap.sol\":997:1009  USDC = _usdc */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x0100\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/SwapUniswap.sol\":722:1017  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/SwapUniswap.sol\":294:4481  contract SwapUniswap {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_26\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:683   */\ntag_12:\n    /* \"#utility.yul\":624:631   */\n  0x00\n    /* \"#utility.yul\":653:677   */\n  tag_28\n    /* \"#utility.yul\":671:676   */\n  dup3\n    /* \"#utility.yul\":653:677   */\n  tag_11\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":642:677   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:683   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":689:849   */\ntag_13:\n    /* \"#utility.yul\":781:824   */\n  tag_30\n    /* \"#utility.yul\":818:823   */\n  dup2\n    /* \"#utility.yul\":781:824   */\n  tag_12\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":774:779   */\n  dup2\n    /* \"#utility.yul\":771:825   */\n  eq\n    /* \"#utility.yul\":761:843   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":839:840   */\n  0x00\n    /* \"#utility.yul\":836:837   */\n  dup1\n    /* \"#utility.yul\":829:841   */\n  revert\n    /* \"#utility.yul\":761:843   */\ntag_31:\n    /* \"#utility.yul\":689:849   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":855:1036   */\ntag_14:\n    /* \"#utility.yul\":931:936   */\n  0x00\n    /* \"#utility.yul\":962:968   */\n  dup2\n    /* \"#utility.yul\":956:969   */\n  mload\n    /* \"#utility.yul\":947:969   */\n  swap1\n  pop\n    /* \"#utility.yul\":978:1030   */\n  tag_33\n    /* \"#utility.yul\":1024:1029   */\n  dup2\n    /* \"#utility.yul\":978:1030   */\n  tag_13\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":855:1036   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1042:1155   */\ntag_15:\n    /* \"#utility.yul\":1096:1103   */\n  0x00\n    /* \"#utility.yul\":1125:1149   */\n  tag_35\n    /* \"#utility.yul\":1143:1148   */\n  dup3\n    /* \"#utility.yul\":1125:1149   */\n  tag_11\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1114:1149   */\n  swap1\n  pop\n    /* \"#utility.yul\":1042:1155   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1317   */\ntag_16:\n    /* \"#utility.yul\":1251:1292   */\n  tag_37\n    /* \"#utility.yul\":1286:1291   */\n  dup2\n    /* \"#utility.yul\":1251:1292   */\n  tag_15\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1244:1249   */\n  dup2\n    /* \"#utility.yul\":1241:1293   */\n  eq\n    /* \"#utility.yul\":1231:1311   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1307:1308   */\n  0x00\n    /* \"#utility.yul\":1304:1305   */\n  dup1\n    /* \"#utility.yul\":1297:1309   */\n  revert\n    /* \"#utility.yul\":1231:1311   */\ntag_38:\n    /* \"#utility.yul\":1161:1317   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1323:1500   */\ntag_17:\n    /* \"#utility.yul\":1397:1402   */\n  0x00\n    /* \"#utility.yul\":1428:1434   */\n  dup2\n    /* \"#utility.yul\":1422:1435   */\n  mload\n    /* \"#utility.yul\":1413:1435   */\n  swap1\n  pop\n    /* \"#utility.yul\":1444:1494   */\n  tag_40\n    /* \"#utility.yul\":1488:1493   */\n  dup2\n    /* \"#utility.yul\":1444:1494   */\n  tag_16\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1323:1500   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1506:1628   */\ntag_18:\n    /* \"#utility.yul\":1579:1603   */\n  tag_42\n    /* \"#utility.yul\":1597:1602   */\n  dup2\n    /* \"#utility.yul\":1579:1603   */\n  tag_11\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1572:1577   */\n  dup2\n    /* \"#utility.yul\":1569:1604   */\n  eq\n    /* \"#utility.yul\":1559:1622   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1618:1619   */\n  0x00\n    /* \"#utility.yul\":1615:1616   */\n  dup1\n    /* \"#utility.yul\":1608:1620   */\n  revert\n    /* \"#utility.yul\":1559:1622   */\ntag_43:\n    /* \"#utility.yul\":1506:1628   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1634:1777   */\ntag_19:\n    /* \"#utility.yul\":1691:1696   */\n  0x00\n    /* \"#utility.yul\":1722:1728   */\n  dup2\n    /* \"#utility.yul\":1716:1729   */\n  mload\n    /* \"#utility.yul\":1707:1729   */\n  swap1\n  pop\n    /* \"#utility.yul\":1738:1771   */\n  tag_45\n    /* \"#utility.yul\":1765:1770   */\n  dup2\n    /* \"#utility.yul\":1738:1771   */\n  tag_18\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1634:1777   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1783:2832   */\ntag_3:\n    /* \"#utility.yul\":1925:1931   */\n  0x00\n    /* \"#utility.yul\":1933:1939   */\n  dup1\n    /* \"#utility.yul\":1941:1947   */\n  0x00\n    /* \"#utility.yul\":1949:1955   */\n  dup1\n    /* \"#utility.yul\":1957:1963   */\n  0x00\n    /* \"#utility.yul\":2006:2009   */\n  0xa0\n    /* \"#utility.yul\":1994:2003   */\n  dup7\n    /* \"#utility.yul\":1985:1992   */\n  dup9\n    /* \"#utility.yul\":1981:2004   */\n  sub\n    /* \"#utility.yul\":1977:2010   */\n  slt\n    /* \"#utility.yul\":1974:2094   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2013:2092   */\n  tag_48\n  tag_8\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1974:2094   */\ntag_47:\n    /* \"#utility.yul\":2133:2134   */\n  0x00\n    /* \"#utility.yul\":2158:2241   */\n  tag_49\n    /* \"#utility.yul\":2233:2240   */\n  dup9\n    /* \"#utility.yul\":2224:2230   */\n  dup3\n    /* \"#utility.yul\":2213:2222   */\n  dup10\n    /* \"#utility.yul\":2209:2231   */\n  add\n    /* \"#utility.yul\":2158:2241   */\n  tag_14\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":2148:2241   */\n  swap6\n  pop\n    /* \"#utility.yul\":2104:2251   */\n  pop\n    /* \"#utility.yul\":2290:2292   */\n  0x20\n    /* \"#utility.yul\":2316:2397   */\n  tag_50\n    /* \"#utility.yul\":2389:2396   */\n  dup9\n    /* \"#utility.yul\":2380:2386   */\n  dup3\n    /* \"#utility.yul\":2369:2378   */\n  dup10\n    /* \"#utility.yul\":2365:2387   */\n  add\n    /* \"#utility.yul\":2316:2397   */\n  tag_17\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2306:2397   */\n  swap5\n  pop\n    /* \"#utility.yul\":2261:2407   */\n  pop\n    /* \"#utility.yul\":2446:2448   */\n  0x40\n    /* \"#utility.yul\":2472:2536   */\n  tag_51\n    /* \"#utility.yul\":2528:2535   */\n  dup9\n    /* \"#utility.yul\":2519:2525   */\n  dup3\n    /* \"#utility.yul\":2508:2517   */\n  dup10\n    /* \"#utility.yul\":2504:2526   */\n  add\n    /* \"#utility.yul\":2472:2536   */\n  tag_19\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":2462:2536   */\n  swap4\n  pop\n    /* \"#utility.yul\":2417:2546   */\n  pop\n    /* \"#utility.yul\":2585:2587   */\n  0x60\n    /* \"#utility.yul\":2611:2675   */\n  tag_52\n    /* \"#utility.yul\":2667:2674   */\n  dup9\n    /* \"#utility.yul\":2658:2664   */\n  dup3\n    /* \"#utility.yul\":2647:2656   */\n  dup10\n    /* \"#utility.yul\":2643:2665   */\n  add\n    /* \"#utility.yul\":2611:2675   */\n  tag_19\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2601:2675   */\n  swap3\n  pop\n    /* \"#utility.yul\":2556:2685   */\n  pop\n    /* \"#utility.yul\":2724:2727   */\n  0x80\n    /* \"#utility.yul\":2751:2815   */\n  tag_53\n    /* \"#utility.yul\":2807:2814   */\n  dup9\n    /* \"#utility.yul\":2798:2804   */\n  dup3\n    /* \"#utility.yul\":2787:2796   */\n  dup10\n    /* \"#utility.yul\":2783:2805   */\n  add\n    /* \"#utility.yul\":2751:2815   */\n  tag_19\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2741:2815   */\n  swap2\n  pop\n    /* \"#utility.yul\":2695:2825   */\n  pop\n    /* \"#utility.yul\":1783:2832   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"contracts/SwapUniswap.sol\":294:4481  contract SwapUniswap {... */\ntag_6:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x198ed63d80d143525b60af21f7dc77e6c7796a43366dbb557d0a8832a905997b\")\n  0x00\n  assignImmutable(\"0x58edbc2b3c1ace786489898402daa7cb515f64ccd3e2561aefc6d2211a3e2e4e\")\n  0x00\n  assignImmutable(\"0x8af27cf74aac2688cd726c07a54289d4ba183944dedc36dfdfdf457c8a8d2e11\")\n  0x00\n  assignImmutable(\"0x9fb51ef4a431ed45998990aba028bf896911778e9bd621635e58b1cc415f7dbc\")\n  0x00\n  assignImmutable(\"0xf47a9f97d5b4ec1c83194499ff4b008bcd400d4c1ab31b8e2d66ba5334f397e3\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/SwapUniswap.sol\":294:4481  contract SwapUniswap {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc54e44eb\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xc54e44eb\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xccbfc16c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe0bab4c4\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe20dccb2\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x089fe6aa\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x89a30271\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xad5c4648\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SwapUniswap.sol\":676:713  uint24 public constant poolFee = 3000 */\n    tag_3:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":558:587  address public immutable USDC */\n    tag_4:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":594:667  address public constant WETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n    tag_5:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":322:361  ISwapRouter public immutable swapRouter */\n    tag_6:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":522:551  address public immutable USDT */\n    tag_7:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":1025:1639  function getAmountOutMinimum(... */\n    tag_8:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap3\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":487:515  address public immutable DAI */\n    tag_9:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":368:403  IQuoterV2 public immutable quoterV2 */\n    tag_10:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":676:713  uint24 public constant poolFee = 3000 */\n    tag_13:\n        /* \"contracts/SwapUniswap.sol\":709:713  3000 */\n      0x0bb8\n        /* \"contracts/SwapUniswap.sol\":676:713  uint24 public constant poolFee = 3000 */\n      dup2\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":558:587  address public immutable USDC */\n    tag_17:\n      immutable(\"0x198ed63d80d143525b60af21f7dc77e6c7796a43366dbb557d0a8832a905997b\")\n      dup2\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":594:667  address public constant WETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n    tag_21:\n        /* \"contracts/SwapUniswap.sol\":625:667  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"contracts/SwapUniswap.sol\":594:667  address public constant WETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      dup2\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":322:361  ISwapRouter public immutable swapRouter */\n    tag_24:\n      immutable(\"0xf47a9f97d5b4ec1c83194499ff4b008bcd400d4c1ab31b8e2d66ba5334f397e3\")\n      dup2\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":522:551  address public immutable USDT */\n    tag_28:\n      immutable(\"0x58edbc2b3c1ace786489898402daa7cb515f64ccd3e2561aefc6d2211a3e2e4e\")\n      dup2\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":1025:1639  function getAmountOutMinimum(... */\n    tag_33:\n        /* \"contracts/SwapUniswap.sol\":1157:1181  uint256 amountOutMinimum */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":1183:1208  uint160 sqrtPriceX96After */\n      dup1\n        /* \"contracts/SwapUniswap.sol\":1221:1272  IQuoterV2.QuoteExactInputSingleParams memory params */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":1275:1522  IQuoterV2... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/SwapUniswap.sol\":1355:1362  tokenIn */\n      dup8\n        /* \"contracts/SwapUniswap.sol\":1275:1522  IQuoterV2... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":1391:1399  tokenOut */\n      dup7\n        /* \"contracts/SwapUniswap.sol\":1275:1522  IQuoterV2... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":1428:1436  amountIn */\n      dup6\n        /* \"contracts/SwapUniswap.sol\":1275:1522  IQuoterV2... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":709:713  3000 */\n      0x0bb8\n        /* \"contracts/SwapUniswap.sol\":1275:1522  IQuoterV2... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":1505:1506  0 */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":1275:1522  IQuoterV2... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/SwapUniswap.sol\":1221:1522  IQuoterV2.QuoteExactInputSingleParams memory params = IQuoterV2... */\n      swap1\n      pop\n        /* \"contracts/SwapUniswap.sol\":1579:1587  quoterV2 */\n      immutable(\"0x9fb51ef4a431ed45998990aba028bf896911778e9bd621635e58b1cc415f7dbc\")\n        /* \"contracts/SwapUniswap.sol\":1579:1623  quoterV2... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc6a5026a\n        /* \"contracts/SwapUniswap.sol\":1624:1630  params */\n      dup3\n        /* \"contracts/SwapUniswap.sol\":1579:1631  quoterV2... */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      0x80\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"contracts/SwapUniswap.sol\":1535:1631  (amountOutMinimum, sqrtPriceX96After, , ) = quoterV2... */\n      swap1\n      pop\n      pop\n      dup1\n      swap4\n      pop\n      dup2\n      swap5\n      pop\n      pop\n      pop\n        /* \"contracts/SwapUniswap.sol\":1210:1639  {... */\n      pop\n        /* \"contracts/SwapUniswap.sol\":1025:1639  function getAmountOutMinimum(... */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":487:515  address public immutable DAI */\n    tag_37:\n      immutable(\"0x8af27cf74aac2688cd726c07a54289d4ba183944dedc36dfdfdf457c8a8d2e11\")\n      dup2\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":368:403  IQuoterV2 public immutable quoterV2 */\n    tag_40:\n      immutable(\"0x9fb51ef4a431ed45998990aba028bf896911778e9bd621635e58b1cc415f7dbc\")\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:98   */\n    tag_50:\n        /* \"#utility.yul\":43:50   */\n      0x00\n        /* \"#utility.yul\":83:91   */\n      0xffffff\n        /* \"#utility.yul\":76:81   */\n      dup3\n        /* \"#utility.yul\":72:92   */\n      and\n        /* \"#utility.yul\":61:92   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:98   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":104:219   */\n    tag_51:\n        /* \"#utility.yul\":189:212   */\n      tag_86\n        /* \"#utility.yul\":206:211   */\n      dup2\n        /* \"#utility.yul\":189:212   */\n      tag_50\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":184:187   */\n      dup3\n        /* \"#utility.yul\":177:213   */\n      mstore\n        /* \"#utility.yul\":104:219   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":225:443   */\n    tag_15:\n        /* \"#utility.yul\":316:320   */\n      0x00\n        /* \"#utility.yul\":354:356   */\n      0x20\n        /* \"#utility.yul\":343:352   */\n      dup3\n        /* \"#utility.yul\":339:357   */\n      add\n        /* \"#utility.yul\":331:357   */\n      swap1\n      pop\n        /* \"#utility.yul\":367:436   */\n      tag_88\n        /* \"#utility.yul\":433:434   */\n      0x00\n        /* \"#utility.yul\":422:431   */\n      dup4\n        /* \"#utility.yul\":418:435   */\n      add\n        /* \"#utility.yul\":409:415   */\n      dup5\n        /* \"#utility.yul\":367:436   */\n      tag_51\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":225:443   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":449:575   */\n    tag_52:\n        /* \"#utility.yul\":486:493   */\n      0x00\n        /* \"#utility.yul\":526:568   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":519:524   */\n      dup3\n        /* \"#utility.yul\":515:569   */\n      and\n        /* \"#utility.yul\":504:569   */\n      swap1\n      pop\n        /* \"#utility.yul\":449:575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":581:677   */\n    tag_53:\n        /* \"#utility.yul\":618:625   */\n      0x00\n        /* \"#utility.yul\":647:671   */\n      tag_91\n        /* \"#utility.yul\":665:670   */\n      dup3\n        /* \"#utility.yul\":647:671   */\n      tag_52\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":636:671   */\n      swap1\n      pop\n        /* \"#utility.yul\":581:677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":683:801   */\n    tag_54:\n        /* \"#utility.yul\":770:794   */\n      tag_93\n        /* \"#utility.yul\":788:793   */\n      dup2\n        /* \"#utility.yul\":770:794   */\n      tag_53\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":765:768   */\n      dup3\n        /* \"#utility.yul\":758:795   */\n      mstore\n        /* \"#utility.yul\":683:801   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":807:1029   */\n    tag_19:\n        /* \"#utility.yul\":900:904   */\n      0x00\n        /* \"#utility.yul\":938:940   */\n      0x20\n        /* \"#utility.yul\":927:936   */\n      dup3\n        /* \"#utility.yul\":923:941   */\n      add\n        /* \"#utility.yul\":915:941   */\n      swap1\n      pop\n        /* \"#utility.yul\":951:1022   */\n      tag_95\n        /* \"#utility.yul\":1019:1020   */\n      0x00\n        /* \"#utility.yul\":1008:1017   */\n      dup4\n        /* \"#utility.yul\":1004:1021   */\n      add\n        /* \"#utility.yul\":995:1001   */\n      dup5\n        /* \"#utility.yul\":951:1022   */\n      tag_54\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":807:1029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1035:1095   */\n    tag_55:\n        /* \"#utility.yul\":1063:1066   */\n      0x00\n        /* \"#utility.yul\":1084:1089   */\n      dup2\n        /* \"#utility.yul\":1077:1089   */\n      swap1\n      pop\n        /* \"#utility.yul\":1035:1095   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1101:1243   */\n    tag_56:\n        /* \"#utility.yul\":1151:1160   */\n      0x00\n        /* \"#utility.yul\":1184:1237   */\n      tag_98\n        /* \"#utility.yul\":1202:1236   */\n      tag_99\n        /* \"#utility.yul\":1211:1235   */\n      tag_100\n        /* \"#utility.yul\":1229:1234   */\n      dup5\n        /* \"#utility.yul\":1211:1235   */\n      tag_52\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1202:1236   */\n      tag_55\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1184:1237   */\n      tag_52\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1171:1237   */\n      swap1\n      pop\n        /* \"#utility.yul\":1101:1243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1249:1375   */\n    tag_57:\n        /* \"#utility.yul\":1299:1308   */\n      0x00\n        /* \"#utility.yul\":1332:1369   */\n      tag_102\n        /* \"#utility.yul\":1363:1368   */\n      dup3\n        /* \"#utility.yul\":1332:1369   */\n      tag_56\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1319:1369   */\n      swap1\n      pop\n        /* \"#utility.yul\":1249:1375   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1381:1526   */\n    tag_58:\n        /* \"#utility.yul\":1450:1459   */\n      0x00\n        /* \"#utility.yul\":1483:1520   */\n      tag_104\n        /* \"#utility.yul\":1514:1519   */\n      dup3\n        /* \"#utility.yul\":1483:1520   */\n      tag_57\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":1470:1520   */\n      swap1\n      pop\n        /* \"#utility.yul\":1381:1526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:1701   */\n    tag_59:\n        /* \"#utility.yul\":1638:1694   */\n      tag_106\n        /* \"#utility.yul\":1688:1693   */\n      dup2\n        /* \"#utility.yul\":1638:1694   */\n      tag_58\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1633:1636   */\n      dup3\n        /* \"#utility.yul\":1626:1695   */\n      mstore\n        /* \"#utility.yul\":1532:1701   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1707:1967   */\n    tag_26:\n        /* \"#utility.yul\":1819:1823   */\n      0x00\n        /* \"#utility.yul\":1857:1859   */\n      0x20\n        /* \"#utility.yul\":1846:1855   */\n      dup3\n        /* \"#utility.yul\":1842:1860   */\n      add\n        /* \"#utility.yul\":1834:1860   */\n      swap1\n      pop\n        /* \"#utility.yul\":1870:1960   */\n      tag_108\n        /* \"#utility.yul\":1957:1958   */\n      0x00\n        /* \"#utility.yul\":1946:1955   */\n      dup4\n        /* \"#utility.yul\":1942:1959   */\n      add\n        /* \"#utility.yul\":1933:1939   */\n      dup5\n        /* \"#utility.yul\":1870:1960   */\n      tag_59\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":1707:1967   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2054:2171   */\n    tag_61:\n        /* \"#utility.yul\":2163:2164   */\n      0x00\n        /* \"#utility.yul\":2160:2161   */\n      dup1\n        /* \"#utility.yul\":2153:2165   */\n      revert\n        /* \"#utility.yul\":2300:2422   */\n    tag_63:\n        /* \"#utility.yul\":2373:2397   */\n      tag_113\n        /* \"#utility.yul\":2391:2396   */\n      dup2\n        /* \"#utility.yul\":2373:2397   */\n      tag_53\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":2366:2371   */\n      dup2\n        /* \"#utility.yul\":2363:2398   */\n      eq\n        /* \"#utility.yul\":2353:2416   */\n      tag_114\n      jumpi\n        /* \"#utility.yul\":2412:2413   */\n      0x00\n        /* \"#utility.yul\":2409:2410   */\n      dup1\n        /* \"#utility.yul\":2402:2414   */\n      revert\n        /* \"#utility.yul\":2353:2416   */\n    tag_114:\n        /* \"#utility.yul\":2300:2422   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2428:2567   */\n    tag_64:\n        /* \"#utility.yul\":2474:2479   */\n      0x00\n        /* \"#utility.yul\":2512:2518   */\n      dup2\n        /* \"#utility.yul\":2499:2519   */\n      calldataload\n        /* \"#utility.yul\":2490:2519   */\n      swap1\n      pop\n        /* \"#utility.yul\":2528:2561   */\n      tag_116\n        /* \"#utility.yul\":2555:2560   */\n      dup2\n        /* \"#utility.yul\":2528:2561   */\n      tag_63\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2428:2567   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2573:2650   */\n    tag_65:\n        /* \"#utility.yul\":2610:2617   */\n      0x00\n        /* \"#utility.yul\":2639:2644   */\n      dup2\n        /* \"#utility.yul\":2628:2644   */\n      swap1\n      pop\n        /* \"#utility.yul\":2573:2650   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2656:2778   */\n    tag_66:\n        /* \"#utility.yul\":2729:2753   */\n      tag_119\n        /* \"#utility.yul\":2747:2752   */\n      dup2\n        /* \"#utility.yul\":2729:2753   */\n      tag_65\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2722:2727   */\n      dup2\n        /* \"#utility.yul\":2719:2754   */\n      eq\n        /* \"#utility.yul\":2709:2772   */\n      tag_120\n      jumpi\n        /* \"#utility.yul\":2768:2769   */\n      0x00\n        /* \"#utility.yul\":2765:2766   */\n      dup1\n        /* \"#utility.yul\":2758:2770   */\n      revert\n        /* \"#utility.yul\":2709:2772   */\n    tag_120:\n        /* \"#utility.yul\":2656:2778   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2784:2923   */\n    tag_67:\n        /* \"#utility.yul\":2830:2835   */\n      0x00\n        /* \"#utility.yul\":2868:2874   */\n      dup2\n        /* \"#utility.yul\":2855:2875   */\n      calldataload\n        /* \"#utility.yul\":2846:2875   */\n      swap1\n      pop\n        /* \"#utility.yul\":2884:2917   */\n      tag_122\n        /* \"#utility.yul\":2911:2916   */\n      dup2\n        /* \"#utility.yul\":2884:2917   */\n      tag_66\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":2784:2923   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2929:3548   */\n    tag_32:\n        /* \"#utility.yul\":3006:3012   */\n      0x00\n        /* \"#utility.yul\":3014:3020   */\n      dup1\n        /* \"#utility.yul\":3022:3028   */\n      0x00\n        /* \"#utility.yul\":3071:3073   */\n      0x60\n        /* \"#utility.yul\":3059:3068   */\n      dup5\n        /* \"#utility.yul\":3050:3057   */\n      dup7\n        /* \"#utility.yul\":3046:3069   */\n      sub\n        /* \"#utility.yul\":3042:3074   */\n      slt\n        /* \"#utility.yul\":3039:3158   */\n      iszero\n      tag_124\n      jumpi\n        /* \"#utility.yul\":3077:3156   */\n      tag_125\n      tag_61\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":3039:3158   */\n    tag_124:\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3222:3275   */\n      tag_126\n        /* \"#utility.yul\":3267:3274   */\n      dup7\n        /* \"#utility.yul\":3258:3264   */\n      dup3\n        /* \"#utility.yul\":3247:3256   */\n      dup8\n        /* \"#utility.yul\":3243:3265   */\n      add\n        /* \"#utility.yul\":3222:3275   */\n      tag_64\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":3212:3275   */\n      swap4\n      pop\n        /* \"#utility.yul\":3168:3285   */\n      pop\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3350:3403   */\n      tag_127\n        /* \"#utility.yul\":3395:3402   */\n      dup7\n        /* \"#utility.yul\":3386:3392   */\n      dup3\n        /* \"#utility.yul\":3375:3384   */\n      dup8\n        /* \"#utility.yul\":3371:3393   */\n      add\n        /* \"#utility.yul\":3350:3403   */\n      tag_64\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":3340:3403   */\n      swap3\n      pop\n        /* \"#utility.yul\":3295:3413   */\n      pop\n        /* \"#utility.yul\":3452:3454   */\n      0x40\n        /* \"#utility.yul\":3478:3531   */\n      tag_128\n        /* \"#utility.yul\":3523:3530   */\n      dup7\n        /* \"#utility.yul\":3514:3520   */\n      dup3\n        /* \"#utility.yul\":3503:3512   */\n      dup8\n        /* \"#utility.yul\":3499:3521   */\n      add\n        /* \"#utility.yul\":3478:3531   */\n      tag_67\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":3468:3531   */\n      swap2\n      pop\n        /* \"#utility.yul\":3423:3541   */\n      pop\n        /* \"#utility.yul\":2929:3548   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3554:3672   */\n    tag_68:\n        /* \"#utility.yul\":3641:3665   */\n      tag_130\n        /* \"#utility.yul\":3659:3664   */\n      dup2\n        /* \"#utility.yul\":3641:3665   */\n      tag_65\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3636:3639   */\n      dup3\n        /* \"#utility.yul\":3629:3666   */\n      mstore\n        /* \"#utility.yul\":3554:3672   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:3796   */\n    tag_69:\n        /* \"#utility.yul\":3765:3789   */\n      tag_132\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3765:3789   */\n      tag_52\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3753:3790   */\n      mstore\n        /* \"#utility.yul\":3678:3796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:4134   */\n    tag_35:\n        /* \"#utility.yul\":3923:3927   */\n      0x00\n        /* \"#utility.yul\":3961:3963   */\n      0x40\n        /* \"#utility.yul\":3950:3959   */\n      dup3\n        /* \"#utility.yul\":3946:3964   */\n      add\n        /* \"#utility.yul\":3938:3964   */\n      swap1\n      pop\n        /* \"#utility.yul\":3974:4045   */\n      tag_134\n        /* \"#utility.yul\":4042:4043   */\n      0x00\n        /* \"#utility.yul\":4031:4040   */\n      dup4\n        /* \"#utility.yul\":4027:4044   */\n      add\n        /* \"#utility.yul\":4018:4024   */\n      dup6\n        /* \"#utility.yul\":3974:4045   */\n      tag_68\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":4055:4127   */\n      tag_135\n        /* \"#utility.yul\":4123:4125   */\n      0x20\n        /* \"#utility.yul\":4112:4121   */\n      dup4\n        /* \"#utility.yul\":4108:4126   */\n      add\n        /* \"#utility.yul\":4099:4105   */\n      dup5\n        /* \"#utility.yul\":4055:4127   */\n      tag_69\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3802:4134   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4140:4283   */\n    tag_70:\n        /* \"#utility.yul\":4207:4216   */\n      0x00\n        /* \"#utility.yul\":4240:4277   */\n      tag_137\n        /* \"#utility.yul\":4271:4276   */\n      dup3\n        /* \"#utility.yul\":4240:4277   */\n      tag_57\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":4227:4277   */\n      swap1\n      pop\n        /* \"#utility.yul\":4140:4283   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4289:4454   */\n    tag_71:\n        /* \"#utility.yul\":4393:4447   */\n      tag_139\n        /* \"#utility.yul\":4441:4446   */\n      dup2\n        /* \"#utility.yul\":4393:4447   */\n      tag_70\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4388:4391   */\n      dup3\n        /* \"#utility.yul\":4381:4448   */\n      mstore\n        /* \"#utility.yul\":4289:4454   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4460:4716   */\n    tag_42:\n        /* \"#utility.yul\":4570:4574   */\n      0x00\n        /* \"#utility.yul\":4608:4610   */\n      0x20\n        /* \"#utility.yul\":4597:4606   */\n      dup3\n        /* \"#utility.yul\":4593:4611   */\n      add\n        /* \"#utility.yul\":4585:4611   */\n      swap1\n      pop\n        /* \"#utility.yul\":4621:4709   */\n      tag_141\n        /* \"#utility.yul\":4706:4707   */\n      0x00\n        /* \"#utility.yul\":4695:4704   */\n      dup4\n        /* \"#utility.yul\":4691:4708   */\n      add\n        /* \"#utility.yul\":4682:4688   */\n      dup5\n        /* \"#utility.yul\":4621:4709   */\n      tag_71\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":4460:4716   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4722:4830   */\n    tag_72:\n        /* \"#utility.yul\":4799:4823   */\n      tag_143\n        /* \"#utility.yul\":4817:4822   */\n      dup2\n        /* \"#utility.yul\":4799:4823   */\n      tag_53\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":4794:4797   */\n      dup3\n        /* \"#utility.yul\":4787:4824   */\n      mstore\n        /* \"#utility.yul\":4722:4830   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4836:4944   */\n    tag_73:\n        /* \"#utility.yul\":4913:4937   */\n      tag_145\n        /* \"#utility.yul\":4931:4936   */\n      dup2\n        /* \"#utility.yul\":4913:4937   */\n      tag_65\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4908:4911   */\n      dup3\n        /* \"#utility.yul\":4901:4938   */\n      mstore\n        /* \"#utility.yul\":4836:4944   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4950:5055   */\n    tag_74:\n        /* \"#utility.yul\":5025:5048   */\n      tag_147\n        /* \"#utility.yul\":5042:5047   */\n      dup2\n        /* \"#utility.yul\":5025:5048   */\n      tag_50\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":5020:5023   */\n      dup3\n        /* \"#utility.yul\":5013:5049   */\n      mstore\n        /* \"#utility.yul\":4950:5055   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5061:5169   */\n    tag_75:\n        /* \"#utility.yul\":5138:5162   */\n      tag_149\n        /* \"#utility.yul\":5156:5161   */\n      dup2\n        /* \"#utility.yul\":5138:5162   */\n      tag_52\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":5133:5136   */\n      dup3\n        /* \"#utility.yul\":5126:5163   */\n      mstore\n        /* \"#utility.yul\":5061:5169   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5275:6363   */\n    tag_76:\n        /* \"#utility.yul\":5460:5464   */\n      0xa0\n        /* \"#utility.yul\":5455:5458   */\n      dup3\n        /* \"#utility.yul\":5451:5465   */\n      add\n        /* \"#utility.yul\":5550:5554   */\n      0x00\n        /* \"#utility.yul\":5543:5548   */\n      dup3\n        /* \"#utility.yul\":5539:5555   */\n      add\n        /* \"#utility.yul\":5533:5556   */\n      mload\n        /* \"#utility.yul\":5569:5632   */\n      tag_151\n        /* \"#utility.yul\":5626:5630   */\n      0x00\n        /* \"#utility.yul\":5621:5624   */\n      dup6\n        /* \"#utility.yul\":5617:5631   */\n      add\n        /* \"#utility.yul\":5603:5615   */\n      dup3\n        /* \"#utility.yul\":5569:5632   */\n      tag_72\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":5475:5642   */\n      pop\n        /* \"#utility.yul\":5728:5732   */\n      0x20\n        /* \"#utility.yul\":5721:5726   */\n      dup3\n        /* \"#utility.yul\":5717:5733   */\n      add\n        /* \"#utility.yul\":5711:5734   */\n      mload\n        /* \"#utility.yul\":5747:5810   */\n      tag_152\n        /* \"#utility.yul\":5804:5808   */\n      0x20\n        /* \"#utility.yul\":5799:5802   */\n      dup6\n        /* \"#utility.yul\":5795:5809   */\n      add\n        /* \"#utility.yul\":5781:5793   */\n      dup3\n        /* \"#utility.yul\":5747:5810   */\n      tag_72\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":5652:5820   */\n      pop\n        /* \"#utility.yul\":5906:5910   */\n      0x40\n        /* \"#utility.yul\":5899:5904   */\n      dup3\n        /* \"#utility.yul\":5895:5911   */\n      add\n        /* \"#utility.yul\":5889:5912   */\n      mload\n        /* \"#utility.yul\":5925:5988   */\n      tag_153\n        /* \"#utility.yul\":5982:5986   */\n      0x40\n        /* \"#utility.yul\":5977:5980   */\n      dup6\n        /* \"#utility.yul\":5973:5987   */\n      add\n        /* \"#utility.yul\":5959:5971   */\n      dup3\n        /* \"#utility.yul\":5925:5988   */\n      tag_73\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":5830:5998   */\n      pop\n        /* \"#utility.yul\":6079:6083   */\n      0x60\n        /* \"#utility.yul\":6072:6077   */\n      dup3\n        /* \"#utility.yul\":6068:6084   */\n      add\n        /* \"#utility.yul\":6062:6085   */\n      mload\n        /* \"#utility.yul\":6098:6159   */\n      tag_154\n        /* \"#utility.yul\":6153:6157   */\n      0x60\n        /* \"#utility.yul\":6148:6151   */\n      dup6\n        /* \"#utility.yul\":6144:6158   */\n      add\n        /* \"#utility.yul\":6130:6142   */\n      dup3\n        /* \"#utility.yul\":6098:6159   */\n      tag_74\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":6008:6169   */\n      pop\n        /* \"#utility.yul\":6264:6268   */\n      0x80\n        /* \"#utility.yul\":6257:6262   */\n      dup3\n        /* \"#utility.yul\":6253:6269   */\n      add\n        /* \"#utility.yul\":6247:6270   */\n      mload\n        /* \"#utility.yul\":6283:6346   */\n      tag_155\n        /* \"#utility.yul\":6340:6344   */\n      0x80\n        /* \"#utility.yul\":6335:6338   */\n      dup6\n        /* \"#utility.yul\":6331:6345   */\n      add\n        /* \"#utility.yul\":6317:6329   */\n      dup3\n        /* \"#utility.yul\":6283:6346   */\n      tag_75\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":6179:6356   */\n      pop\n        /* \"#utility.yul\":5429:6363   */\n      pop\n        /* \"#utility.yul\":5275:6363   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6369:6768   */\n    tag_45:\n        /* \"#utility.yul\":6550:6554   */\n      0x00\n        /* \"#utility.yul\":6588:6591   */\n      0xa0\n        /* \"#utility.yul\":6577:6586   */\n      dup3\n        /* \"#utility.yul\":6573:6592   */\n      add\n        /* \"#utility.yul\":6565:6592   */\n      swap1\n      pop\n        /* \"#utility.yul\":6602:6761   */\n      tag_157\n        /* \"#utility.yul\":6758:6759   */\n      0x00\n        /* \"#utility.yul\":6747:6756   */\n      dup4\n        /* \"#utility.yul\":6743:6760   */\n      add\n        /* \"#utility.yul\":6734:6740   */\n      dup5\n        /* \"#utility.yul\":6602:6761   */\n      tag_76\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":6369:6768   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6774:6917   */\n    tag_77:\n        /* \"#utility.yul\":6831:6836   */\n      0x00\n        /* \"#utility.yul\":6862:6868   */\n      dup2\n        /* \"#utility.yul\":6856:6869   */\n      mload\n        /* \"#utility.yul\":6847:6869   */\n      swap1\n      pop\n        /* \"#utility.yul\":6878:6911   */\n      tag_159\n        /* \"#utility.yul\":6905:6910   */\n      dup2\n        /* \"#utility.yul\":6878:6911   */\n      tag_66\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":6774:6917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6923:7045   */\n    tag_78:\n        /* \"#utility.yul\":6996:7020   */\n      tag_161\n        /* \"#utility.yul\":7014:7019   */\n      dup2\n        /* \"#utility.yul\":6996:7020   */\n      tag_52\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":6989:6994   */\n      dup2\n        /* \"#utility.yul\":6986:7021   */\n      eq\n        /* \"#utility.yul\":6976:7039   */\n      tag_162\n      jumpi\n        /* \"#utility.yul\":7035:7036   */\n      0x00\n        /* \"#utility.yul\":7032:7033   */\n      dup1\n        /* \"#utility.yul\":7025:7037   */\n      revert\n        /* \"#utility.yul\":6976:7039   */\n    tag_162:\n        /* \"#utility.yul\":6923:7045   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7051:7194   */\n    tag_79:\n        /* \"#utility.yul\":7108:7113   */\n      0x00\n        /* \"#utility.yul\":7139:7145   */\n      dup2\n        /* \"#utility.yul\":7133:7146   */\n      mload\n        /* \"#utility.yul\":7124:7146   */\n      swap1\n      pop\n        /* \"#utility.yul\":7155:7188   */\n      tag_164\n        /* \"#utility.yul\":7182:7187   */\n      dup2\n        /* \"#utility.yul\":7155:7188   */\n      tag_78\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":7051:7194   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7200:7293   */\n    tag_80:\n        /* \"#utility.yul\":7236:7243   */\n      0x00\n        /* \"#utility.yul\":7276:7286   */\n      0xffffffff\n        /* \"#utility.yul\":7269:7274   */\n      dup3\n        /* \"#utility.yul\":7265:7287   */\n      and\n        /* \"#utility.yul\":7254:7287   */\n      swap1\n      pop\n        /* \"#utility.yul\":7200:7293   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7299:7419   */\n    tag_81:\n        /* \"#utility.yul\":7371:7394   */\n      tag_167\n        /* \"#utility.yul\":7388:7393   */\n      dup2\n        /* \"#utility.yul\":7371:7394   */\n      tag_80\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":7364:7369   */\n      dup2\n        /* \"#utility.yul\":7361:7395   */\n      eq\n        /* \"#utility.yul\":7351:7413   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":7409:7410   */\n      0x00\n        /* \"#utility.yul\":7406:7407   */\n      dup1\n        /* \"#utility.yul\":7399:7411   */\n      revert\n        /* \"#utility.yul\":7351:7413   */\n    tag_168:\n        /* \"#utility.yul\":7299:7419   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7425:7566   */\n    tag_82:\n        /* \"#utility.yul\":7481:7486   */\n      0x00\n        /* \"#utility.yul\":7512:7518   */\n      dup2\n        /* \"#utility.yul\":7506:7519   */\n      mload\n        /* \"#utility.yul\":7497:7519   */\n      swap1\n      pop\n        /* \"#utility.yul\":7528:7560   */\n      tag_170\n        /* \"#utility.yul\":7554:7559   */\n      dup2\n        /* \"#utility.yul\":7528:7560   */\n      tag_81\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":7425:7566   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7572:8390   */\n    tag_49:\n        /* \"#utility.yul\":7668:7674   */\n      0x00\n        /* \"#utility.yul\":7676:7682   */\n      dup1\n        /* \"#utility.yul\":7684:7690   */\n      0x00\n        /* \"#utility.yul\":7692:7698   */\n      dup1\n        /* \"#utility.yul\":7741:7744   */\n      0x80\n        /* \"#utility.yul\":7729:7738   */\n      dup6\n        /* \"#utility.yul\":7720:7727   */\n      dup8\n        /* \"#utility.yul\":7716:7739   */\n      sub\n        /* \"#utility.yul\":7712:7745   */\n      slt\n        /* \"#utility.yul\":7709:7829   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":7748:7827   */\n      tag_173\n      tag_61\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":7709:7829   */\n    tag_172:\n        /* \"#utility.yul\":7868:7869   */\n      0x00\n        /* \"#utility.yul\":7893:7957   */\n      tag_174\n        /* \"#utility.yul\":7949:7956   */\n      dup8\n        /* \"#utility.yul\":7940:7946   */\n      dup3\n        /* \"#utility.yul\":7929:7938   */\n      dup9\n        /* \"#utility.yul\":7925:7947   */\n      add\n        /* \"#utility.yul\":7893:7957   */\n      tag_77\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":7883:7957   */\n      swap5\n      pop\n        /* \"#utility.yul\":7839:7967   */\n      pop\n        /* \"#utility.yul\":8006:8008   */\n      0x20\n        /* \"#utility.yul\":8032:8096   */\n      tag_175\n        /* \"#utility.yul\":8088:8095   */\n      dup8\n        /* \"#utility.yul\":8079:8085   */\n      dup3\n        /* \"#utility.yul\":8068:8077   */\n      dup9\n        /* \"#utility.yul\":8064:8086   */\n      add\n        /* \"#utility.yul\":8032:8096   */\n      tag_79\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":8022:8096   */\n      swap4\n      pop\n        /* \"#utility.yul\":7977:8106   */\n      pop\n        /* \"#utility.yul\":8145:8147   */\n      0x40\n        /* \"#utility.yul\":8171:8234   */\n      tag_176\n        /* \"#utility.yul\":8226:8233   */\n      dup8\n        /* \"#utility.yul\":8217:8223   */\n      dup3\n        /* \"#utility.yul\":8206:8215   */\n      dup9\n        /* \"#utility.yul\":8202:8224   */\n      add\n        /* \"#utility.yul\":8171:8234   */\n      tag_82\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":8161:8234   */\n      swap3\n      pop\n        /* \"#utility.yul\":8116:8244   */\n      pop\n        /* \"#utility.yul\":8283:8285   */\n      0x60\n        /* \"#utility.yul\":8309:8373   */\n      tag_177\n        /* \"#utility.yul\":8365:8372   */\n      dup8\n        /* \"#utility.yul\":8356:8362   */\n      dup3\n        /* \"#utility.yul\":8345:8354   */\n      dup9\n        /* \"#utility.yul\":8341:8363   */\n      add\n        /* \"#utility.yul\":8309:8373   */\n      tag_77\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":8299:8373   */\n      swap2\n      pop\n        /* \"#utility.yul\":8254:8383   */\n      pop\n        /* \"#utility.yul\":7572:8390   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207b391b728565f95847472bc7e67133cf6a3d7572d1c8f0f448d358dacfa164f664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_519": {
									"entryPoint": null,
									"id": 519,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IQuoterV2_$184_fromMemory": {
									"entryPoint": 471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_ISwapRouter_$284_fromMemory": {
									"entryPoint": 412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ISwapRouter_$284t_contract$_IQuoterV2_$184t_addresst_addresst_address_fromMemory": {
									"entryPoint": 533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IQuoterV2_$184": {
									"entryPoint": 432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ISwapRouter_$284": {
									"entryPoint": 373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 321,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IQuoterV2_$184": {
									"entryPoint": 449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ISwapRouter_$284": {
									"entryPoint": 390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2835:6",
										"nodeType": "YulBlock",
										"src": "0:2835:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "632:51:6",
													"nodeType": "YulBlock",
													"src": "632:51:6",
													"statements": [
														{
															"nativeSrc": "642:35:6",
															"nodeType": "YulAssignment",
															"src": "642:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "671:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "671:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "653:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "653:17:6"
																},
																"nativeSrc": "653:24:6",
																"nodeType": "YulFunctionCall",
																"src": "653:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "642:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "642:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ISwapRouter_$284",
												"nativeSrc": "568:115:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "614:5:6",
														"nodeType": "YulTypedName",
														"src": "614:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "624:7:6",
														"nodeType": "YulTypedName",
														"src": "624:7:6",
														"type": ""
													}
												],
												"src": "568:115:6"
											},
											{
												"body": {
													"nativeSrc": "751:98:6",
													"nodeType": "YulBlock",
													"src": "751:98:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "827:16:6",
																"nodeType": "YulBlock",
																"src": "827:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:6",
																					"nodeType": "YulLiteral",
																					"src": "836:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:1:6",
																					"nodeType": "YulLiteral",
																					"src": "839:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "829:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "829:6:6"
																			},
																			"nativeSrc": "829:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "829:12:6"
																		},
																		"nativeSrc": "829:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "829:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "774:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "774:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "818:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "818:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ISwapRouter_$284",
																					"nativeSrc": "781:36:6",
																					"nodeType": "YulIdentifier",
																					"src": "781:36:6"
																				},
																				"nativeSrc": "781:43:6",
																				"nodeType": "YulFunctionCall",
																				"src": "781:43:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "771:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "771:2:6"
																		},
																		"nativeSrc": "771:54:6",
																		"nodeType": "YulFunctionCall",
																		"src": "771:54:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "764:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "764:6:6"
																},
																"nativeSrc": "764:62:6",
																"nodeType": "YulFunctionCall",
																"src": "764:62:6"
															},
															"nativeSrc": "761:82:6",
															"nodeType": "YulIf",
															"src": "761:82:6"
														}
													]
												},
												"name": "validator_revert_t_contract$_ISwapRouter_$284",
												"nativeSrc": "689:160:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "744:5:6",
														"nodeType": "YulTypedName",
														"src": "744:5:6",
														"type": ""
													}
												],
												"src": "689:160:6"
											},
											{
												"body": {
													"nativeSrc": "937:99:6",
													"nodeType": "YulBlock",
													"src": "937:99:6",
													"statements": [
														{
															"nativeSrc": "947:22:6",
															"nodeType": "YulAssignment",
															"src": "947:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "962:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "956:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "956:5:6"
																},
																"nativeSrc": "956:13:6",
																"nodeType": "YulFunctionCall",
																"src": "956:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "947:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "947:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ISwapRouter_$284",
																	"nativeSrc": "978:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "978:45:6"
																},
																"nativeSrc": "978:52:6",
																"nodeType": "YulFunctionCall",
																"src": "978:52:6"
															},
															"nativeSrc": "978:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "978:52:6"
														}
													]
												},
												"name": "abi_decode_t_contract$_ISwapRouter_$284_fromMemory",
												"nativeSrc": "855:181:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "915:6:6",
														"nodeType": "YulTypedName",
														"src": "915:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "923:3:6",
														"nodeType": "YulTypedName",
														"src": "923:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "931:5:6",
														"nodeType": "YulTypedName",
														"src": "931:5:6",
														"type": ""
													}
												],
												"src": "855:181:6"
											},
											{
												"body": {
													"nativeSrc": "1104:51:6",
													"nodeType": "YulBlock",
													"src": "1104:51:6",
													"statements": [
														{
															"nativeSrc": "1114:35:6",
															"nodeType": "YulAssignment",
															"src": "1114:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1143:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1143:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "1125:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1125:17:6"
																},
																"nativeSrc": "1125:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1125:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1114:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1114:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IQuoterV2_$184",
												"nativeSrc": "1042:113:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1086:5:6",
														"nodeType": "YulTypedName",
														"src": "1086:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1096:7:6",
														"nodeType": "YulTypedName",
														"src": "1096:7:6",
														"type": ""
													}
												],
												"src": "1042:113:6"
											},
											{
												"body": {
													"nativeSrc": "1221:96:6",
													"nodeType": "YulBlock",
													"src": "1221:96:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1295:16:6",
																"nodeType": "YulBlock",
																"src": "1295:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1304:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1304:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1307:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1307:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1297:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1297:6:6"
																			},
																			"nativeSrc": "1297:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1297:12:6"
																		},
																		"nativeSrc": "1297:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1297:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1244:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1244:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1286:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1286:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IQuoterV2_$184",
																					"nativeSrc": "1251:34:6",
																					"nodeType": "YulIdentifier",
																					"src": "1251:34:6"
																				},
																				"nativeSrc": "1251:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1251:41:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1241:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1241:2:6"
																		},
																		"nativeSrc": "1241:52:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1241:52:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1234:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1234:6:6"
																},
																"nativeSrc": "1234:60:6",
																"nodeType": "YulFunctionCall",
																"src": "1234:60:6"
															},
															"nativeSrc": "1231:80:6",
															"nodeType": "YulIf",
															"src": "1231:80:6"
														}
													]
												},
												"name": "validator_revert_t_contract$_IQuoterV2_$184",
												"nativeSrc": "1161:156:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1214:5:6",
														"nodeType": "YulTypedName",
														"src": "1214:5:6",
														"type": ""
													}
												],
												"src": "1161:156:6"
											},
											{
												"body": {
													"nativeSrc": "1403:97:6",
													"nodeType": "YulBlock",
													"src": "1403:97:6",
													"statements": [
														{
															"nativeSrc": "1413:22:6",
															"nodeType": "YulAssignment",
															"src": "1413:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1428:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1428:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1422:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1422:5:6"
																},
																"nativeSrc": "1422:13:6",
																"nodeType": "YulFunctionCall",
																"src": "1422:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1413:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1413:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1488:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1488:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IQuoterV2_$184",
																	"nativeSrc": "1444:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1444:43:6"
																},
																"nativeSrc": "1444:50:6",
																"nodeType": "YulFunctionCall",
																"src": "1444:50:6"
															},
															"nativeSrc": "1444:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "1444:50:6"
														}
													]
												},
												"name": "abi_decode_t_contract$_IQuoterV2_$184_fromMemory",
												"nativeSrc": "1323:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1381:6:6",
														"nodeType": "YulTypedName",
														"src": "1381:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1389:3:6",
														"nodeType": "YulTypedName",
														"src": "1389:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1397:5:6",
														"nodeType": "YulTypedName",
														"src": "1397:5:6",
														"type": ""
													}
												],
												"src": "1323:177:6"
											},
											{
												"body": {
													"nativeSrc": "1549:79:6",
													"nodeType": "YulBlock",
													"src": "1549:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1606:16:6",
																"nodeType": "YulBlock",
																"src": "1606:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1615:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1615:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1618:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1618:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1608:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1608:6:6"
																			},
																			"nativeSrc": "1608:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1608:12:6"
																		},
																		"nativeSrc": "1608:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1608:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1572:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1572:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1597:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1597:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1579:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1579:17:6"
																				},
																				"nativeSrc": "1579:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1579:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1569:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1569:2:6"
																		},
																		"nativeSrc": "1569:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1569:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1562:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1562:6:6"
																},
																"nativeSrc": "1562:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1562:43:6"
															},
															"nativeSrc": "1559:63:6",
															"nodeType": "YulIf",
															"src": "1559:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1506:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1542:5:6",
														"nodeType": "YulTypedName",
														"src": "1542:5:6",
														"type": ""
													}
												],
												"src": "1506:122:6"
											},
											{
												"body": {
													"nativeSrc": "1697:80:6",
													"nodeType": "YulBlock",
													"src": "1697:80:6",
													"statements": [
														{
															"nativeSrc": "1707:22:6",
															"nodeType": "YulAssignment",
															"src": "1707:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1722:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1722:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1716:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1716:5:6"
																},
																"nativeSrc": "1716:13:6",
																"nodeType": "YulFunctionCall",
																"src": "1716:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1707:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1707:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1765:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1765:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1738:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1738:26:6"
																},
																"nativeSrc": "1738:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1738:33:6"
															},
															"nativeSrc": "1738:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1738:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1634:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1675:6:6",
														"nodeType": "YulTypedName",
														"src": "1675:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1683:3:6",
														"nodeType": "YulTypedName",
														"src": "1683:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1691:5:6",
														"nodeType": "YulTypedName",
														"src": "1691:5:6",
														"type": ""
													}
												],
												"src": "1634:143:6"
											},
											{
												"body": {
													"nativeSrc": "1964:868:6",
													"nodeType": "YulBlock",
													"src": "1964:868:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2011:83:6",
																"nodeType": "YulBlock",
																"src": "2011:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2013:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2013:77:6"
																			},
																			"nativeSrc": "2013:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2013:79:6"
																		},
																		"nativeSrc": "2013:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2013:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1985:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1985:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1994:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1994:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1981:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1981:3:6"
																		},
																		"nativeSrc": "1981:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1981:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2006:3:6",
																		"nodeType": "YulLiteral",
																		"src": "2006:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1977:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1977:3:6"
																},
																"nativeSrc": "1977:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1977:33:6"
															},
															"nativeSrc": "1974:120:6",
															"nodeType": "YulIf",
															"src": "1974:120:6"
														},
														{
															"nativeSrc": "2104:147:6",
															"nodeType": "YulBlock",
															"src": "2104:147:6",
															"statements": [
																{
																	"nativeSrc": "2119:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2119:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2133:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2133:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2123:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2123:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2148:93:6",
																	"nodeType": "YulAssignment",
																	"src": "2148:93:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2213:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2213:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2224:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2224:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2209:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2209:3:6"
																				},
																				"nativeSrc": "2209:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2209:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2233:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2233:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ISwapRouter_$284_fromMemory",
																			"nativeSrc": "2158:50:6",
																			"nodeType": "YulIdentifier",
																			"src": "2158:50:6"
																		},
																		"nativeSrc": "2158:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2158:83:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2148:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2148:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2261:146:6",
															"nodeType": "YulBlock",
															"src": "2261:146:6",
															"statements": [
																{
																	"nativeSrc": "2276:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2276:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2290:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2290:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2280:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2280:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2306:91:6",
																	"nodeType": "YulAssignment",
																	"src": "2306:91:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2369:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2369:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2380:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2380:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2365:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2365:3:6"
																				},
																				"nativeSrc": "2365:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2365:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2389:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2389:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IQuoterV2_$184_fromMemory",
																			"nativeSrc": "2316:48:6",
																			"nodeType": "YulIdentifier",
																			"src": "2316:48:6"
																		},
																		"nativeSrc": "2316:81:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2316:81:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2306:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2306:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2417:129:6",
															"nodeType": "YulBlock",
															"src": "2417:129:6",
															"statements": [
																{
																	"nativeSrc": "2432:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2432:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2446:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2446:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2436:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2436:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2462:74:6",
																	"nodeType": "YulAssignment",
																	"src": "2462:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2508:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2508:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2519:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2519:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2504:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2504:3:6"
																				},
																				"nativeSrc": "2504:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2504:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2528:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2528:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "2472:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "2472:31:6"
																		},
																		"nativeSrc": "2472:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2472:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2462:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2462:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2556:129:6",
															"nodeType": "YulBlock",
															"src": "2556:129:6",
															"statements": [
																{
																	"nativeSrc": "2571:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2571:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2585:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2575:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2575:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2601:74:6",
																	"nodeType": "YulAssignment",
																	"src": "2601:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2647:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2647:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2658:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2658:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2643:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2643:3:6"
																				},
																				"nativeSrc": "2643:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2643:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2667:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2667:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "2611:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "2611:31:6"
																		},
																		"nativeSrc": "2611:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2611:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "2601:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2601:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2695:130:6",
															"nodeType": "YulBlock",
															"src": "2695:130:6",
															"statements": [
																{
																	"nativeSrc": "2710:17:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2710:17:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2724:3:6",
																		"nodeType": "YulLiteral",
																		"src": "2724:3:6",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2714:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2714:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2741:74:6",
																	"nodeType": "YulAssignment",
																	"src": "2741:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2787:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2787:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2798:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2798:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2783:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2783:3:6"
																				},
																				"nativeSrc": "2783:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2783:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2807:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2807:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "2751:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "2751:31:6"
																		},
																		"nativeSrc": "2751:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2751:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2741:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2741:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ISwapRouter_$284t_contract$_IQuoterV2_$184t_addresst_addresst_address_fromMemory",
												"nativeSrc": "1783:1049:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1902:9:6",
														"nodeType": "YulTypedName",
														"src": "1902:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1913:7:6",
														"nodeType": "YulTypedName",
														"src": "1913:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1925:6:6",
														"nodeType": "YulTypedName",
														"src": "1925:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1933:6:6",
														"nodeType": "YulTypedName",
														"src": "1933:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1941:6:6",
														"nodeType": "YulTypedName",
														"src": "1941:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1949:6:6",
														"nodeType": "YulTypedName",
														"src": "1949:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1957:6:6",
														"nodeType": "YulTypedName",
														"src": "1957:6:6",
														"type": ""
													}
												],
												"src": "1783:1049:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ISwapRouter_$284(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ISwapRouter_$284(value) {\n        if iszero(eq(value, cleanup_t_contract$_ISwapRouter_$284(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ISwapRouter_$284_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ISwapRouter_$284(value)\n    }\n\n    function cleanup_t_contract$_IQuoterV2_$184(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IQuoterV2_$184(value) {\n        if iszero(eq(value, cleanup_t_contract$_IQuoterV2_$184(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IQuoterV2_$184_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IQuoterV2_$184(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ISwapRouter_$284t_contract$_IQuoterV2_$184t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ISwapRouter_$284_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IQuoterV2_$184_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "610120604052348015610010575f80fd5b50604051610a4e380380610a4e83398181016040528101906100329190610215565b8473ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508273ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660e08173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff166101008173ffffffffffffffffffffffffffffffffffffffff1681525050505050505061028c565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61016e82610145565b9050919050565b5f61017f82610164565b9050919050565b61018f81610175565b8114610199575f80fd5b50565b5f815190506101aa81610186565b92915050565b5f6101ba82610164565b9050919050565b6101ca816101b0565b81146101d4575f80fd5b50565b5f815190506101e5816101c1565b92915050565b6101f481610164565b81146101fe575f80fd5b50565b5f8151905061020f816101eb565b92915050565b5f805f805f60a0868803121561022e5761022d610141565b5b5f61023b8882890161019c565b955050602061024c888289016101d7565b945050604061025d88828901610201565b935050606061026e88828901610201565b925050608061027f88828901610201565b9150509295509295909350565b60805160a05160c05160e0516101005161077e6102d05f395f61019501525f6101f501525f61033b01525f818161028e015261035f01525f6101d1015261077e5ff3fe608060405234801561000f575f80fd5b5060043610610086575f3560e01c8063c54e44eb11610059578063c54e44eb14610102578063ccbfc16c14610120578063e0bab4c414610151578063e20dccb21461016f57610086565b8063089fe6aa1461008a57806389a30271146100a8578063ad5c4648146100c6578063c31c9c07146100e4575b5f80fd5b61009261018d565b60405161009f919061039e565b60405180910390f35b6100b0610193565b6040516100bd91906103f6565b60405180910390f35b6100ce6101b7565b6040516100db91906103f6565b60405180910390f35b6100ec6101cf565b6040516100f9919061046a565b60405180910390f35b61010a6101f3565b60405161011791906103f6565b60405180910390f35b61013a600480360381019061013591906104e4565b610217565b604051610148929190610552565b60405180910390f35b610159610339565b60405161016691906103f6565b60405180910390f35b61017761035d565b6040516101849190610599565b60405180910390f35b610bb881565b7f000000000000000000000000000000000000000000000000000000000000000081565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f805f6040518060a001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff168152602001858152602001610bb862ffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c6a5026a826040518263ffffffff1660e01b81526004016102e59190610654565b6080604051808303815f875af1158015610301573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061032591906106e4565b905050809350819450505050935093915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f62ffffff82169050919050565b61039881610381565b82525050565b5f6020820190506103b15f83018461038f565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103e0826103b7565b9050919050565b6103f0816103d6565b82525050565b5f6020820190506104095f8301846103e7565b92915050565b5f819050919050565b5f61043261042d610428846103b7565b61040f565b6103b7565b9050919050565b5f61044382610418565b9050919050565b5f61045482610439565b9050919050565b6104648161044a565b82525050565b5f60208201905061047d5f83018461045b565b92915050565b5f80fd5b610490816103d6565b811461049a575f80fd5b50565b5f813590506104ab81610487565b92915050565b5f819050919050565b6104c3816104b1565b81146104cd575f80fd5b50565b5f813590506104de816104ba565b92915050565b5f805f606084860312156104fb576104fa610483565b5b5f6105088682870161049d565b93505060206105198682870161049d565b925050604061052a868287016104d0565b9150509250925092565b61053d816104b1565b82525050565b61054c816103b7565b82525050565b5f6040820190506105655f830185610534565b6105726020830184610543565b9392505050565b5f61058382610439565b9050919050565b61059381610579565b82525050565b5f6020820190506105ac5f83018461058a565b92915050565b6105bb816103d6565b82525050565b6105ca816104b1565b82525050565b6105d981610381565b82525050565b6105e8816103b7565b82525050565b60a082015f8201516106025f8501826105b2565b50602082015161061560208501826105b2565b50604082015161062860408501826105c1565b50606082015161063b60608501826105d0565b50608082015161064e60808501826105df565b50505050565b5f60a0820190506106675f8301846105ee565b92915050565b5f8151905061067b816104ba565b92915050565b61068a816103b7565b8114610694575f80fd5b50565b5f815190506106a581610681565b92915050565b5f63ffffffff82169050919050565b6106c3816106ab565b81146106cd575f80fd5b50565b5f815190506106de816106ba565b92915050565b5f805f80608085870312156106fc576106fb610483565b5b5f6107098782880161066d565b945050602061071a87828801610697565b935050604061072b878288016106d0565b925050606061073c8782880161066d565b9150509295919450925056fea26469706673582212207b391b728565f95847472bc7e67133cf6a3d7572d1c8f0f448d358dacfa164f664736f6c634300081a0033",
							"opcodes": "PUSH2 0x120 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA4E CODESIZE SUB DUP1 PUSH2 0xA4E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x215 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x100 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP POP POP PUSH2 0x28C JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16E DUP3 PUSH2 0x145 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17F DUP3 PUSH2 0x164 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F DUP2 PUSH2 0x175 JUMP JUMPDEST DUP2 EQ PUSH2 0x199 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AA DUP2 PUSH2 0x186 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BA DUP3 PUSH2 0x164 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CA DUP2 PUSH2 0x1B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E5 DUP2 PUSH2 0x1C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F4 DUP2 PUSH2 0x164 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x20F DUP2 PUSH2 0x1EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x22E JUMPI PUSH2 0x22D PUSH2 0x141 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23B DUP9 DUP3 DUP10 ADD PUSH2 0x19C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x24C DUP9 DUP3 DUP10 ADD PUSH2 0x1D7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x25D DUP9 DUP3 DUP10 ADD PUSH2 0x201 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x26E DUP9 DUP3 DUP10 ADD PUSH2 0x201 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x27F DUP9 DUP3 DUP10 ADD PUSH2 0x201 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x77E PUSH2 0x2D0 PUSH0 CODECOPY PUSH0 PUSH2 0x195 ADD MSTORE PUSH0 PUSH2 0x1F5 ADD MSTORE PUSH0 PUSH2 0x33B ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x28E ADD MSTORE PUSH2 0x35F ADD MSTORE PUSH0 PUSH2 0x1D1 ADD MSTORE PUSH2 0x77E PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC54E44EB GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC54E44EB EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xCCBFC16C EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xE0BAB4C4 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xE20DCCB2 EQ PUSH2 0x16F JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x89FE6AA EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0xE4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x92 PUSH2 0x18D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB0 PUSH2 0x193 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCE PUSH2 0x1B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDB SWAP2 SWAP1 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH2 0x1CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x46A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10A PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x4E4 JUMP JUMPDEST PUSH2 0x217 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP3 SWAP2 SWAP1 PUSH2 0x552 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x35D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x599 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC6A5026A DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x654 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x301 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x6E4 JUMP JUMPDEST SWAP1 POP POP DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x398 DUP2 PUSH2 0x381 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B1 PUSH0 DUP4 ADD DUP5 PUSH2 0x38F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3E0 DUP3 PUSH2 0x3B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F0 DUP2 PUSH2 0x3D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x409 PUSH0 DUP4 ADD DUP5 PUSH2 0x3E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x432 PUSH2 0x42D PUSH2 0x428 DUP5 PUSH2 0x3B7 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST PUSH2 0x3B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x443 DUP3 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x454 DUP3 PUSH2 0x439 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x464 DUP2 PUSH2 0x44A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x47D PUSH0 DUP4 ADD DUP5 PUSH2 0x45B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x490 DUP2 PUSH2 0x3D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x49A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4AB DUP2 PUSH2 0x487 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C3 DUP2 PUSH2 0x4B1 JUMP JUMPDEST DUP2 EQ PUSH2 0x4CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4DE DUP2 PUSH2 0x4BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4FB JUMPI PUSH2 0x4FA PUSH2 0x483 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x508 DUP7 DUP3 DUP8 ADD PUSH2 0x49D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x519 DUP7 DUP3 DUP8 ADD PUSH2 0x49D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x52A DUP7 DUP3 DUP8 ADD PUSH2 0x4D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x53D DUP2 PUSH2 0x4B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x54C DUP2 PUSH2 0x3B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x565 PUSH0 DUP4 ADD DUP6 PUSH2 0x534 JUMP JUMPDEST PUSH2 0x572 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x543 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x583 DUP3 PUSH2 0x439 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x593 DUP2 PUSH2 0x579 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5AC PUSH0 DUP4 ADD DUP5 PUSH2 0x58A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5BB DUP2 PUSH2 0x3D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5CA DUP2 PUSH2 0x4B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5D9 DUP2 PUSH2 0x381 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5E8 DUP2 PUSH2 0x3B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x602 PUSH0 DUP6 ADD DUP3 PUSH2 0x5B2 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x615 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x5B2 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x628 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x5C1 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x63B PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x5D0 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x64E PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x5DF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x667 PUSH0 DUP4 ADD DUP5 PUSH2 0x5EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x67B DUP2 PUSH2 0x4BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x68A DUP2 PUSH2 0x3B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x694 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x6A5 DUP2 PUSH2 0x681 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6C3 DUP2 PUSH2 0x6AB JUMP JUMPDEST DUP2 EQ PUSH2 0x6CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x6DE DUP2 PUSH2 0x6BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6FC JUMPI PUSH2 0x6FB PUSH2 0x483 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x709 DUP8 DUP3 DUP9 ADD PUSH2 0x66D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x71A DUP8 DUP3 DUP9 ADD PUSH2 0x697 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x72B DUP8 DUP3 DUP9 ADD PUSH2 0x6D0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x73C DUP8 DUP3 DUP9 ADD PUSH2 0x66D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x391B728565F95847472BC7E67133CF6A3D7572D1C8F0F448D358DACF LOG1 PUSH5 0xF664736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "294:4187:5:-:0;;;722:295;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;900:11;887:24;;;;;;;;;;933:9;922:20;;;;;;;;;;959:4;953:10;;;;;;;;;;981:5;974:12;;;;;;;;;;1004:5;997:12;;;;;;;;;;722:295;;;;;294:4187;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:115::-;624:7;653:24;671:5;653:24;:::i;:::-;642:35;;568:115;;;:::o;689:160::-;781:43;818:5;781:43;:::i;:::-;774:5;771:54;761:82;;839:1;836;829:12;761:82;689:160;:::o;855:181::-;931:5;962:6;956:13;947:22;;978:52;1024:5;978:52;:::i;:::-;855:181;;;;:::o;1042:113::-;1096:7;1125:24;1143:5;1125:24;:::i;:::-;1114:35;;1042:113;;;:::o;1161:156::-;1251:41;1286:5;1251:41;:::i;:::-;1244:5;1241:52;1231:80;;1307:1;1304;1297:12;1231:80;1161:156;:::o;1323:177::-;1397:5;1428:6;1422:13;1413:22;;1444:50;1488:5;1444:50;:::i;:::-;1323:177;;;;:::o;1506:122::-;1579:24;1597:5;1579:24;:::i;:::-;1572:5;1569:35;1559:63;;1618:1;1615;1608:12;1559:63;1506:122;:::o;1634:143::-;1691:5;1722:6;1716:13;1707:22;;1738:33;1765:5;1738:33;:::i;:::-;1634:143;;;;:::o;1783:1049::-;1925:6;1933;1941;1949;1957;2006:3;1994:9;1985:7;1981:23;1977:33;1974:120;;;2013:79;;:::i;:::-;1974:120;2133:1;2158:83;2233:7;2224:6;2213:9;2209:22;2158:83;:::i;:::-;2148:93;;2104:147;2290:2;2316:81;2389:7;2380:6;2369:9;2365:22;2316:81;:::i;:::-;2306:91;;2261:146;2446:2;2472:64;2528:7;2519:6;2508:9;2504:22;2472:64;:::i;:::-;2462:74;;2417:129;2585:2;2611:64;2667:7;2658:6;2647:9;2643:22;2611:64;:::i;:::-;2601:74;;2556:129;2724:3;2751:64;2807:7;2798:6;2787:9;2783:22;2751:64;:::i;:::-;2741:74;;2695:130;1783:1049;;;;;;;;:::o;294:4187:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DAI_473": {
									"entryPoint": 825,
									"id": 473,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USDC_477": {
									"entryPoint": 403,
									"id": 477,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USDT_475": {
									"entryPoint": 499,
									"id": 475,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WETH_480": {
									"entryPoint": 439,
									"id": 480,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getAmountOutMinimum_556": {
									"entryPoint": 535,
									"id": 556,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@poolFee_483": {
									"entryPoint": 397,
									"id": 483,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@quoterV2_467": {
									"entryPoint": 861,
									"id": 467,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapRouter_464": {
									"entryPoint": 463,
									"id": 464,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint160_fromMemory": {
									"entryPoint": 1687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32_fromMemory": {
									"entryPoint": 1744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint160t_uint32t_uint256_fromMemory": {
									"entryPoint": 1764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IQuoterV2_$184_to_t_address_fromStack": {
									"entryPoint": 1418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ISwapRouter_$284_to_t_address_fromStack": {
									"entryPoint": 1115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr_to_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr_fromStack": {
									"entryPoint": 1518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160": {
									"entryPoint": 1503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160_fromStack": {
									"entryPoint": 1347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 1488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24_fromStack": {
									"entryPoint": 911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IQuoterV2_$184__to_t_address__fromStack_reversed": {
									"entryPoint": 1433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISwapRouter_$284__to_t_address__fromStack_reversed": {
									"entryPoint": 1130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr__to_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr__fromStack_reversed": {
									"entryPoint": 1620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed": {
									"entryPoint": 926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint160__to_t_uint256_t_uint160__fromStack_reversed": {
									"entryPoint": 1362,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 897,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 1707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IQuoterV2_$184_to_t_address": {
									"entryPoint": 1401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ISwapRouter_$284_to_t_address": {
									"entryPoint": 1098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1155,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint160": {
									"entryPoint": 1665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 1722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8393:6",
										"nodeType": "YulBlock",
										"src": "0:8393:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:47:6",
													"nodeType": "YulBlock",
													"src": "51:47:6",
													"statements": [
														{
															"nativeSrc": "61:31:6",
															"nodeType": "YulAssignment",
															"src": "61:31:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "76:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "83:8:6",
																		"nodeType": "YulLiteral",
																		"src": "83:8:6",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "72:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:6"
																},
																"nativeSrc": "72:20:6",
																"nodeType": "YulFunctionCall",
																"src": "72:20:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "7:91:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:6",
														"nodeType": "YulTypedName",
														"src": "33:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:6",
														"nodeType": "YulTypedName",
														"src": "43:7:6",
														"type": ""
													}
												],
												"src": "7:91:6"
											},
											{
												"body": {
													"nativeSrc": "167:52:6",
													"nodeType": "YulBlock",
													"src": "167:52:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "184:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "184:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "206:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "206:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "189:16:6",
																			"nodeType": "YulIdentifier",
																			"src": "189:16:6"
																		},
																		"nativeSrc": "189:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "189:23:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "177:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "177:6:6"
																},
																"nativeSrc": "177:36:6",
																"nodeType": "YulFunctionCall",
																"src": "177:36:6"
															},
															"nativeSrc": "177:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "177:36:6"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
												"nativeSrc": "104:115:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "155:5:6",
														"nodeType": "YulTypedName",
														"src": "155:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "162:3:6",
														"nodeType": "YulTypedName",
														"src": "162:3:6",
														"type": ""
													}
												],
												"src": "104:115:6"
											},
											{
												"body": {
													"nativeSrc": "321:122:6",
													"nodeType": "YulBlock",
													"src": "321:122:6",
													"statements": [
														{
															"nativeSrc": "331:26:6",
															"nodeType": "YulAssignment",
															"src": "331:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "343:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "343:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "354:2:6",
																		"nodeType": "YulLiteral",
																		"src": "354:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "339:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "339:3:6"
																},
																"nativeSrc": "339:18:6",
																"nodeType": "YulFunctionCall",
																"src": "339:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "331:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "331:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "409:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "409:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "422:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "422:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "433:1:6",
																				"nodeType": "YulLiteral",
																				"src": "433:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "418:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "418:3:6"
																		},
																		"nativeSrc": "418:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "418:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
																	"nativeSrc": "367:41:6",
																	"nodeType": "YulIdentifier",
																	"src": "367:41:6"
																},
																"nativeSrc": "367:69:6",
																"nodeType": "YulFunctionCall",
																"src": "367:69:6"
															},
															"nativeSrc": "367:69:6",
															"nodeType": "YulExpressionStatement",
															"src": "367:69:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed",
												"nativeSrc": "225:218:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "293:9:6",
														"nodeType": "YulTypedName",
														"src": "293:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "305:6:6",
														"nodeType": "YulTypedName",
														"src": "305:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "316:4:6",
														"nodeType": "YulTypedName",
														"src": "316:4:6",
														"type": ""
													}
												],
												"src": "225:218:6"
											},
											{
												"body": {
													"nativeSrc": "494:81:6",
													"nodeType": "YulBlock",
													"src": "494:81:6",
													"statements": [
														{
															"nativeSrc": "504:65:6",
															"nodeType": "YulAssignment",
															"src": "504:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "519:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "519:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "526:42:6",
																		"nodeType": "YulLiteral",
																		"src": "526:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "515:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "515:3:6"
																},
																"nativeSrc": "515:54:6",
																"nodeType": "YulFunctionCall",
																"src": "515:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "504:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "504:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "449:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "476:5:6",
														"nodeType": "YulTypedName",
														"src": "476:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "486:7:6",
														"nodeType": "YulTypedName",
														"src": "486:7:6",
														"type": ""
													}
												],
												"src": "449:126:6"
											},
											{
												"body": {
													"nativeSrc": "626:51:6",
													"nodeType": "YulBlock",
													"src": "626:51:6",
													"statements": [
														{
															"nativeSrc": "636:35:6",
															"nodeType": "YulAssignment",
															"src": "636:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "665:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "665:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "647:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "647:17:6"
																},
																"nativeSrc": "647:24:6",
																"nodeType": "YulFunctionCall",
																"src": "647:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "636:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "636:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "581:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "608:5:6",
														"nodeType": "YulTypedName",
														"src": "608:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "618:7:6",
														"nodeType": "YulTypedName",
														"src": "618:7:6",
														"type": ""
													}
												],
												"src": "581:96:6"
											},
											{
												"body": {
													"nativeSrc": "748:53:6",
													"nodeType": "YulBlock",
													"src": "748:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "765:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "765:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "788:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "788:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "770:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "770:17:6"
																		},
																		"nativeSrc": "770:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "770:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "758:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "758:6:6"
																},
																"nativeSrc": "758:37:6",
																"nodeType": "YulFunctionCall",
																"src": "758:37:6"
															},
															"nativeSrc": "758:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "758:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "683:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "736:5:6",
														"nodeType": "YulTypedName",
														"src": "736:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "743:3:6",
														"nodeType": "YulTypedName",
														"src": "743:3:6",
														"type": ""
													}
												],
												"src": "683:118:6"
											},
											{
												"body": {
													"nativeSrc": "905:124:6",
													"nodeType": "YulBlock",
													"src": "905:124:6",
													"statements": [
														{
															"nativeSrc": "915:26:6",
															"nodeType": "YulAssignment",
															"src": "915:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "927:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "927:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "938:2:6",
																		"nodeType": "YulLiteral",
																		"src": "938:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "923:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "923:3:6"
																},
																"nativeSrc": "923:18:6",
																"nodeType": "YulFunctionCall",
																"src": "923:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "915:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "915:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "995:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "995:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1008:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1008:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1019:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1019:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1004:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1004:3:6"
																		},
																		"nativeSrc": "1004:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1004:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "951:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "951:43:6"
																},
																"nativeSrc": "951:71:6",
																"nodeType": "YulFunctionCall",
																"src": "951:71:6"
															},
															"nativeSrc": "951:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "951:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "807:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:6",
														"nodeType": "YulTypedName",
														"src": "877:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "889:6:6",
														"nodeType": "YulTypedName",
														"src": "889:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "900:4:6",
														"nodeType": "YulTypedName",
														"src": "900:4:6",
														"type": ""
													}
												],
												"src": "807:222:6"
											},
											{
												"body": {
													"nativeSrc": "1067:28:6",
													"nodeType": "YulBlock",
													"src": "1067:28:6",
													"statements": [
														{
															"nativeSrc": "1077:12:6",
															"nodeType": "YulAssignment",
															"src": "1077:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "1084:5:6",
																"nodeType": "YulIdentifier",
																"src": "1084:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1077:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1077:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1035:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1053:5:6",
														"nodeType": "YulTypedName",
														"src": "1053:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1063:3:6",
														"nodeType": "YulTypedName",
														"src": "1063:3:6",
														"type": ""
													}
												],
												"src": "1035:60:6"
											},
											{
												"body": {
													"nativeSrc": "1161:82:6",
													"nodeType": "YulBlock",
													"src": "1161:82:6",
													"statements": [
														{
															"nativeSrc": "1171:66:6",
															"nodeType": "YulAssignment",
															"src": "1171:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1229:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1229:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1211:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1211:17:6"
																				},
																				"nativeSrc": "1211:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1211:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1202:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "1202:8:6"
																		},
																		"nativeSrc": "1202:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1202:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1184:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1184:17:6"
																},
																"nativeSrc": "1184:53:6",
																"nodeType": "YulFunctionCall",
																"src": "1184:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1171:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1171:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1101:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1141:5:6",
														"nodeType": "YulTypedName",
														"src": "1141:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1151:9:6",
														"nodeType": "YulTypedName",
														"src": "1151:9:6",
														"type": ""
													}
												],
												"src": "1101:142:6"
											},
											{
												"body": {
													"nativeSrc": "1309:66:6",
													"nodeType": "YulBlock",
													"src": "1309:66:6",
													"statements": [
														{
															"nativeSrc": "1319:50:6",
															"nodeType": "YulAssignment",
															"src": "1319:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1363:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1363:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1332:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "1332:30:6"
																},
																"nativeSrc": "1332:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1332:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1319:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1319:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1249:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1289:5:6",
														"nodeType": "YulTypedName",
														"src": "1289:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1299:9:6",
														"nodeType": "YulTypedName",
														"src": "1299:9:6",
														"type": ""
													}
												],
												"src": "1249:126:6"
											},
											{
												"body": {
													"nativeSrc": "1460:66:6",
													"nodeType": "YulBlock",
													"src": "1460:66:6",
													"statements": [
														{
															"nativeSrc": "1470:50:6",
															"nodeType": "YulAssignment",
															"src": "1470:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1514:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1514:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1483:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "1483:30:6"
																},
																"nativeSrc": "1483:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1483:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1470:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1470:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISwapRouter_$284_to_t_address",
												"nativeSrc": "1381:145:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1440:5:6",
														"nodeType": "YulTypedName",
														"src": "1440:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1450:9:6",
														"nodeType": "YulTypedName",
														"src": "1450:9:6",
														"type": ""
													}
												],
												"src": "1381:145:6"
											},
											{
												"body": {
													"nativeSrc": "1616:85:6",
													"nodeType": "YulBlock",
													"src": "1616:85:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1633:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1633:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1688:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1688:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ISwapRouter_$284_to_t_address",
																			"nativeSrc": "1638:49:6",
																			"nodeType": "YulIdentifier",
																			"src": "1638:49:6"
																		},
																		"nativeSrc": "1638:56:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1638:56:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1626:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1626:6:6"
																},
																"nativeSrc": "1626:69:6",
																"nodeType": "YulFunctionCall",
																"src": "1626:69:6"
															},
															"nativeSrc": "1626:69:6",
															"nodeType": "YulExpressionStatement",
															"src": "1626:69:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_ISwapRouter_$284_to_t_address_fromStack",
												"nativeSrc": "1532:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1604:5:6",
														"nodeType": "YulTypedName",
														"src": "1604:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1611:3:6",
														"nodeType": "YulTypedName",
														"src": "1611:3:6",
														"type": ""
													}
												],
												"src": "1532:169:6"
											},
											{
												"body": {
													"nativeSrc": "1824:143:6",
													"nodeType": "YulBlock",
													"src": "1824:143:6",
													"statements": [
														{
															"nativeSrc": "1834:26:6",
															"nodeType": "YulAssignment",
															"src": "1834:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1846:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1846:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1857:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1857:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1842:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1842:3:6"
																},
																"nativeSrc": "1842:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1842:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1834:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1834:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1933:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1933:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1946:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1946:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1957:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1957:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1942:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1942:3:6"
																		},
																		"nativeSrc": "1942:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1942:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ISwapRouter_$284_to_t_address_fromStack",
																	"nativeSrc": "1870:62:6",
																	"nodeType": "YulIdentifier",
																	"src": "1870:62:6"
																},
																"nativeSrc": "1870:90:6",
																"nodeType": "YulFunctionCall",
																"src": "1870:90:6"
															},
															"nativeSrc": "1870:90:6",
															"nodeType": "YulExpressionStatement",
															"src": "1870:90:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISwapRouter_$284__to_t_address__fromStack_reversed",
												"nativeSrc": "1707:260:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1796:9:6",
														"nodeType": "YulTypedName",
														"src": "1796:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1808:6:6",
														"nodeType": "YulTypedName",
														"src": "1808:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1819:4:6",
														"nodeType": "YulTypedName",
														"src": "1819:4:6",
														"type": ""
													}
												],
												"src": "1707:260:6"
											},
											{
												"body": {
													"nativeSrc": "2013:35:6",
													"nodeType": "YulBlock",
													"src": "2013:35:6",
													"statements": [
														{
															"nativeSrc": "2023:19:6",
															"nodeType": "YulAssignment",
															"src": "2023:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2039:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2039:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2033:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2033:5:6"
																},
																"nativeSrc": "2033:9:6",
																"nodeType": "YulFunctionCall",
																"src": "2033:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2023:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2023:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1973:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2006:6:6",
														"nodeType": "YulTypedName",
														"src": "2006:6:6",
														"type": ""
													}
												],
												"src": "1973:75:6"
											},
											{
												"body": {
													"nativeSrc": "2143:28:6",
													"nodeType": "YulBlock",
													"src": "2143:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2160:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2160:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2163:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2163:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2153:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2153:6:6"
																},
																"nativeSrc": "2153:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2153:12:6"
															},
															"nativeSrc": "2153:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "2153:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2054:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2054:117:6"
											},
											{
												"body": {
													"nativeSrc": "2266:28:6",
													"nodeType": "YulBlock",
													"src": "2266:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2283:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2283:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2286:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2286:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2276:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2276:6:6"
																},
																"nativeSrc": "2276:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2276:12:6"
															},
															"nativeSrc": "2276:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "2276:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2177:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2177:117:6"
											},
											{
												"body": {
													"nativeSrc": "2343:79:6",
													"nodeType": "YulBlock",
													"src": "2343:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2400:16:6",
																"nodeType": "YulBlock",
																"src": "2400:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2409:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2409:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2412:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2412:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2402:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2402:6:6"
																			},
																			"nativeSrc": "2402:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2402:12:6"
																		},
																		"nativeSrc": "2402:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2402:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2366:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2366:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2391:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2391:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2373:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2373:17:6"
																				},
																				"nativeSrc": "2373:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2373:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2363:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2363:2:6"
																		},
																		"nativeSrc": "2363:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2363:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2356:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2356:6:6"
																},
																"nativeSrc": "2356:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2356:43:6"
															},
															"nativeSrc": "2353:63:6",
															"nodeType": "YulIf",
															"src": "2353:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2300:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2336:5:6",
														"nodeType": "YulTypedName",
														"src": "2336:5:6",
														"type": ""
													}
												],
												"src": "2300:122:6"
											},
											{
												"body": {
													"nativeSrc": "2480:87:6",
													"nodeType": "YulBlock",
													"src": "2480:87:6",
													"statements": [
														{
															"nativeSrc": "2490:29:6",
															"nodeType": "YulAssignment",
															"src": "2490:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2512:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2512:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2499:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2499:12:6"
																},
																"nativeSrc": "2499:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2499:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2490:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2490:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2555:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2555:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2528:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2528:26:6"
																},
																"nativeSrc": "2528:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2528:33:6"
															},
															"nativeSrc": "2528:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2528:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2428:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2458:6:6",
														"nodeType": "YulTypedName",
														"src": "2458:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2466:3:6",
														"nodeType": "YulTypedName",
														"src": "2466:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2474:5:6",
														"nodeType": "YulTypedName",
														"src": "2474:5:6",
														"type": ""
													}
												],
												"src": "2428:139:6"
											},
											{
												"body": {
													"nativeSrc": "2618:32:6",
													"nodeType": "YulBlock",
													"src": "2618:32:6",
													"statements": [
														{
															"nativeSrc": "2628:16:6",
															"nodeType": "YulAssignment",
															"src": "2628:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2639:5:6",
																"nodeType": "YulIdentifier",
																"src": "2639:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2628:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2628:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2573:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2600:5:6",
														"nodeType": "YulTypedName",
														"src": "2600:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2610:7:6",
														"nodeType": "YulTypedName",
														"src": "2610:7:6",
														"type": ""
													}
												],
												"src": "2573:77:6"
											},
											{
												"body": {
													"nativeSrc": "2699:79:6",
													"nodeType": "YulBlock",
													"src": "2699:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2756:16:6",
																"nodeType": "YulBlock",
																"src": "2756:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2765:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2765:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2768:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2768:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2758:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2758:6:6"
																			},
																			"nativeSrc": "2758:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2758:12:6"
																		},
																		"nativeSrc": "2758:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2758:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2722:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2722:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2747:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2747:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2729:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2729:17:6"
																				},
																				"nativeSrc": "2729:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2719:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2719:2:6"
																		},
																		"nativeSrc": "2719:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2719:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2712:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2712:6:6"
																},
																"nativeSrc": "2712:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2712:43:6"
															},
															"nativeSrc": "2709:63:6",
															"nodeType": "YulIf",
															"src": "2709:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2656:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2692:5:6",
														"nodeType": "YulTypedName",
														"src": "2692:5:6",
														"type": ""
													}
												],
												"src": "2656:122:6"
											},
											{
												"body": {
													"nativeSrc": "2836:87:6",
													"nodeType": "YulBlock",
													"src": "2836:87:6",
													"statements": [
														{
															"nativeSrc": "2846:29:6",
															"nodeType": "YulAssignment",
															"src": "2846:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2868:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2868:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2855:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2855:12:6"
																},
																"nativeSrc": "2855:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2855:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2846:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2846:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2911:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2911:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2884:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2884:26:6"
																},
																"nativeSrc": "2884:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2884:33:6"
															},
															"nativeSrc": "2884:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2884:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2784:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2814:6:6",
														"nodeType": "YulTypedName",
														"src": "2814:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2822:3:6",
														"nodeType": "YulTypedName",
														"src": "2822:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2830:5:6",
														"nodeType": "YulTypedName",
														"src": "2830:5:6",
														"type": ""
													}
												],
												"src": "2784:139:6"
											},
											{
												"body": {
													"nativeSrc": "3029:519:6",
													"nodeType": "YulBlock",
													"src": "3029:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3075:83:6",
																"nodeType": "YulBlock",
																"src": "3075:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3077:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3077:77:6"
																			},
																			"nativeSrc": "3077:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3077:79:6"
																		},
																		"nativeSrc": "3077:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3077:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3050:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3050:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3059:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3059:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3046:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3046:3:6"
																		},
																		"nativeSrc": "3046:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3046:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3071:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3071:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3042:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3042:3:6"
																},
																"nativeSrc": "3042:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3042:32:6"
															},
															"nativeSrc": "3039:119:6",
															"nodeType": "YulIf",
															"src": "3039:119:6"
														},
														{
															"nativeSrc": "3168:117:6",
															"nodeType": "YulBlock",
															"src": "3168:117:6",
															"statements": [
																{
																	"nativeSrc": "3183:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3183:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3197:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3187:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3187:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3212:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3212:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3247:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3247:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3258:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3258:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3243:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3243:3:6"
																				},
																				"nativeSrc": "3243:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3243:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3267:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3267:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3222:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3222:20:6"
																		},
																		"nativeSrc": "3222:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3222:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3212:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3212:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3295:118:6",
															"nodeType": "YulBlock",
															"src": "3295:118:6",
															"statements": [
																{
																	"nativeSrc": "3310:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3310:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3324:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3314:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3314:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3340:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3340:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3375:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3375:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3386:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3386:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3371:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3371:3:6"
																				},
																				"nativeSrc": "3371:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3371:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3395:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3395:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3350:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3350:20:6"
																		},
																		"nativeSrc": "3350:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3350:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3340:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3340:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3423:118:6",
															"nodeType": "YulBlock",
															"src": "3423:118:6",
															"statements": [
																{
																	"nativeSrc": "3438:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3438:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3452:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3452:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3442:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3442:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3468:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3468:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3503:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3503:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3514:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3514:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3499:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3499:3:6"
																				},
																				"nativeSrc": "3499:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3499:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3523:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3523:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3478:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3478:20:6"
																		},
																		"nativeSrc": "3478:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3478:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3468:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3468:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2929:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2983:9:6",
														"nodeType": "YulTypedName",
														"src": "2983:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2994:7:6",
														"nodeType": "YulTypedName",
														"src": "2994:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3006:6:6",
														"nodeType": "YulTypedName",
														"src": "3006:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3014:6:6",
														"nodeType": "YulTypedName",
														"src": "3014:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3022:6:6",
														"nodeType": "YulTypedName",
														"src": "3022:6:6",
														"type": ""
													}
												],
												"src": "2929:619:6"
											},
											{
												"body": {
													"nativeSrc": "3619:53:6",
													"nodeType": "YulBlock",
													"src": "3619:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3636:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3636:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3659:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3659:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3641:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3641:17:6"
																		},
																		"nativeSrc": "3641:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3641:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3629:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3629:6:6"
																},
																"nativeSrc": "3629:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3629:37:6"
															},
															"nativeSrc": "3629:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3629:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3554:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3607:5:6",
														"nodeType": "YulTypedName",
														"src": "3607:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3614:3:6",
														"nodeType": "YulTypedName",
														"src": "3614:3:6",
														"type": ""
													}
												],
												"src": "3554:118:6"
											},
											{
												"body": {
													"nativeSrc": "3743:53:6",
													"nodeType": "YulBlock",
													"src": "3743:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3760:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "3765:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3765:17:6"
																		},
																		"nativeSrc": "3765:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:6"
																},
																"nativeSrc": "3753:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3753:37:6"
															},
															"nativeSrc": "3753:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3753:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160_fromStack",
												"nativeSrc": "3678:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3731:5:6",
														"nodeType": "YulTypedName",
														"src": "3731:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3738:3:6",
														"nodeType": "YulTypedName",
														"src": "3738:3:6",
														"type": ""
													}
												],
												"src": "3678:118:6"
											},
											{
												"body": {
													"nativeSrc": "3928:206:6",
													"nodeType": "YulBlock",
													"src": "3928:206:6",
													"statements": [
														{
															"nativeSrc": "3938:26:6",
															"nodeType": "YulAssignment",
															"src": "3938:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3950:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3950:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3961:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3961:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3946:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3946:3:6"
																},
																"nativeSrc": "3946:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3946:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3938:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3938:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4018:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4018:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4031:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4031:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4042:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4042:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4027:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4027:3:6"
																		},
																		"nativeSrc": "4027:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4027:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3974:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3974:43:6"
																},
																"nativeSrc": "3974:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3974:71:6"
															},
															"nativeSrc": "3974:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3974:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4099:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4099:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4112:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4112:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4123:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4123:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4108:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4108:3:6"
																		},
																		"nativeSrc": "4108:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4108:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint160_to_t_uint160_fromStack",
																	"nativeSrc": "4055:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4055:43:6"
																},
																"nativeSrc": "4055:72:6",
																"nodeType": "YulFunctionCall",
																"src": "4055:72:6"
															},
															"nativeSrc": "4055:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "4055:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint160__to_t_uint256_t_uint160__fromStack_reversed",
												"nativeSrc": "3802:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3892:9:6",
														"nodeType": "YulTypedName",
														"src": "3892:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3904:6:6",
														"nodeType": "YulTypedName",
														"src": "3904:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3912:6:6",
														"nodeType": "YulTypedName",
														"src": "3912:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3923:4:6",
														"nodeType": "YulTypedName",
														"src": "3923:4:6",
														"type": ""
													}
												],
												"src": "3802:332:6"
											},
											{
												"body": {
													"nativeSrc": "4217:66:6",
													"nodeType": "YulBlock",
													"src": "4217:66:6",
													"statements": [
														{
															"nativeSrc": "4227:50:6",
															"nodeType": "YulAssignment",
															"src": "4227:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4271:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4271:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4240:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "4240:30:6"
																},
																"nativeSrc": "4240:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4240:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4227:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4227:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IQuoterV2_$184_to_t_address",
												"nativeSrc": "4140:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4197:5:6",
														"nodeType": "YulTypedName",
														"src": "4197:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4207:9:6",
														"nodeType": "YulTypedName",
														"src": "4207:9:6",
														"type": ""
													}
												],
												"src": "4140:143:6"
											},
											{
												"body": {
													"nativeSrc": "4371:83:6",
													"nodeType": "YulBlock",
													"src": "4371:83:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4388:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4388:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4441:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4441:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IQuoterV2_$184_to_t_address",
																			"nativeSrc": "4393:47:6",
																			"nodeType": "YulIdentifier",
																			"src": "4393:47:6"
																		},
																		"nativeSrc": "4393:54:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4393:54:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4381:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4381:6:6"
																},
																"nativeSrc": "4381:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4381:67:6"
															},
															"nativeSrc": "4381:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "4381:67:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IQuoterV2_$184_to_t_address_fromStack",
												"nativeSrc": "4289:165:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4359:5:6",
														"nodeType": "YulTypedName",
														"src": "4359:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4366:3:6",
														"nodeType": "YulTypedName",
														"src": "4366:3:6",
														"type": ""
													}
												],
												"src": "4289:165:6"
											},
											{
												"body": {
													"nativeSrc": "4575:141:6",
													"nodeType": "YulBlock",
													"src": "4575:141:6",
													"statements": [
														{
															"nativeSrc": "4585:26:6",
															"nodeType": "YulAssignment",
															"src": "4585:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4597:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4597:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4608:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4608:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4593:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4593:3:6"
																},
																"nativeSrc": "4593:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4593:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4585:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4585:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4682:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4682:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4695:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4695:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4706:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4706:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4691:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4691:3:6"
																		},
																		"nativeSrc": "4691:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4691:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IQuoterV2_$184_to_t_address_fromStack",
																	"nativeSrc": "4621:60:6",
																	"nodeType": "YulIdentifier",
																	"src": "4621:60:6"
																},
																"nativeSrc": "4621:88:6",
																"nodeType": "YulFunctionCall",
																"src": "4621:88:6"
															},
															"nativeSrc": "4621:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "4621:88:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IQuoterV2_$184__to_t_address__fromStack_reversed",
												"nativeSrc": "4460:256:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4547:9:6",
														"nodeType": "YulTypedName",
														"src": "4547:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4559:6:6",
														"nodeType": "YulTypedName",
														"src": "4559:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4570:4:6",
														"nodeType": "YulTypedName",
														"src": "4570:4:6",
														"type": ""
													}
												],
												"src": "4460:256:6"
											},
											{
												"body": {
													"nativeSrc": "4777:53:6",
													"nodeType": "YulBlock",
													"src": "4777:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4794:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4794:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4817:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4817:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4799:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "4799:17:6"
																		},
																		"nativeSrc": "4799:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4799:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4787:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4787:6:6"
																},
																"nativeSrc": "4787:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4787:37:6"
															},
															"nativeSrc": "4787:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "4787:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "4722:108:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4765:5:6",
														"nodeType": "YulTypedName",
														"src": "4765:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4772:3:6",
														"nodeType": "YulTypedName",
														"src": "4772:3:6",
														"type": ""
													}
												],
												"src": "4722:108:6"
											},
											{
												"body": {
													"nativeSrc": "4891:53:6",
													"nodeType": "YulBlock",
													"src": "4891:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4908:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4908:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4931:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4931:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4913:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "4913:17:6"
																		},
																		"nativeSrc": "4913:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4913:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4901:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4901:6:6"
																},
																"nativeSrc": "4901:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4901:37:6"
															},
															"nativeSrc": "4901:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "4901:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "4836:108:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4879:5:6",
														"nodeType": "YulTypedName",
														"src": "4879:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4886:3:6",
														"nodeType": "YulTypedName",
														"src": "4886:3:6",
														"type": ""
													}
												],
												"src": "4836:108:6"
											},
											{
												"body": {
													"nativeSrc": "5003:52:6",
													"nodeType": "YulBlock",
													"src": "5003:52:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5020:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5020:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5042:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5042:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "5025:16:6",
																			"nodeType": "YulIdentifier",
																			"src": "5025:16:6"
																		},
																		"nativeSrc": "5025:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5025:23:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5013:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5013:6:6"
																},
																"nativeSrc": "5013:36:6",
																"nodeType": "YulFunctionCall",
																"src": "5013:36:6"
															},
															"nativeSrc": "5013:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "5013:36:6"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nativeSrc": "4950:105:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4991:5:6",
														"nodeType": "YulTypedName",
														"src": "4991:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4998:3:6",
														"nodeType": "YulTypedName",
														"src": "4998:3:6",
														"type": ""
													}
												],
												"src": "4950:105:6"
											},
											{
												"body": {
													"nativeSrc": "5116:53:6",
													"nodeType": "YulBlock",
													"src": "5116:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5133:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5133:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5156:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5156:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "5138:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "5138:17:6"
																		},
																		"nativeSrc": "5138:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5138:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5126:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5126:6:6"
																},
																"nativeSrc": "5126:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5126:37:6"
															},
															"nativeSrc": "5126:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "5126:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nativeSrc": "5061:108:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5104:5:6",
														"nodeType": "YulTypedName",
														"src": "5104:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5111:3:6",
														"nodeType": "YulTypedName",
														"src": "5111:3:6",
														"type": ""
													}
												],
												"src": "5061:108:6"
											},
											{
												"body": {
													"nativeSrc": "5429:934:6",
													"nodeType": "YulBlock",
													"src": "5429:934:6",
													"statements": [
														{
															"nativeSrc": "5439:26:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5439:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5455:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5455:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5460:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5460:4:6",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5451:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5451:3:6"
																},
																"nativeSrc": "5451:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5451:14:6"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "5443:4:6",
																	"nodeType": "YulTypedName",
																	"src": "5443:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5475:167:6",
															"nodeType": "YulBlock",
															"src": "5475:167:6",
															"statements": [
																{
																	"nativeSrc": "5513:43:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5513:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5543:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5543:5:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5550:4:6",
																						"nodeType": "YulLiteral",
																						"src": "5550:4:6",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5539:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5539:3:6"
																				},
																				"nativeSrc": "5539:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5539:16:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5533:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5533:5:6"
																		},
																		"nativeSrc": "5533:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:23:6"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5517:12:6",
																			"nodeType": "YulTypedName",
																			"src": "5517:12:6",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5603:12:6",
																				"nodeType": "YulIdentifier",
																				"src": "5603:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5621:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5621:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5626:4:6",
																						"nodeType": "YulLiteral",
																						"src": "5626:4:6",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5617:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5617:3:6"
																				},
																				"nativeSrc": "5617:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5617:14:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "5569:33:6",
																			"nodeType": "YulIdentifier",
																			"src": "5569:33:6"
																		},
																		"nativeSrc": "5569:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5569:63:6"
																	},
																	"nativeSrc": "5569:63:6",
																	"nodeType": "YulExpressionStatement",
																	"src": "5569:63:6"
																}
															]
														},
														{
															"nativeSrc": "5652:168:6",
															"nodeType": "YulBlock",
															"src": "5652:168:6",
															"statements": [
																{
																	"nativeSrc": "5691:43:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5691:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5721:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5721:5:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5728:4:6",
																						"nodeType": "YulLiteral",
																						"src": "5728:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5717:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5717:3:6"
																				},
																				"nativeSrc": "5717:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5717:16:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5711:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5711:5:6"
																		},
																		"nativeSrc": "5711:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5711:23:6"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5695:12:6",
																			"nodeType": "YulTypedName",
																			"src": "5695:12:6",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5781:12:6",
																				"nodeType": "YulIdentifier",
																				"src": "5781:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5799:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5799:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5804:4:6",
																						"nodeType": "YulLiteral",
																						"src": "5804:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5795:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5795:3:6"
																				},
																				"nativeSrc": "5795:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5795:14:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "5747:33:6",
																			"nodeType": "YulIdentifier",
																			"src": "5747:33:6"
																		},
																		"nativeSrc": "5747:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5747:63:6"
																	},
																	"nativeSrc": "5747:63:6",
																	"nodeType": "YulExpressionStatement",
																	"src": "5747:63:6"
																}
															]
														},
														{
															"nativeSrc": "5830:168:6",
															"nodeType": "YulBlock",
															"src": "5830:168:6",
															"statements": [
																{
																	"nativeSrc": "5869:43:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5869:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5899:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5899:5:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5906:4:6",
																						"nodeType": "YulLiteral",
																						"src": "5906:4:6",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5895:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5895:3:6"
																				},
																				"nativeSrc": "5895:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5895:16:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5889:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5889:5:6"
																		},
																		"nativeSrc": "5889:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5889:23:6"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5873:12:6",
																			"nodeType": "YulTypedName",
																			"src": "5873:12:6",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5959:12:6",
																				"nodeType": "YulIdentifier",
																				"src": "5959:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5977:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5977:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5982:4:6",
																						"nodeType": "YulLiteral",
																						"src": "5982:4:6",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5973:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5973:3:6"
																				},
																				"nativeSrc": "5973:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5973:14:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5925:33:6",
																			"nodeType": "YulIdentifier",
																			"src": "5925:33:6"
																		},
																		"nativeSrc": "5925:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5925:63:6"
																	},
																	"nativeSrc": "5925:63:6",
																	"nodeType": "YulExpressionStatement",
																	"src": "5925:63:6"
																}
															]
														},
														{
															"nativeSrc": "6008:161:6",
															"nodeType": "YulBlock",
															"src": "6008:161:6",
															"statements": [
																{
																	"nativeSrc": "6042:43:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6042:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6072:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "6072:5:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6079:4:6",
																						"nodeType": "YulLiteral",
																						"src": "6079:4:6",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6068:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6068:3:6"
																				},
																				"nativeSrc": "6068:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6068:16:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6062:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "6062:5:6"
																		},
																		"nativeSrc": "6062:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6062:23:6"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6046:12:6",
																			"nodeType": "YulTypedName",
																			"src": "6046:12:6",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6130:12:6",
																				"nodeType": "YulIdentifier",
																				"src": "6130:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6148:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "6148:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6153:4:6",
																						"nodeType": "YulLiteral",
																						"src": "6153:4:6",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6144:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6144:3:6"
																				},
																				"nativeSrc": "6144:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6144:14:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "6098:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "6098:31:6"
																		},
																		"nativeSrc": "6098:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6098:61:6"
																	},
																	"nativeSrc": "6098:61:6",
																	"nodeType": "YulExpressionStatement",
																	"src": "6098:61:6"
																}
															]
														},
														{
															"nativeSrc": "6179:177:6",
															"nodeType": "YulBlock",
															"src": "6179:177:6",
															"statements": [
																{
																	"nativeSrc": "6227:43:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6227:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6257:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "6257:5:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6264:4:6",
																						"nodeType": "YulLiteral",
																						"src": "6264:4:6",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6253:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6253:3:6"
																				},
																				"nativeSrc": "6253:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6253:16:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6247:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "6247:5:6"
																		},
																		"nativeSrc": "6247:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6247:23:6"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6231:12:6",
																			"nodeType": "YulTypedName",
																			"src": "6231:12:6",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6317:12:6",
																				"nodeType": "YulIdentifier",
																				"src": "6317:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6335:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "6335:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6340:4:6",
																						"nodeType": "YulLiteral",
																						"src": "6340:4:6",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6331:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6331:3:6"
																				},
																				"nativeSrc": "6331:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6331:14:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nativeSrc": "6283:33:6",
																			"nodeType": "YulIdentifier",
																			"src": "6283:33:6"
																		},
																		"nativeSrc": "6283:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6283:63:6"
																	},
																	"nativeSrc": "6283:63:6",
																	"nodeType": "YulExpressionStatement",
																	"src": "6283:63:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr_to_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr_fromStack",
												"nativeSrc": "5275:1088:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5416:5:6",
														"nodeType": "YulTypedName",
														"src": "5416:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5423:3:6",
														"nodeType": "YulTypedName",
														"src": "5423:3:6",
														"type": ""
													}
												],
												"src": "5275:1088:6"
											},
											{
												"body": {
													"nativeSrc": "6555:213:6",
													"nodeType": "YulBlock",
													"src": "6555:213:6",
													"statements": [
														{
															"nativeSrc": "6565:27:6",
															"nodeType": "YulAssignment",
															"src": "6565:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6577:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6577:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6588:3:6",
																		"nodeType": "YulLiteral",
																		"src": "6588:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6573:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6573:3:6"
																},
																"nativeSrc": "6573:19:6",
																"nodeType": "YulFunctionCall",
																"src": "6573:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6565:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6565:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6734:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6734:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6747:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6747:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6758:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6758:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6743:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6743:3:6"
																		},
																		"nativeSrc": "6743:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6743:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr_to_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr_fromStack",
																	"nativeSrc": "6602:131:6",
																	"nodeType": "YulIdentifier",
																	"src": "6602:131:6"
																},
																"nativeSrc": "6602:159:6",
																"nodeType": "YulFunctionCall",
																"src": "6602:159:6"
															},
															"nativeSrc": "6602:159:6",
															"nodeType": "YulExpressionStatement",
															"src": "6602:159:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr__to_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr__fromStack_reversed",
												"nativeSrc": "6369:399:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6527:9:6",
														"nodeType": "YulTypedName",
														"src": "6527:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6539:6:6",
														"nodeType": "YulTypedName",
														"src": "6539:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6550:4:6",
														"nodeType": "YulTypedName",
														"src": "6550:4:6",
														"type": ""
													}
												],
												"src": "6369:399:6"
											},
											{
												"body": {
													"nativeSrc": "6837:80:6",
													"nodeType": "YulBlock",
													"src": "6837:80:6",
													"statements": [
														{
															"nativeSrc": "6847:22:6",
															"nodeType": "YulAssignment",
															"src": "6847:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6862:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6862:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6856:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6856:5:6"
																},
																"nativeSrc": "6856:13:6",
																"nodeType": "YulFunctionCall",
																"src": "6856:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6847:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6847:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6905:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6905:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "6878:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "6878:26:6"
																},
																"nativeSrc": "6878:33:6",
																"nodeType": "YulFunctionCall",
																"src": "6878:33:6"
															},
															"nativeSrc": "6878:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "6878:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "6774:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6815:6:6",
														"nodeType": "YulTypedName",
														"src": "6815:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6823:3:6",
														"nodeType": "YulTypedName",
														"src": "6823:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6831:5:6",
														"nodeType": "YulTypedName",
														"src": "6831:5:6",
														"type": ""
													}
												],
												"src": "6774:143:6"
											},
											{
												"body": {
													"nativeSrc": "6966:79:6",
													"nodeType": "YulBlock",
													"src": "6966:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7023:16:6",
																"nodeType": "YulBlock",
																"src": "7023:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7032:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7032:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7035:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7035:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7025:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7025:6:6"
																			},
																			"nativeSrc": "7025:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7025:12:6"
																		},
																		"nativeSrc": "7025:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7025:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6989:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6989:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7014:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "7014:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "6996:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "6996:17:6"
																				},
																				"nativeSrc": "6996:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6996:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6986:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6986:2:6"
																		},
																		"nativeSrc": "6986:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6986:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6979:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6979:6:6"
																},
																"nativeSrc": "6979:43:6",
																"nodeType": "YulFunctionCall",
																"src": "6979:43:6"
															},
															"nativeSrc": "6976:63:6",
															"nodeType": "YulIf",
															"src": "6976:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint160",
												"nativeSrc": "6923:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6959:5:6",
														"nodeType": "YulTypedName",
														"src": "6959:5:6",
														"type": ""
													}
												],
												"src": "6923:122:6"
											},
											{
												"body": {
													"nativeSrc": "7114:80:6",
													"nodeType": "YulBlock",
													"src": "7114:80:6",
													"statements": [
														{
															"nativeSrc": "7124:22:6",
															"nodeType": "YulAssignment",
															"src": "7124:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7139:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7139:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7133:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7133:5:6"
																},
																"nativeSrc": "7133:13:6",
																"nodeType": "YulFunctionCall",
																"src": "7133:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7124:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7124:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7182:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7182:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint160",
																	"nativeSrc": "7155:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "7155:26:6"
																},
																"nativeSrc": "7155:33:6",
																"nodeType": "YulFunctionCall",
																"src": "7155:33:6"
															},
															"nativeSrc": "7155:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "7155:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint160_fromMemory",
												"nativeSrc": "7051:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7092:6:6",
														"nodeType": "YulTypedName",
														"src": "7092:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7100:3:6",
														"nodeType": "YulTypedName",
														"src": "7100:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7108:5:6",
														"nodeType": "YulTypedName",
														"src": "7108:5:6",
														"type": ""
													}
												],
												"src": "7051:143:6"
											},
											{
												"body": {
													"nativeSrc": "7244:49:6",
													"nodeType": "YulBlock",
													"src": "7244:49:6",
													"statements": [
														{
															"nativeSrc": "7254:33:6",
															"nodeType": "YulAssignment",
															"src": "7254:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7269:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7269:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7276:10:6",
																		"nodeType": "YulLiteral",
																		"src": "7276:10:6",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7265:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7265:3:6"
																},
																"nativeSrc": "7265:22:6",
																"nodeType": "YulFunctionCall",
																"src": "7265:22:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7254:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "7254:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nativeSrc": "7200:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7226:5:6",
														"nodeType": "YulTypedName",
														"src": "7226:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7236:7:6",
														"nodeType": "YulTypedName",
														"src": "7236:7:6",
														"type": ""
													}
												],
												"src": "7200:93:6"
											},
											{
												"body": {
													"nativeSrc": "7341:78:6",
													"nodeType": "YulBlock",
													"src": "7341:78:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7397:16:6",
																"nodeType": "YulBlock",
																"src": "7397:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7406:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7406:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7409:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7409:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7399:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7399:6:6"
																			},
																			"nativeSrc": "7399:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7399:12:6"
																		},
																		"nativeSrc": "7399:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7399:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7364:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7364:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7388:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "7388:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nativeSrc": "7371:16:6",
																					"nodeType": "YulIdentifier",
																					"src": "7371:16:6"
																				},
																				"nativeSrc": "7371:23:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7371:23:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7361:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "7361:2:6"
																		},
																		"nativeSrc": "7361:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7361:34:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7354:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7354:6:6"
																},
																"nativeSrc": "7354:42:6",
																"nodeType": "YulFunctionCall",
																"src": "7354:42:6"
															},
															"nativeSrc": "7351:62:6",
															"nodeType": "YulIf",
															"src": "7351:62:6"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nativeSrc": "7299:120:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7334:5:6",
														"nodeType": "YulTypedName",
														"src": "7334:5:6",
														"type": ""
													}
												],
												"src": "7299:120:6"
											},
											{
												"body": {
													"nativeSrc": "7487:79:6",
													"nodeType": "YulBlock",
													"src": "7487:79:6",
													"statements": [
														{
															"nativeSrc": "7497:22:6",
															"nodeType": "YulAssignment",
															"src": "7497:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7512:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7512:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7506:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7506:5:6"
																},
																"nativeSrc": "7506:13:6",
																"nodeType": "YulFunctionCall",
																"src": "7506:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7497:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7497:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7554:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7554:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nativeSrc": "7528:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "7528:25:6"
																},
																"nativeSrc": "7528:32:6",
																"nodeType": "YulFunctionCall",
																"src": "7528:32:6"
															},
															"nativeSrc": "7528:32:6",
															"nodeType": "YulExpressionStatement",
															"src": "7528:32:6"
														}
													]
												},
												"name": "abi_decode_t_uint32_fromMemory",
												"nativeSrc": "7425:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7465:6:6",
														"nodeType": "YulTypedName",
														"src": "7465:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7473:3:6",
														"nodeType": "YulTypedName",
														"src": "7473:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7481:5:6",
														"nodeType": "YulTypedName",
														"src": "7481:5:6",
														"type": ""
													}
												],
												"src": "7425:141:6"
											},
											{
												"body": {
													"nativeSrc": "7699:691:6",
													"nodeType": "YulBlock",
													"src": "7699:691:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7746:83:6",
																"nodeType": "YulBlock",
																"src": "7746:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7748:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "7748:77:6"
																			},
																			"nativeSrc": "7748:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7748:79:6"
																		},
																		"nativeSrc": "7748:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7748:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7720:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7720:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7729:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7729:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7716:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7716:3:6"
																		},
																		"nativeSrc": "7716:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7716:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7741:3:6",
																		"nodeType": "YulLiteral",
																		"src": "7741:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7712:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7712:3:6"
																},
																"nativeSrc": "7712:33:6",
																"nodeType": "YulFunctionCall",
																"src": "7712:33:6"
															},
															"nativeSrc": "7709:120:6",
															"nodeType": "YulIf",
															"src": "7709:120:6"
														},
														{
															"nativeSrc": "7839:128:6",
															"nodeType": "YulBlock",
															"src": "7839:128:6",
															"statements": [
																{
																	"nativeSrc": "7854:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7854:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7868:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7868:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7858:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7858:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7883:74:6",
																	"nodeType": "YulAssignment",
																	"src": "7883:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7929:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7929:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7940:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7940:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7925:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7925:3:6"
																				},
																				"nativeSrc": "7925:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7925:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7949:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7949:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "7893:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "7893:31:6"
																		},
																		"nativeSrc": "7893:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7893:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7883:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7883:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7977:129:6",
															"nodeType": "YulBlock",
															"src": "7977:129:6",
															"statements": [
																{
																	"nativeSrc": "7992:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7992:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8006:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8006:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7996:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7996:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8022:74:6",
																	"nodeType": "YulAssignment",
																	"src": "8022:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8068:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8068:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8079:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8079:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8064:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8064:3:6"
																				},
																				"nativeSrc": "8064:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8064:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8088:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8088:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint160_fromMemory",
																			"nativeSrc": "8032:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "8032:31:6"
																		},
																		"nativeSrc": "8032:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8032:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8022:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8022:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8116:128:6",
															"nodeType": "YulBlock",
															"src": "8116:128:6",
															"statements": [
																{
																	"nativeSrc": "8131:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8131:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8145:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8145:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8135:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8135:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8161:73:6",
																	"nodeType": "YulAssignment",
																	"src": "8161:73:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8206:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8206:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8217:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8217:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8202:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8202:3:6"
																				},
																				"nativeSrc": "8202:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8202:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8226:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8226:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32_fromMemory",
																			"nativeSrc": "8171:30:6",
																			"nodeType": "YulIdentifier",
																			"src": "8171:30:6"
																		},
																		"nativeSrc": "8171:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8171:63:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8161:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8161:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8254:129:6",
															"nodeType": "YulBlock",
															"src": "8254:129:6",
															"statements": [
																{
																	"nativeSrc": "8269:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8269:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8283:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8283:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8273:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8273:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8299:74:6",
																	"nodeType": "YulAssignment",
																	"src": "8299:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8345:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8345:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8356:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8356:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8341:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8341:3:6"
																				},
																				"nativeSrc": "8341:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8341:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8365:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8365:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8309:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "8309:31:6"
																		},
																		"nativeSrc": "8309:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8309:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "8299:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8299:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint160t_uint32t_uint256_fromMemory",
												"nativeSrc": "7572:818:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7645:9:6",
														"nodeType": "YulTypedName",
														"src": "7645:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7656:7:6",
														"nodeType": "YulTypedName",
														"src": "7656:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7668:6:6",
														"nodeType": "YulTypedName",
														"src": "7668:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7676:6:6",
														"nodeType": "YulTypedName",
														"src": "7676:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7684:6:6",
														"nodeType": "YulTypedName",
														"src": "7684:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7692:6:6",
														"nodeType": "YulTypedName",
														"src": "7692:6:6",
														"type": ""
													}
												],
												"src": "7572:818:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISwapRouter_$284_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISwapRouter_$284_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapRouter_$284_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapRouter_$284__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapRouter_$284_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint160__to_t_uint256_t_uint160__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint160_to_t_uint160_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function convert_t_contract$_IQuoterV2_$184_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IQuoterV2_$184_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IQuoterV2_$184_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IQuoterV2_$184__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IQuoterV2_$184_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    // struct IQuoterV2.QuoteExactInputSingleParams -> struct IQuoterV2.QuoteExactInputSingleParams\n    function abi_encode_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr_to_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0x80))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr__to_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr_to_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function validator_revert_t_uint160(value) {\n        if iszero(eq(value, cleanup_t_uint160(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint160_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint160(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint160t_uint32t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint160_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"464": [
									{
										"length": 32,
										"start": 465
									}
								],
								"467": [
									{
										"length": 32,
										"start": 654
									},
									{
										"length": 32,
										"start": 863
									}
								],
								"473": [
									{
										"length": 32,
										"start": 827
									}
								],
								"475": [
									{
										"length": 32,
										"start": 501
									}
								],
								"477": [
									{
										"length": 32,
										"start": 405
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610086575f3560e01c8063c54e44eb11610059578063c54e44eb14610102578063ccbfc16c14610120578063e0bab4c414610151578063e20dccb21461016f57610086565b8063089fe6aa1461008a57806389a30271146100a8578063ad5c4648146100c6578063c31c9c07146100e4575b5f80fd5b61009261018d565b60405161009f919061039e565b60405180910390f35b6100b0610193565b6040516100bd91906103f6565b60405180910390f35b6100ce6101b7565b6040516100db91906103f6565b60405180910390f35b6100ec6101cf565b6040516100f9919061046a565b60405180910390f35b61010a6101f3565b60405161011791906103f6565b60405180910390f35b61013a600480360381019061013591906104e4565b610217565b604051610148929190610552565b60405180910390f35b610159610339565b60405161016691906103f6565b60405180910390f35b61017761035d565b6040516101849190610599565b60405180910390f35b610bb881565b7f000000000000000000000000000000000000000000000000000000000000000081565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f805f6040518060a001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff168152602001858152602001610bb862ffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c6a5026a826040518263ffffffff1660e01b81526004016102e59190610654565b6080604051808303815f875af1158015610301573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061032591906106e4565b905050809350819450505050935093915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f62ffffff82169050919050565b61039881610381565b82525050565b5f6020820190506103b15f83018461038f565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103e0826103b7565b9050919050565b6103f0816103d6565b82525050565b5f6020820190506104095f8301846103e7565b92915050565b5f819050919050565b5f61043261042d610428846103b7565b61040f565b6103b7565b9050919050565b5f61044382610418565b9050919050565b5f61045482610439565b9050919050565b6104648161044a565b82525050565b5f60208201905061047d5f83018461045b565b92915050565b5f80fd5b610490816103d6565b811461049a575f80fd5b50565b5f813590506104ab81610487565b92915050565b5f819050919050565b6104c3816104b1565b81146104cd575f80fd5b50565b5f813590506104de816104ba565b92915050565b5f805f606084860312156104fb576104fa610483565b5b5f6105088682870161049d565b93505060206105198682870161049d565b925050604061052a868287016104d0565b9150509250925092565b61053d816104b1565b82525050565b61054c816103b7565b82525050565b5f6040820190506105655f830185610534565b6105726020830184610543565b9392505050565b5f61058382610439565b9050919050565b61059381610579565b82525050565b5f6020820190506105ac5f83018461058a565b92915050565b6105bb816103d6565b82525050565b6105ca816104b1565b82525050565b6105d981610381565b82525050565b6105e8816103b7565b82525050565b60a082015f8201516106025f8501826105b2565b50602082015161061560208501826105b2565b50604082015161062860408501826105c1565b50606082015161063b60608501826105d0565b50608082015161064e60808501826105df565b50505050565b5f60a0820190506106675f8301846105ee565b92915050565b5f8151905061067b816104ba565b92915050565b61068a816103b7565b8114610694575f80fd5b50565b5f815190506106a581610681565b92915050565b5f63ffffffff82169050919050565b6106c3816106ab565b81146106cd575f80fd5b50565b5f815190506106de816106ba565b92915050565b5f805f80608085870312156106fc576106fb610483565b5b5f6107098782880161066d565b945050602061071a87828801610697565b935050604061072b878288016106d0565b925050606061073c8782880161066d565b9150509295919450925056fea26469706673582212207b391b728565f95847472bc7e67133cf6a3d7572d1c8f0f448d358dacfa164f664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC54E44EB GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC54E44EB EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xCCBFC16C EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xE0BAB4C4 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xE20DCCB2 EQ PUSH2 0x16F JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x89FE6AA EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0xE4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x92 PUSH2 0x18D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB0 PUSH2 0x193 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCE PUSH2 0x1B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDB SWAP2 SWAP1 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH2 0x1CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x46A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10A PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x4E4 JUMP JUMPDEST PUSH2 0x217 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP3 SWAP2 SWAP1 PUSH2 0x552 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x35D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x599 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC6A5026A DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x654 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x301 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x6E4 JUMP JUMPDEST SWAP1 POP POP DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x398 DUP2 PUSH2 0x381 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B1 PUSH0 DUP4 ADD DUP5 PUSH2 0x38F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3E0 DUP3 PUSH2 0x3B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F0 DUP2 PUSH2 0x3D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x409 PUSH0 DUP4 ADD DUP5 PUSH2 0x3E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x432 PUSH2 0x42D PUSH2 0x428 DUP5 PUSH2 0x3B7 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST PUSH2 0x3B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x443 DUP3 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x454 DUP3 PUSH2 0x439 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x464 DUP2 PUSH2 0x44A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x47D PUSH0 DUP4 ADD DUP5 PUSH2 0x45B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x490 DUP2 PUSH2 0x3D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x49A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4AB DUP2 PUSH2 0x487 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C3 DUP2 PUSH2 0x4B1 JUMP JUMPDEST DUP2 EQ PUSH2 0x4CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4DE DUP2 PUSH2 0x4BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4FB JUMPI PUSH2 0x4FA PUSH2 0x483 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x508 DUP7 DUP3 DUP8 ADD PUSH2 0x49D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x519 DUP7 DUP3 DUP8 ADD PUSH2 0x49D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x52A DUP7 DUP3 DUP8 ADD PUSH2 0x4D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x53D DUP2 PUSH2 0x4B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x54C DUP2 PUSH2 0x3B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x565 PUSH0 DUP4 ADD DUP6 PUSH2 0x534 JUMP JUMPDEST PUSH2 0x572 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x543 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x583 DUP3 PUSH2 0x439 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x593 DUP2 PUSH2 0x579 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5AC PUSH0 DUP4 ADD DUP5 PUSH2 0x58A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5BB DUP2 PUSH2 0x3D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5CA DUP2 PUSH2 0x4B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5D9 DUP2 PUSH2 0x381 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5E8 DUP2 PUSH2 0x3B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x602 PUSH0 DUP6 ADD DUP3 PUSH2 0x5B2 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x615 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x5B2 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x628 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x5C1 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x63B PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x5D0 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x64E PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x5DF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x667 PUSH0 DUP4 ADD DUP5 PUSH2 0x5EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x67B DUP2 PUSH2 0x4BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x68A DUP2 PUSH2 0x3B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x694 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x6A5 DUP2 PUSH2 0x681 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6C3 DUP2 PUSH2 0x6AB JUMP JUMPDEST DUP2 EQ PUSH2 0x6CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x6DE DUP2 PUSH2 0x6BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6FC JUMPI PUSH2 0x6FB PUSH2 0x483 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x709 DUP8 DUP3 DUP9 ADD PUSH2 0x66D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x71A DUP8 DUP3 DUP9 ADD PUSH2 0x697 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x72B DUP8 DUP3 DUP9 ADD PUSH2 0x6D0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x73C DUP8 DUP3 DUP9 ADD PUSH2 0x66D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x391B728565F95847472BC7E67133CF6A3D7572D1C8F0F448D358DACF LOG1 PUSH5 0xF664736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "294:4187:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;676:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;558:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;594:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;322:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;522:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1025:614;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;487:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;368:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;676:37;709:4;676:37;:::o;558:29::-;;;:::o;594:73::-;625:42;594:73;:::o;322:39::-;;;:::o;522:29::-;;;:::o;1025:614::-;1157:24;1183:25;1221:51;1275:247;;;;;;;;1355:7;1275:247;;;;;;1391:8;1275:247;;;;;;1428:8;1275:247;;;;709:4;1275:247;;;;;;1505:1;1275:247;;;;;1221:301;;1579:8;:44;;;1624:6;1579:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1535:96;;;;;;;;;;;1210:429;1025:614;;;;;;:::o;487:28::-;;;:::o;368:35::-;;;:::o;7:91:6:-;43:7;83:8;76:5;72:20;61:31;;7:91;;;:::o;104:115::-;189:23;206:5;189:23;:::i;:::-;184:3;177:36;104:115;;:::o;225:218::-;316:4;354:2;343:9;339:18;331:26;;367:69;433:1;422:9;418:17;409:6;367:69;:::i;:::-;225:218;;;;:::o;449:126::-;486:7;526:42;519:5;515:54;504:65;;449:126;;;:::o;581:96::-;618:7;647:24;665:5;647:24;:::i;:::-;636:35;;581:96;;;:::o;683:118::-;770:24;788:5;770:24;:::i;:::-;765:3;758:37;683:118;;:::o;807:222::-;900:4;938:2;927:9;923:18;915:26;;951:71;1019:1;1008:9;1004:17;995:6;951:71;:::i;:::-;807:222;;;;:::o;1035:60::-;1063:3;1084:5;1077:12;;1035:60;;;:::o;1101:142::-;1151:9;1184:53;1202:34;1211:24;1229:5;1211:24;:::i;:::-;1202:34;:::i;:::-;1184:53;:::i;:::-;1171:66;;1101:142;;;:::o;1249:126::-;1299:9;1332:37;1363:5;1332:37;:::i;:::-;1319:50;;1249:126;;;:::o;1381:145::-;1450:9;1483:37;1514:5;1483:37;:::i;:::-;1470:50;;1381:145;;;:::o;1532:169::-;1638:56;1688:5;1638:56;:::i;:::-;1633:3;1626:69;1532:169;;:::o;1707:260::-;1819:4;1857:2;1846:9;1842:18;1834:26;;1870:90;1957:1;1946:9;1942:17;1933:6;1870:90;:::i;:::-;1707:260;;;;:::o;2054:117::-;2163:1;2160;2153:12;2300:122;2373:24;2391:5;2373:24;:::i;:::-;2366:5;2363:35;2353:63;;2412:1;2409;2402:12;2353:63;2300:122;:::o;2428:139::-;2474:5;2512:6;2499:20;2490:29;;2528:33;2555:5;2528:33;:::i;:::-;2428:139;;;;:::o;2573:77::-;2610:7;2639:5;2628:16;;2573:77;;;:::o;2656:122::-;2729:24;2747:5;2729:24;:::i;:::-;2722:5;2719:35;2709:63;;2768:1;2765;2758:12;2709:63;2656:122;:::o;2784:139::-;2830:5;2868:6;2855:20;2846:29;;2884:33;2911:5;2884:33;:::i;:::-;2784:139;;;;:::o;2929:619::-;3006:6;3014;3022;3071:2;3059:9;3050:7;3046:23;3042:32;3039:119;;;3077:79;;:::i;:::-;3039:119;3197:1;3222:53;3267:7;3258:6;3247:9;3243:22;3222:53;:::i;:::-;3212:63;;3168:117;3324:2;3350:53;3395:7;3386:6;3375:9;3371:22;3350:53;:::i;:::-;3340:63;;3295:118;3452:2;3478:53;3523:7;3514:6;3503:9;3499:22;3478:53;:::i;:::-;3468:63;;3423:118;2929:619;;;;;:::o;3554:118::-;3641:24;3659:5;3641:24;:::i;:::-;3636:3;3629:37;3554:118;;:::o;3678:::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:332::-;3923:4;3961:2;3950:9;3946:18;3938:26;;3974:71;4042:1;4031:9;4027:17;4018:6;3974:71;:::i;:::-;4055:72;4123:2;4112:9;4108:18;4099:6;4055:72;:::i;:::-;3802:332;;;;;:::o;4140:143::-;4207:9;4240:37;4271:5;4240:37;:::i;:::-;4227:50;;4140:143;;;:::o;4289:165::-;4393:54;4441:5;4393:54;:::i;:::-;4388:3;4381:67;4289:165;;:::o;4460:256::-;4570:4;4608:2;4597:9;4593:18;4585:26;;4621:88;4706:1;4695:9;4691:17;4682:6;4621:88;:::i;:::-;4460:256;;;;:::o;4722:108::-;4799:24;4817:5;4799:24;:::i;:::-;4794:3;4787:37;4722:108;;:::o;4836:::-;4913:24;4931:5;4913:24;:::i;:::-;4908:3;4901:37;4836:108;;:::o;4950:105::-;5025:23;5042:5;5025:23;:::i;:::-;5020:3;5013:36;4950:105;;:::o;5061:108::-;5138:24;5156:5;5138:24;:::i;:::-;5133:3;5126:37;5061:108;;:::o;5275:1088::-;5460:4;5455:3;5451:14;5550:4;5543:5;5539:16;5533:23;5569:63;5626:4;5621:3;5617:14;5603:12;5569:63;:::i;:::-;5475:167;5728:4;5721:5;5717:16;5711:23;5747:63;5804:4;5799:3;5795:14;5781:12;5747:63;:::i;:::-;5652:168;5906:4;5899:5;5895:16;5889:23;5925:63;5982:4;5977:3;5973:14;5959:12;5925:63;:::i;:::-;5830:168;6079:4;6072:5;6068:16;6062:23;6098:61;6153:4;6148:3;6144:14;6130:12;6098:61;:::i;:::-;6008:161;6264:4;6257:5;6253:16;6247:23;6283:63;6340:4;6335:3;6331:14;6317:12;6283:63;:::i;:::-;6179:177;5429:934;5275:1088;;:::o;6369:399::-;6550:4;6588:3;6577:9;6573:19;6565:27;;6602:159;6758:1;6747:9;6743:17;6734:6;6602:159;:::i;:::-;6369:399;;;;:::o;6774:143::-;6831:5;6862:6;6856:13;6847:22;;6878:33;6905:5;6878:33;:::i;:::-;6774:143;;;;:::o;6923:122::-;6996:24;7014:5;6996:24;:::i;:::-;6989:5;6986:35;6976:63;;7035:1;7032;7025:12;6976:63;6923:122;:::o;7051:143::-;7108:5;7139:6;7133:13;7124:22;;7155:33;7182:5;7155:33;:::i;:::-;7051:143;;;;:::o;7200:93::-;7236:7;7276:10;7269:5;7265:22;7254:33;;7200:93;;;:::o;7299:120::-;7371:23;7388:5;7371:23;:::i;:::-;7364:5;7361:34;7351:62;;7409:1;7406;7399:12;7351:62;7299:120;:::o;7425:141::-;7481:5;7512:6;7506:13;7497:22;;7528:32;7554:5;7528:32;:::i;:::-;7425:141;;;;:::o;7572:818::-;7668:6;7676;7684;7692;7741:3;7729:9;7720:7;7716:23;7712:33;7709:120;;;7748:79;;:::i;:::-;7709:120;7868:1;7893:64;7949:7;7940:6;7929:9;7925:22;7893:64;:::i;:::-;7883:74;;7839:128;8006:2;8032:64;8088:7;8079:6;8068:9;8064:22;8032:64;:::i;:::-;8022:74;;7977:129;8145:2;8171:63;8226:7;8217:6;8206:9;8202:22;8171:63;:::i;:::-;8161:73;;8116:128;8283:2;8309:64;8365:7;8356:6;8345:9;8341:22;8309:64;:::i;:::-;8299:74;;8254:129;7572:818;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "383600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DAI()": "infinite",
								"USDC()": "infinite",
								"USDT()": "infinite",
								"WETH()": "418",
								"getAmountOutMinimum(address,address,uint256)": "infinite",
								"poolFee()": "332",
								"quoterV2()": "infinite",
								"swapRouter()": "infinite"
							},
							"internal": {
								"swapExactInputMultihop(uint256,address,address)": "infinite",
								"swapExactInputSingle(uint256,address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 294,
									"end": 4481,
									"name": "PUSH",
									"source": 5,
									"value": "120"
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 722,
									"end": 1017,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 900,
									"end": 911,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 887,
									"end": 911,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 887,
									"end": 911,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 887,
									"end": 911,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 887,
									"end": 911,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 887,
									"end": 911,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 887,
									"end": 911,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 887,
									"end": 911,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 887,
									"end": 911,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 887,
									"end": 911,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 887,
									"end": 911,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 933,
									"end": 942,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 922,
									"end": 942,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 922,
									"end": 942,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 922,
									"end": 942,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 922,
									"end": 942,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 922,
									"end": 942,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 922,
									"end": 942,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 922,
									"end": 942,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 922,
									"end": 942,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 922,
									"end": 942,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 922,
									"end": 942,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 959,
									"end": 963,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 953,
									"end": 963,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 953,
									"end": 963,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 953,
									"end": 963,
									"name": "PUSH",
									"source": 5,
									"value": "C0"
								},
								{
									"begin": 953,
									"end": 963,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 953,
									"end": 963,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 953,
									"end": 963,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 953,
									"end": 963,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 953,
									"end": 963,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 953,
									"end": 963,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 953,
									"end": 963,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 981,
									"end": 986,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 974,
									"end": 986,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 974,
									"end": 986,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 974,
									"end": 986,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 974,
									"end": 986,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 974,
									"end": 986,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 974,
									"end": 986,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 974,
									"end": 986,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 974,
									"end": 986,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 974,
									"end": 986,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 974,
									"end": 986,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1004,
									"end": 1009,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 997,
									"end": 1009,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 997,
									"end": 1009,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 997,
									"end": 1009,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 997,
									"end": 1009,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 997,
									"end": 1009,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 997,
									"end": 1009,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 997,
									"end": 1009,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 997,
									"end": 1009,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 997,
									"end": 1009,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 997,
									"end": 1009,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 722,
									"end": 1017,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 683,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 683,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 624,
									"end": 631,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 671,
									"end": 676,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 653,
									"end": 677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 653,
									"end": 677,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 642,
									"end": 677,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 642,
									"end": 677,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 568,
									"end": 683,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 689,
									"end": 849,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 689,
									"end": 849,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 818,
									"end": 823,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 781,
									"end": 824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 781,
									"end": 824,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 781,
									"end": 824,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 774,
									"end": 779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 771,
									"end": 825,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 761,
									"end": 843,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 839,
									"end": 840,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 829,
									"end": 841,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 761,
									"end": 843,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 689,
									"end": 849,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 689,
									"end": 849,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 931,
									"end": 936,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 962,
									"end": 968,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 956,
									"end": 969,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 947,
									"end": 969,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 947,
									"end": 969,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1024,
									"end": 1029,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 978,
									"end": 1030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 855,
									"end": 1036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1042,
									"end": 1155,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1042,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1096,
									"end": 1103,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1125,
									"end": 1149,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1143,
									"end": 1148,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1125,
									"end": 1149,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1125,
									"end": 1149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1125,
									"end": 1149,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1125,
									"end": 1149,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1114,
									"end": 1149,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1114,
									"end": 1149,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1042,
									"end": 1155,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1042,
									"end": 1155,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1042,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1042,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1317,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1161,
									"end": 1317,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1292,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1286,
									"end": 1291,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1292,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1251,
									"end": 1292,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1292,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1251,
									"end": 1292,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1244,
									"end": 1249,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1241,
									"end": 1293,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1311,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1231,
									"end": 1311,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1307,
									"end": 1308,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1304,
									"end": 1305,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1297,
									"end": 1309,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1311,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1231,
									"end": 1311,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1317,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1317,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1500,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1323,
									"end": 1500,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1397,
									"end": 1402,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1428,
									"end": 1434,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1422,
									"end": 1435,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1413,
									"end": 1435,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1413,
									"end": 1435,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1444,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1488,
									"end": 1493,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1444,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1444,
									"end": 1494,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1444,
									"end": 1494,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1444,
									"end": 1494,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1500,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1500,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1500,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1500,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1500,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1506,
									"end": 1628,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1506,
									"end": 1628,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1579,
									"end": 1603,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1597,
									"end": 1602,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1579,
									"end": 1603,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1579,
									"end": 1603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1579,
									"end": 1603,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1579,
									"end": 1603,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1572,
									"end": 1577,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1569,
									"end": 1604,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1559,
									"end": 1622,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1559,
									"end": 1622,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1618,
									"end": 1619,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1615,
									"end": 1616,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1608,
									"end": 1620,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1559,
									"end": 1622,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1559,
									"end": 1622,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1506,
									"end": 1628,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1506,
									"end": 1628,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1634,
									"end": 1777,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1634,
									"end": 1777,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1691,
									"end": 1696,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1722,
									"end": 1728,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1716,
									"end": 1729,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1707,
									"end": 1729,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1707,
									"end": 1729,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1738,
									"end": 1771,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1765,
									"end": 1770,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1738,
									"end": 1771,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1738,
									"end": 1771,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1738,
									"end": 1771,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1738,
									"end": 1771,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1634,
									"end": 1777,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1634,
									"end": 1777,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1634,
									"end": 1777,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1634,
									"end": 1777,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1634,
									"end": 1777,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1783,
									"end": 2832,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1783,
									"end": 2832,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1925,
									"end": 1931,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 1939,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1941,
									"end": 1947,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1949,
									"end": 1955,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1957,
									"end": 1963,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2006,
									"end": 2009,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 1994,
									"end": 2003,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1981,
									"end": 2004,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1977,
									"end": 2010,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1974,
									"end": 2094,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1974,
									"end": 2094,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1974,
									"end": 2094,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2013,
									"end": 2092,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 2013,
									"end": 2092,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2013,
									"end": 2092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2013,
									"end": 2092,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 2013,
									"end": 2092,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1974,
									"end": 2094,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1974,
									"end": 2094,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2133,
									"end": 2134,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2158,
									"end": 2241,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 2233,
									"end": 2240,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 2224,
									"end": 2230,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2222,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2231,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2158,
									"end": 2241,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2158,
									"end": 2241,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2158,
									"end": 2241,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 2158,
									"end": 2241,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2148,
									"end": 2241,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 2148,
									"end": 2241,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2104,
									"end": 2251,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2290,
									"end": 2292,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2316,
									"end": 2397,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2389,
									"end": 2396,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 2380,
									"end": 2386,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2369,
									"end": 2378,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 2365,
									"end": 2387,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2397,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 2316,
									"end": 2397,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2397,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2316,
									"end": 2397,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2306,
									"end": 2397,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2306,
									"end": 2397,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2261,
									"end": 2407,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2446,
									"end": 2448,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2472,
									"end": 2536,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2528,
									"end": 2535,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 2519,
									"end": 2525,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2508,
									"end": 2517,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 2504,
									"end": 2526,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2472,
									"end": 2536,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 2472,
									"end": 2536,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2472,
									"end": 2536,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2472,
									"end": 2536,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2462,
									"end": 2536,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2462,
									"end": 2536,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2417,
									"end": 2546,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2585,
									"end": 2587,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 2611,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2667,
									"end": 2674,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 2658,
									"end": 2664,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2647,
									"end": 2656,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 2643,
									"end": 2665,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2611,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 2611,
									"end": 2675,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2611,
									"end": 2675,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2611,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2601,
									"end": 2675,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2601,
									"end": 2675,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2556,
									"end": 2685,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2724,
									"end": 2727,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 2751,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 2807,
									"end": 2814,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 2798,
									"end": 2804,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2787,
									"end": 2796,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 2783,
									"end": 2805,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2751,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 2751,
									"end": 2815,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2751,
									"end": 2815,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 2751,
									"end": 2815,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2741,
									"end": 2815,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2741,
									"end": 2815,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2695,
									"end": 2825,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1783,
									"end": 2832,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1783,
									"end": 2832,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 1783,
									"end": 2832,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1783,
									"end": 2832,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1783,
									"end": 2832,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 1783,
									"end": 2832,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1783,
									"end": 2832,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1783,
									"end": 2832,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1783,
									"end": 2832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "PUSH",
									"source": 5,
									"value": "C0"
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "477"
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "475"
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "473"
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "467"
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "464"
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 294,
									"end": 4481,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207b391b728565f95847472bc7e67133cf6a3d7572d1c8f0f448d358dacfa164f664736f6c634300081a0033",
									".code": [
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH",
											"source": 5,
											"value": "C54E44EB"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH",
											"source": 5,
											"value": "C54E44EB"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH",
											"source": 5,
											"value": "CCBFC16C"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH",
											"source": 5,
											"value": "E0BAB4C4"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH",
											"source": 5,
											"value": "E20DCCB2"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH",
											"source": 5,
											"value": "89FE6AA"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH",
											"source": 5,
											"value": "89A30271"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH",
											"source": 5,
											"value": "AD5C4648"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH",
											"source": 5,
											"value": "C31C9C07"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 294,
											"end": 4481,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 676,
											"end": 713,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 676,
											"end": 713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 676,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 676,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 676,
											"end": 713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 676,
											"end": 713,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 676,
											"end": 713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 676,
											"end": 713,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 713,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 676,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 676,
											"end": 713,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 676,
											"end": 713,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 676,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 676,
											"end": 713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 676,
											"end": 713,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 676,
											"end": 713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 676,
											"end": 713,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 713,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 676,
											"end": 713,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 676,
											"end": 713,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 676,
											"end": 713,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 676,
											"end": 713,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 676,
											"end": 713,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 558,
											"end": 587,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 558,
											"end": 587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 558,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 558,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 558,
											"end": 587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 558,
											"end": 587,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 558,
											"end": 587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 558,
											"end": 587,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 558,
											"end": 587,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 558,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 558,
											"end": 587,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 558,
											"end": 587,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 558,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 558,
											"end": 587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 558,
											"end": 587,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 558,
											"end": 587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 558,
											"end": 587,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 558,
											"end": 587,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 558,
											"end": 587,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 558,
											"end": 587,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 558,
											"end": 587,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 558,
											"end": 587,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 558,
											"end": 587,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 594,
											"end": 667,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 594,
											"end": 667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 594,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 594,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 594,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 594,
											"end": 667,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 594,
											"end": 667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 594,
											"end": 667,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 594,
											"end": 667,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 594,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 594,
											"end": 667,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 594,
											"end": 667,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 594,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 594,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 594,
											"end": 667,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 594,
											"end": 667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 594,
											"end": 667,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 594,
											"end": 667,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 594,
											"end": 667,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 594,
											"end": 667,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 594,
											"end": 667,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 594,
											"end": 667,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 594,
											"end": 667,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 322,
											"end": 361,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 322,
											"end": 361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 322,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 322,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 322,
											"end": 361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 322,
											"end": 361,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 322,
											"end": 361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 322,
											"end": 361,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 322,
											"end": 361,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 322,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 322,
											"end": 361,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 322,
											"end": 361,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 322,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 322,
											"end": 361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 322,
											"end": 361,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 322,
											"end": 361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 322,
											"end": 361,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 322,
											"end": 361,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 322,
											"end": 361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 322,
											"end": 361,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 322,
											"end": 361,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 322,
											"end": 361,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 322,
											"end": 361,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 522,
											"end": 551,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 522,
											"end": 551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 522,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 522,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 522,
											"end": 551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 522,
											"end": 551,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 522,
											"end": 551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 522,
											"end": 551,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 551,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 522,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 522,
											"end": 551,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 522,
											"end": 551,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 522,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 522,
											"end": 551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 522,
											"end": 551,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 522,
											"end": 551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 522,
											"end": 551,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 551,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 522,
											"end": 551,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 522,
											"end": 551,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 522,
											"end": 551,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 522,
											"end": 551,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 522,
											"end": 551,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1025,
											"end": 1639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1025,
											"end": 1639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1025,
											"end": 1639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 487,
											"end": 515,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 487,
											"end": 515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 487,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 487,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 487,
											"end": 515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 515,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 487,
											"end": 515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 487,
											"end": 515,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 515,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 487,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 487,
											"end": 515,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 487,
											"end": 515,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 487,
											"end": 515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 515,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 487,
											"end": 515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 487,
											"end": 515,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 515,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 487,
											"end": 515,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 515,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 487,
											"end": 515,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 487,
											"end": 515,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 515,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 368,
											"end": 403,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 368,
											"end": 403,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 368,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 368,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 368,
											"end": 403,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 368,
											"end": 403,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 368,
											"end": 403,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 403,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 368,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 368,
											"end": 403,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 368,
											"end": 403,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 368,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 368,
											"end": 403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 368,
											"end": 403,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 368,
											"end": 403,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 368,
											"end": 403,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 403,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 368,
											"end": 403,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 368,
											"end": 403,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 368,
											"end": 403,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 368,
											"end": 403,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 368,
											"end": 403,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 676,
											"end": 713,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 676,
											"end": 713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 713,
											"name": "PUSH",
											"source": 5,
											"value": "BB8"
										},
										{
											"begin": 676,
											"end": 713,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 676,
											"end": 713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 558,
											"end": 587,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 558,
											"end": 587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 558,
											"end": 587,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "477"
										},
										{
											"begin": 558,
											"end": 587,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 558,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 594,
											"end": 667,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 594,
											"end": 667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 625,
											"end": 667,
											"name": "PUSH",
											"source": 5,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 594,
											"end": 667,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 594,
											"end": 667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 322,
											"end": 361,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 322,
											"end": 361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 322,
											"end": 361,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "464"
										},
										{
											"begin": 322,
											"end": 361,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 322,
											"end": 361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 522,
											"end": 551,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 522,
											"end": 551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 522,
											"end": 551,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "475"
										},
										{
											"begin": 522,
											"end": 551,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 522,
											"end": 551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1157,
											"end": 1181,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1208,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1221,
											"end": 1272,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1362,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1399,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1436,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 709,
											"end": 713,
											"name": "PUSH",
											"source": 5,
											"value": "BB8"
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFF"
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1505,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1221,
											"end": 1522,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1221,
											"end": 1522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1587,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "467"
										},
										{
											"begin": 1579,
											"end": 1623,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1579,
											"end": 1623,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1623,
											"name": "PUSH",
											"source": 5,
											"value": "C6A5026A"
										},
										{
											"begin": 1624,
											"end": 1630,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1579,
											"end": 1631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1579,
											"end": 1631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1631,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1631,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1631,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1631,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1631,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 515,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 487,
											"end": 515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 487,
											"end": 515,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "473"
										},
										{
											"begin": 487,
											"end": 515,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 487,
											"end": 515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 368,
											"end": 403,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 403,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 368,
											"end": 403,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "467"
										},
										{
											"begin": 368,
											"end": 403,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 368,
											"end": 403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 98,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 7,
											"end": 98,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 43,
											"end": 50,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 91,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFF"
										},
										{
											"begin": 76,
											"end": 81,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 72,
											"end": 92,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 61,
											"end": 92,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 61,
											"end": 92,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 98,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 98,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 98,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 98,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 104,
											"end": 219,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 104,
											"end": 219,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 189,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 206,
											"end": 211,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 189,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 189,
											"end": 212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 189,
											"end": 212,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 189,
											"end": 212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 184,
											"end": 187,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 177,
											"end": 213,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 104,
											"end": 219,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 104,
											"end": 219,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 104,
											"end": 219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 225,
											"end": 443,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 225,
											"end": 443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 316,
											"end": 320,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 354,
											"end": 356,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 343,
											"end": 352,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 339,
											"end": 357,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 331,
											"end": 357,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 331,
											"end": 357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 367,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 433,
											"end": 434,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 431,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 418,
											"end": 435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 409,
											"end": 415,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 367,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 367,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 367,
											"end": 436,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 367,
											"end": 436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 225,
											"end": 443,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 443,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 225,
											"end": 443,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 225,
											"end": 443,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 225,
											"end": 443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 449,
											"end": 575,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 449,
											"end": 575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 486,
											"end": 493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 568,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 519,
											"end": 524,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 515,
											"end": 569,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 504,
											"end": 569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 504,
											"end": 569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 449,
											"end": 575,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 449,
											"end": 575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 449,
											"end": 575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 449,
											"end": 575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 581,
											"end": 677,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 581,
											"end": 677,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 618,
											"end": 625,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 665,
											"end": 670,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 647,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 647,
											"end": 671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 671,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 647,
											"end": 671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 636,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 636,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 581,
											"end": 677,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 581,
											"end": 677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 581,
											"end": 677,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 581,
											"end": 677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 683,
											"end": 801,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 683,
											"end": 801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 770,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 788,
											"end": 793,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 770,
											"end": 794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 770,
											"end": 794,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 770,
											"end": 794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 765,
											"end": 768,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 758,
											"end": 795,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 683,
											"end": 801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 683,
											"end": 801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 683,
											"end": 801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 807,
											"end": 1029,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 807,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 900,
											"end": 904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 940,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 927,
											"end": 936,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 923,
											"end": 941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 915,
											"end": 941,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 915,
											"end": 941,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 951,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1019,
											"end": 1020,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1017,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1021,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 995,
											"end": 1001,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 951,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 951,
											"end": 1022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 951,
											"end": 1022,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 951,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 807,
											"end": 1029,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 807,
											"end": 1029,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 807,
											"end": 1029,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 807,
											"end": 1029,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 807,
											"end": 1029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1095,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1035,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1063,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1089,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1077,
											"end": 1089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1077,
											"end": 1089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1095,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1095,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1243,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1101,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1160,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1202,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1211,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1229,
											"end": 1234,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1211,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1235,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1211,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1202,
											"end": 1236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1236,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1202,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1184,
											"end": 1237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1171,
											"end": 1237,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1171,
											"end": 1237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1243,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1243,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1249,
											"end": 1375,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1249,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 1308,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1363,
											"end": 1368,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1332,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1332,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1332,
											"end": 1369,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1332,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1249,
											"end": 1375,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1249,
											"end": 1375,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1249,
											"end": 1375,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1249,
											"end": 1375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1450,
											"end": 1459,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1483,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1483,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1483,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1483,
											"end": 1520,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1483,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1381,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1701,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1532,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1688,
											"end": 1693,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1694,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1638,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1633,
											"end": 1636,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 1695,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1701,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1701,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1707,
											"end": 1967,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1707,
											"end": 1967,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1819,
											"end": 1823,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1859,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1846,
											"end": 1855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1834,
											"end": 1860,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1834,
											"end": 1860,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1870,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1957,
											"end": 1958,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1946,
											"end": 1955,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1959,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1870,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1870,
											"end": 1960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1870,
											"end": 1960,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1870,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1707,
											"end": 1967,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1707,
											"end": 1967,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1707,
											"end": 1967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1707,
											"end": 1967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1707,
											"end": 1967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2054,
											"end": 2171,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2054,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2164,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2161,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2422,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2300,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2391,
											"end": 2396,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2373,
											"end": 2397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2397,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2373,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2366,
											"end": 2371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2363,
											"end": 2398,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2353,
											"end": 2416,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2412,
											"end": 2413,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2409,
											"end": 2410,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2402,
											"end": 2414,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2416,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2353,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2422,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2567,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2428,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2479,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2518,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2519,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2519,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2519,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2555,
											"end": 2560,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2528,
											"end": 2561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2561,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2528,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2567,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2567,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2567,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2567,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2573,
											"end": 2650,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2573,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2610,
											"end": 2617,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2644,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2628,
											"end": 2644,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2628,
											"end": 2644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2573,
											"end": 2650,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2573,
											"end": 2650,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2573,
											"end": 2650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2573,
											"end": 2650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2778,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2656,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2747,
											"end": 2752,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2729,
											"end": 2753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2753,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2729,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2722,
											"end": 2727,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2754,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2709,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2709,
											"end": 2772,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2769,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2765,
											"end": 2766,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2770,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2709,
											"end": 2772,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2709,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2778,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2784,
											"end": 2923,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2784,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2855,
											"end": 2875,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2911,
											"end": 2916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2884,
											"end": 2917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 2917,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2884,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2784,
											"end": 2923,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2784,
											"end": 2923,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2784,
											"end": 2923,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2784,
											"end": 2923,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2784,
											"end": 2923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2929,
											"end": 3548,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2929,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3012,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3014,
											"end": 3020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3073,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3059,
											"end": 3068,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3046,
											"end": 3069,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3042,
											"end": 3074,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3039,
											"end": 3158,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3039,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3039,
											"end": 3158,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 3077,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3077,
											"end": 3156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3156,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 3077,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3039,
											"end": 3158,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3039,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3267,
											"end": 3274,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3258,
											"end": 3264,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3265,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3222,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3222,
											"end": 3275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3222,
											"end": 3275,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3222,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3275,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3168,
											"end": 3285,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3350,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3395,
											"end": 3402,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3386,
											"end": 3392,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3384,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3371,
											"end": 3393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3350,
											"end": 3403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3403,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3350,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3403,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3295,
											"end": 3413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3452,
											"end": 3454,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3478,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3514,
											"end": 3520,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3512,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3521,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3478,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3478,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3478,
											"end": 3531,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3478,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3468,
											"end": 3531,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3468,
											"end": 3531,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 3541,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2929,
											"end": 3548,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2929,
											"end": 3548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2929,
											"end": 3548,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2929,
											"end": 3548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2929,
											"end": 3548,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2929,
											"end": 3548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3672,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3554,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3659,
											"end": 3664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 3641,
											"end": 3665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3665,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3641,
											"end": 3665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3639,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3666,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3672,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3672,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3765,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3790,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3802,
											"end": 4134,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 3802,
											"end": 4134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3923,
											"end": 3927,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3961,
											"end": 3963,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3950,
											"end": 3959,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 3964,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3938,
											"end": 3964,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3938,
											"end": 3964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4042,
											"end": 4043,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4031,
											"end": 4040,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4044,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4024,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3974,
											"end": 4045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4045,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3974,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 4123,
											"end": 4125,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4121,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4099,
											"end": 4105,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4055,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4127,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 4055,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3802,
											"end": 4134,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3802,
											"end": 4134,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3802,
											"end": 4134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3802,
											"end": 4134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3802,
											"end": 4134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3802,
											"end": 4134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4283,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 4140,
											"end": 4283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4207,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4240,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4271,
											"end": 4276,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4240,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4277,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4240,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4227,
											"end": 4277,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4227,
											"end": 4277,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4283,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4283,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4283,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4454,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 4289,
											"end": 4454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4393,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4441,
											"end": 4446,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4393,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 4393,
											"end": 4447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4393,
											"end": 4447,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4393,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4388,
											"end": 4391,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4381,
											"end": 4448,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4460,
											"end": 4716,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4460,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4574,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4608,
											"end": 4610,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4597,
											"end": 4606,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4611,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4621,
											"end": 4709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4706,
											"end": 4707,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4695,
											"end": 4704,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4691,
											"end": 4708,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4682,
											"end": 4688,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4621,
											"end": 4709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 4621,
											"end": 4709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4621,
											"end": 4709,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4621,
											"end": 4709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4460,
											"end": 4716,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4460,
											"end": 4716,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4460,
											"end": 4716,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4460,
											"end": 4716,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4460,
											"end": 4716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4830,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4722,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4817,
											"end": 4822,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4799,
											"end": 4823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4794,
											"end": 4797,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4824,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4836,
											"end": 4944,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 4836,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4913,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4913,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 4913,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4913,
											"end": 4937,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4913,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4911,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4901,
											"end": 4938,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4836,
											"end": 4944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4836,
											"end": 4944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4836,
											"end": 4944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4950,
											"end": 5055,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4950,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5042,
											"end": 5047,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 5025,
											"end": 5048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5048,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5025,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5020,
											"end": 5023,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5013,
											"end": 5049,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4950,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4950,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4950,
											"end": 5055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5061,
											"end": 5169,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 5061,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5138,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 5156,
											"end": 5161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5138,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 5138,
											"end": 5162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5138,
											"end": 5162,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 5138,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5133,
											"end": 5136,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5126,
											"end": 5163,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5061,
											"end": 5169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5061,
											"end": 5169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5061,
											"end": 5169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5275,
											"end": 6363,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 5275,
											"end": 6363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5464,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 5455,
											"end": 5458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5451,
											"end": 5465,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5550,
											"end": 5554,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5543,
											"end": 5548,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5539,
											"end": 5555,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5569,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5626,
											"end": 5630,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5621,
											"end": 5624,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5631,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5603,
											"end": 5615,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5569,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 5569,
											"end": 5632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5569,
											"end": 5632,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5569,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5475,
											"end": 5642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5728,
											"end": 5732,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5721,
											"end": 5726,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5717,
											"end": 5733,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5711,
											"end": 5734,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5804,
											"end": 5808,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5802,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5781,
											"end": 5793,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 5747,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 5810,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5747,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5652,
											"end": 5820,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5910,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5899,
											"end": 5904,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 5912,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 5988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 5982,
											"end": 5986,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5977,
											"end": 5980,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5973,
											"end": 5987,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 5971,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 5988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 5925,
											"end": 5988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 5988,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 5925,
											"end": 5988,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5830,
											"end": 5998,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6083,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6072,
											"end": 6077,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6084,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6062,
											"end": 6085,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6098,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 6153,
											"end": 6157,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6148,
											"end": 6151,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6144,
											"end": 6158,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6130,
											"end": 6142,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6098,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 6098,
											"end": 6159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6098,
											"end": 6159,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 6098,
											"end": 6159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 6169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6268,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6257,
											"end": 6262,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6253,
											"end": 6269,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6247,
											"end": 6270,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6283,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 6340,
											"end": 6344,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6335,
											"end": 6338,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6345,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6317,
											"end": 6329,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6283,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 6283,
											"end": 6346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6283,
											"end": 6346,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 6283,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6179,
											"end": 6356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 6363,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5275,
											"end": 6363,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5275,
											"end": 6363,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5275,
											"end": 6363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6369,
											"end": 6768,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 6369,
											"end": 6768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 6554,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6588,
											"end": 6591,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 6577,
											"end": 6586,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6592,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6592,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6592,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 6758,
											"end": 6759,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6747,
											"end": 6756,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6743,
											"end": 6760,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6734,
											"end": 6740,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 6602,
											"end": 6761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6761,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 6602,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6369,
											"end": 6768,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6369,
											"end": 6768,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6369,
											"end": 6768,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6369,
											"end": 6768,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6369,
											"end": 6768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6774,
											"end": 6917,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 6774,
											"end": 6917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6831,
											"end": 6836,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6862,
											"end": 6868,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6869,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6847,
											"end": 6869,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6847,
											"end": 6869,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6878,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 6905,
											"end": 6910,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6878,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 6878,
											"end": 6911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6878,
											"end": 6911,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 6878,
											"end": 6911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6774,
											"end": 6917,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6774,
											"end": 6917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6774,
											"end": 6917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6774,
											"end": 6917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6774,
											"end": 6917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6923,
											"end": 7045,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 6923,
											"end": 7045,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 7014,
											"end": 7019,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 6996,
											"end": 7020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7020,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6996,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6989,
											"end": 6994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6986,
											"end": 7021,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 7039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 6976,
											"end": 7039,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7035,
											"end": 7036,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7032,
											"end": 7033,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7025,
											"end": 7037,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 7039,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 6976,
											"end": 7039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6923,
											"end": 7045,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6923,
											"end": 7045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7051,
											"end": 7194,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 7051,
											"end": 7194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7108,
											"end": 7113,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7139,
											"end": 7145,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7133,
											"end": 7146,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7124,
											"end": 7146,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7124,
											"end": 7146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7155,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 7182,
											"end": 7187,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7155,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 7155,
											"end": 7188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7155,
											"end": 7188,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 7155,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7051,
											"end": 7194,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7051,
											"end": 7194,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7051,
											"end": 7194,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7051,
											"end": 7194,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7051,
											"end": 7194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7200,
											"end": 7293,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 7200,
											"end": 7293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7236,
											"end": 7243,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7276,
											"end": 7286,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7269,
											"end": 7274,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7265,
											"end": 7287,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7254,
											"end": 7287,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7254,
											"end": 7287,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7200,
											"end": 7293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7200,
											"end": 7293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7200,
											"end": 7293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7200,
											"end": 7293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7299,
											"end": 7419,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 7299,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7371,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 7388,
											"end": 7393,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7371,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 7371,
											"end": 7394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7371,
											"end": 7394,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 7371,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7364,
											"end": 7369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7361,
											"end": 7395,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7351,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 7351,
											"end": 7413,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7409,
											"end": 7410,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7406,
											"end": 7407,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7399,
											"end": 7411,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7351,
											"end": 7413,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 7351,
											"end": 7413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7299,
											"end": 7419,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7299,
											"end": 7419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7425,
											"end": 7566,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 7425,
											"end": 7566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7481,
											"end": 7486,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7512,
											"end": 7518,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7506,
											"end": 7519,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7497,
											"end": 7519,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7497,
											"end": 7519,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7528,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 7554,
											"end": 7559,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7528,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 7528,
											"end": 7560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7528,
											"end": 7560,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 7528,
											"end": 7560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7425,
											"end": 7566,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7425,
											"end": 7566,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7425,
											"end": 7566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7425,
											"end": 7566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7425,
											"end": 7566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 8390,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 7572,
											"end": 8390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7668,
											"end": 7674,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7676,
											"end": 7682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7684,
											"end": 7690,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7692,
											"end": 7698,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7741,
											"end": 7744,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 7729,
											"end": 7738,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7720,
											"end": 7727,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7716,
											"end": 7739,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7712,
											"end": 7745,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 7709,
											"end": 7829,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7709,
											"end": 7829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 7709,
											"end": 7829,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7748,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 7748,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 7748,
											"end": 7827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7748,
											"end": 7827,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 7748,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7709,
											"end": 7829,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 7709,
											"end": 7829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7868,
											"end": 7869,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7893,
											"end": 7957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 7949,
											"end": 7956,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7940,
											"end": 7946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7929,
											"end": 7938,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7925,
											"end": 7947,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7893,
											"end": 7957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 7893,
											"end": 7957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7893,
											"end": 7957,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 7893,
											"end": 7957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7883,
											"end": 7957,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7883,
											"end": 7957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8006,
											"end": 8008,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8032,
											"end": 8096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 8088,
											"end": 8095,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8079,
											"end": 8085,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8068,
											"end": 8077,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8064,
											"end": 8086,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8032,
											"end": 8096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 8032,
											"end": 8096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8032,
											"end": 8096,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 8032,
											"end": 8096,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8022,
											"end": 8096,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8022,
											"end": 8096,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7977,
											"end": 8106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8145,
											"end": 8147,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8171,
											"end": 8234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 8226,
											"end": 8233,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8217,
											"end": 8223,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8206,
											"end": 8215,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8202,
											"end": 8224,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8171,
											"end": 8234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 8171,
											"end": 8234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8171,
											"end": 8234,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 8171,
											"end": 8234,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8234,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8234,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8116,
											"end": 8244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8283,
											"end": 8285,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8309,
											"end": 8373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8356,
											"end": 8362,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8345,
											"end": 8354,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8341,
											"end": 8363,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8309,
											"end": 8373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 8309,
											"end": 8373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8309,
											"end": 8373,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 8309,
											"end": 8373,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8299,
											"end": 8373,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8299,
											"end": 8373,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8383,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 8390,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 8390,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 8390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 8390,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 8390,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 8390,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 8390,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 8390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/SwapUniswap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DAI()": "e0bab4c4",
							"USDC()": "89a30271",
							"USDT()": "c54e44eb",
							"WETH()": "ad5c4648",
							"getAmountOutMinimum(address,address,uint256)": "ccbfc16c",
							"poolFee()": "089fe6aa",
							"quoterV2()": "e20dccb2",
							"swapRouter()": "c31c9c07"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"_swapRouter\",\"type\":\"address\"},{\"internalType\":\"contract IQuoterV2\",\"name\":\"_quoterv2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dai\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"getAmountOutMinimum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96After\",\"type\":\"uint160\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoterV2\",\"outputs\":[{\"internalType\":\"contract IQuoterV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SwapUniswap.sol\":\"SwapUniswap\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol\":{\"keccak256\":\"0x7e931f0cd34811851031c4f1318f59b4a4b427a2d2e2968b8e5ed87a9f7f89d6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://63a8d7dcdd081004356b39e1b8e19ee56b02b3abd3e4165781bde1a100a35bed\",\"dweb:/ipfs/QmdfpYkMxoaeEd646aSioLZcPodnCnpZy9Ny4j98uAba2J\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"contracts/SwapUniswap.sol\":{\"keccak256\":\"0x3abe53db1264b3eb1c5ee3922e388d501a1eca6ae30d43a33d21cf6e2593b39b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e55b71cd7b6ac9bc7e1ae9e56a780bcf1964abfb2bde3c295653b1de50df29c7\",\"dweb:/ipfs/QmV1m2fkrPiwZ1m8VeuMmHoW3TYKtm22iNj2jRejLR6ti1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 92,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:1",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 91,
							"linearizedBaseContracts": [
								91
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:1",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1197:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 82,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1226:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 84,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1255:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 86,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:1"
									},
									"scope": 91,
									"src": "1157:133:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 92,
							"src": "215:1077:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1248:1"
				},
				"id": 1
			},
			"@uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol",
					"exportedSymbols": {
						"IQuoterV2": [
							184
						]
					},
					"id": 185,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 93,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"id": 94,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IQuoterV2",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 95,
								"nodeType": "StructuredDocumentation",
								"src": "91:451:2",
								"text": "@title QuoterV2 Interface\n @notice Supports quoting the calculated amounts from exact input or exact output swaps.\n @notice For each pool also tells you the number of initialized ticks crossed and the sqrt price of the pool after the swap.\n @dev These functions are not marked view because they rely on calling non-view functions and reverting\n to compute the result. They are also not gas efficient and should not be called on-chain."
							},
							"fullyImplemented": false,
							"id": 184,
							"linearizedBaseContracts": [
								184
							],
							"name": "IQuoterV2",
							"nameLocation": "552:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "568:618:2",
										"text": "@notice Returns the amount out received for a given exact input swap without executing the swap\n @param path The path of the swap, i.e. each token pair and the pool fee\n @param amountIn The amount of the first token to swap\n @return amountOut The amount of the last token that would be received\n @return sqrtPriceX96AfterList List of the sqrt price after the swap for each pool in the path\n @return initializedTicksCrossedList List of the initialized ticks that the swap crossed for each pool in the path\n @return gasEstimate The estimate of the gas that the swap consumes"
									},
									"functionSelector": "cdca1753",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactInput",
									"nameLocation": "1200:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1229:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1216:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 97,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1216:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1243:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1235:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1215:37:2"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1308:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1300:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1300:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "sqrtPriceX96AfterList",
												"nameLocation": "1348:21:2",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1331:38:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 104,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1331:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 105,
													"nodeType": "ArrayTypeName",
													"src": "1331:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "initializedTicksCrossedList",
												"nameLocation": "1399:27:2",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1383:43:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 107,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1383:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 108,
													"nodeType": "ArrayTypeName",
													"src": "1383:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nameLocation": "1448:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1440:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1440:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1286:183:2"
									},
									"scope": 184,
									"src": "1191:279:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IQuoterV2.QuoteExactInputSingleParams",
									"id": 124,
									"members": [
										{
											"constant": false,
											"id": 115,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1529:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 124,
											"src": "1521:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 114,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1521:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 117,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1554:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 124,
											"src": "1546:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 116,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1546:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 119,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1580:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 124,
											"src": "1572:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 118,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1572:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 121,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1605:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 124,
											"src": "1598:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 120,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1598:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 123,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1626:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 124,
											"src": "1618:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 122,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1618:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "QuoteExactInputSingleParams",
									"nameLocation": "1483:27:2",
									"nodeType": "StructDefinition",
									"scope": 184,
									"src": "1476:174:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "1656:790:2",
										"text": "@notice Returns the amount out received for a given exact input but for a swap of a single pool\n @param params The params for the quote, encoded as `QuoteExactInputSingleParams`\n tokenIn The token being swapped in\n tokenOut The token being swapped out\n fee The fee of the token pool to consider for the pair\n amountIn The desired input amount\n sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n @return amountOut The amount of `tokenOut` that would be received\n @return sqrtPriceX96After The sqrt price of the pool after the swap\n @return initializedTicksCrossed The number of initialized ticks that the swap crossed\n @return gasEstimate The estimate of the gas that the swap consumes"
									},
									"functionSelector": "c6a5026a",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactInputSingle",
									"nameLocation": "2460:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2517:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "2482:41:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$124_memory_ptr",
													"typeString": "struct IQuoterV2.QuoteExactInputSingleParams"
												},
												"typeName": {
													"id": 127,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 126,
														"name": "QuoteExactInputSingleParams",
														"nameLocations": [
															"2482:27:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 124,
														"src": "2482:27:2"
													},
													"referencedDeclaration": 124,
													"src": "2482:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$124_storage_ptr",
														"typeString": "struct IQuoterV2.QuoteExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2481:43:2"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2580:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "2572:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "sqrtPriceX96After",
												"nameLocation": "2611:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "2603:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 132,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "initializedTicksCrossed",
												"nameLocation": "2649:23:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "2642:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 134,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2642:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nameLocation": "2694:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "2686:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:157:2"
									},
									"scope": 184,
									"src": "2451:265:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "2722:654:2",
										"text": "@notice Returns the amount in required for a given exact output swap without executing the swap\n @param path The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\n @param amountOut The amount of the last token to receive\n @return amountIn The amount of first token required to be paid\n @return sqrtPriceX96AfterList List of the sqrt price after the swap for each pool in the path\n @return initializedTicksCrossedList List of the initialized ticks that the swap crossed for each pool in the path\n @return gasEstimate The estimate of the gas that the swap consumes"
									},
									"functionSelector": "2f80bb1d",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactOutput",
									"nameLocation": "3390:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3407:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 141,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3407:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3434:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3426:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3426:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3406:38:2"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3500:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3492:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "sqrtPriceX96AfterList",
												"nameLocation": "3539:21:2",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3522:38:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 148,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "3522:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 149,
													"nodeType": "ArrayTypeName",
													"src": "3522:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "initializedTicksCrossedList",
												"nameLocation": "3590:27:2",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3574:43:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 151,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "3574:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 152,
													"nodeType": "ArrayTypeName",
													"src": "3574:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nameLocation": "3639:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3631:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3478:182:2"
									},
									"scope": 184,
									"src": "3381:280:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IQuoterV2.QuoteExactOutputSingleParams",
									"id": 168,
									"members": [
										{
											"constant": false,
											"id": 159,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "3721:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 168,
											"src": "3713:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 158,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3713:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 161,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "3746:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 168,
											"src": "3738:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 160,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3738:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 163,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "3772:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 168,
											"src": "3764:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3764:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 165,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "3795:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 168,
											"src": "3788:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 164,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "3788:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 167,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "3816:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 168,
											"src": "3808:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 166,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "3808:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "QuoteExactOutputSingleParams",
									"nameLocation": "3674:28:2",
									"nodeType": "StructDefinition",
									"scope": 184,
									"src": "3667:173:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "3846:838:2",
										"text": "@notice Returns the amount in required to receive the given exact output amount but for a swap of a single pool\n @param params The params for the quote, encoded as `QuoteExactOutputSingleParams`\n tokenIn The token being swapped in\n tokenOut The token being swapped out\n fee The fee of the token pool to consider for the pair\n amountOut The desired output amount\n sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n @return amountIn The amount required as the input for the swap in order to receive `amountOut`\n @return sqrtPriceX96After The sqrt price of the pool after the swap\n @return initializedTicksCrossed The number of initialized ticks that the swap crossed\n @return gasEstimate The estimate of the gas that the swap consumes"
									},
									"functionSelector": "bd21704a",
									"id": 183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactOutputSingle",
									"nameLocation": "4698:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "4757:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "4721:42:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$168_memory_ptr",
													"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams"
												},
												"typeName": {
													"id": 171,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 170,
														"name": "QuoteExactOutputSingleParams",
														"nameLocations": [
															"4721:28:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 168,
														"src": "4721:28:2"
													},
													"referencedDeclaration": 168,
													"src": "4721:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$168_storage_ptr",
														"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4720:44:2"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "4820:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "4812:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "sqrtPriceX96After",
												"nameLocation": "4850:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "4842:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 176,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4842:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "initializedTicksCrossed",
												"nameLocation": "4888:23:2",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "4881:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 178,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4881:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nameLocation": "4933:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "4925:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4925:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4798:156:2"
									},
									"scope": 184,
									"src": "4689:266:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 185,
							"src": "542:4415:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:4913:2"
				},
				"id": 2
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							284
						],
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 285,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 186,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"id": 187,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:3"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 188,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 285,
							"sourceUnit": 92,
							"src": "91:83:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 190,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"305:22:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 91,
										"src": "305:22:3"
									},
									"id": 191,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:3"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 189,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:3",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 284,
							"linearizedBaseContracts": [
								284,
								91
							],
							"name": "ISwapRouter",
							"nameLocation": "290:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 208,
									"members": [
										{
											"constant": false,
											"id": 193,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "382:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 208,
											"src": "374:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 192,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 195,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "407:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 208,
											"src": "399:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 194,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 197,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "432:3:3",
											"nodeType": "VariableDeclaration",
											"scope": 208,
											"src": "425:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 196,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 199,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "453:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 208,
											"src": "445:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 198,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "480:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 208,
											"src": "472:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 200,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 203,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "506:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 208,
											"src": "498:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 202,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 205,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "532:16:3",
											"nodeType": "VariableDeclaration",
											"scope": 208,
											"src": "524:24:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 204,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 207,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "566:17:3",
											"nodeType": "VariableDeclaration",
											"scope": 208,
											"src": "558:25:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 206,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "341:22:3",
									"nodeType": "StructDefinition",
									"scope": 284,
									"src": "334:256:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:3",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "860:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "909:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "877:38:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$208_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 211,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 210,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"877:22:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 208,
														"src": "877:22:3"
													},
													"referencedDeclaration": 208,
													"src": "877:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$208_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:3"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "951:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "943:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:3"
									},
									"scope": 284,
									"src": "851:111:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 228,
									"members": [
										{
											"constant": false,
											"id": 219,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1008:4:3",
											"nodeType": "VariableDeclaration",
											"scope": 228,
											"src": "1002:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 218,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 221,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1030:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 228,
											"src": "1022:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 220,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 223,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1057:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 228,
											"src": "1049:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 222,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 225,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1083:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 228,
											"src": "1075:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 224,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 227,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1109:16:3",
											"nodeType": "VariableDeclaration",
											"scope": 228,
											"src": "1101:24:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 226,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "975:16:3",
									"nodeType": "StructDefinition",
									"scope": 284,
									"src": "968:164:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:3",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1425:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1462:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1436:32:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$228_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 231,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 230,
														"name": "ExactInputParams",
														"nameLocations": [
															"1436:16:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 228,
														"src": "1436:16:3"
													},
													"referencedDeclaration": 228,
													"src": "1436:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$228_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:3"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1504:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1496:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:3"
									},
									"scope": 284,
									"src": "1416:99:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 254,
									"members": [
										{
											"constant": false,
											"id": 239,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1570:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 254,
											"src": "1562:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 238,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 241,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1595:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 254,
											"src": "1587:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 240,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 243,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1620:3:3",
											"nodeType": "VariableDeclaration",
											"scope": 254,
											"src": "1613:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 242,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 245,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1641:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 254,
											"src": "1633:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 244,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 247,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1668:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 254,
											"src": "1660:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 246,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 249,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1694:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 254,
											"src": "1686:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 248,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 251,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1721:15:3",
											"nodeType": "VariableDeclaration",
											"scope": 254,
											"src": "1713:23:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 250,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 253,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1754:17:3",
											"nodeType": "VariableDeclaration",
											"scope": 254,
											"src": "1746:25:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 252,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1528:23:3",
									"nodeType": "StructDefinition",
									"scope": 284,
									"src": "1521:257:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:3",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2048:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2099:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "2066:39:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$254_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 257,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 256,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2066:23:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 254,
														"src": "2066:23:3"
													},
													"referencedDeclaration": 254,
													"src": "2066:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$254_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:3"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2141:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "2133:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:3"
									},
									"scope": 284,
									"src": "2039:112:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 274,
									"members": [
										{
											"constant": false,
											"id": 265,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2198:4:3",
											"nodeType": "VariableDeclaration",
											"scope": 274,
											"src": "2192:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 264,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 267,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2220:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 274,
											"src": "2212:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 266,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 269,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2247:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 274,
											"src": "2239:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 268,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 271,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2273:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 274,
											"src": "2265:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 270,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 273,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2300:15:3",
											"nodeType": "VariableDeclaration",
											"scope": 274,
											"src": "2292:23:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 272,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2164:17:3",
									"nodeType": "StructDefinition",
									"scope": 284,
									"src": "2157:165:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:3",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 283,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2626:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2665:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "2638:33:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$274_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 277,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 276,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2638:17:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 274,
														"src": "2638:17:3"
													},
													"referencedDeclaration": 274,
													"src": "2638:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$274_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:3"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2707:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "2699:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:3"
									},
									"scope": 284,
									"src": "2617:100:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 285,
							"src": "280:2439:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2675:3"
				},
				"id": 3
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"TransferHelper": [
							455
						]
					},
					"id": 456,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 456,
							"sourceUnit": 78,
							"src": "71:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 455,
							"linearizedBaseContracts": [
								455
							],
							"name": "TransferHelper",
							"nameLocation": "137:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "690:229:4",
										"statements": [
											{
												"assignments": [
													300,
													302
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "706:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 335,
														"src": "701:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 299,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "701:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "728:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 335,
														"src": "715:17:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 301,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "715:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 307,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "782:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "789:12:4",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "782:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "802:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "782:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 310,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "812:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 311,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "818:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 312,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "822:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 305,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "759:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "763:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "759:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "759:69:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 303,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "748:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "754:4:4",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "748:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "748:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "700:129:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 317,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "847:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 318,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "859:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "864:6:4",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "859:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 320,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "874:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "859:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 324,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "890:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 326,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "897:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 325,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "897:4:4",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 327,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "896:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 322,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "879:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 323,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "883:6:4",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "879:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "879:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "859:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 330,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "858:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "847:57:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535446",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "906:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															},
															"value": "STF"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "839:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "839:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "839:73:4"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "158:398:4",
										"text": "@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "570:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "604:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "596:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "627:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "619:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "649:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "641:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "669:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "661:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:94:4"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "690:0:4"
									},
									"scope": 455,
									"src": "561:358:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "1314:206:4",
										"statements": [
											{
												"assignments": [
													347,
													349
												],
												"declarations": [
													{
														"constant": false,
														"id": 347,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1330:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "1325:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 346,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1325:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 349,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1352:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "1339:17:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 348,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1339:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 361,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 354,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "1394:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1401:8:4",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "1394:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1410:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1394:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 357,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "1420:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 358,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "1424:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 352,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1371:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1375:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1371:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1371:59:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 350,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "1360:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1366:4:4",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1360:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1324:107:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 363,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "1449:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 364,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 349,
																					"src": "1461:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1466:6:4",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1461:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 366,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1476:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1461:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 370,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 349,
																					"src": "1492:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 372,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1499:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 371,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1499:4:4",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 373,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1498:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 368,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1481:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 369,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1485:6:4",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1481:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1481:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1461:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 376,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1460:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1449:57:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5354",
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1508:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															},
															"value": "ST"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															}
														],
														"id": 362,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1441:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1441:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1441:72:4"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "925:281:4",
										"text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
									},
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1220:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1250:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1242:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1273:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1265:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1293:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1285:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:72:4"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1314:0:4"
									},
									"scope": 455,
									"src": "1211:309:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "1975:205:4",
										"statements": [
											{
												"assignments": [
													393,
													395
												],
												"declarations": [
													{
														"constant": false,
														"id": 393,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1991:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 427,
														"src": "1986:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 392,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1986:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 395,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "2013:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 427,
														"src": "2000:17:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 394,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2000:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 407,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 400,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "2055:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2062:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2055:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.approve(address,uint256) returns (bool)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2070:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2055:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 403,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "2080:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 404,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "2084:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 398,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2032:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2036:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2032:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2032:58:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 396,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "2021:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2027:4:4",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "2021:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2021:70:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1985:106:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 409,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "2109:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 410,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 395,
																					"src": "2121:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 411,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2126:6:4",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2121:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 412,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2136:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2121:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 416,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 395,
																					"src": "2152:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 418,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2159:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 417,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "2159:4:4",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 419,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2158:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 414,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2141:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 415,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2145:6:4",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "2141:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2141:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2121:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 422,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2120:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2109:57:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5341",
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2168:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															},
															"value": "SA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															}
														],
														"id": 408,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2101:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2101:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "2101:72:4"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "1526:342:4",
										"text": "@notice Approves the stipulated contract to spend the given allowance in the given token\n @dev Errors with 'SA' if transfer fails\n @param token The contract address of the token to be approved\n @param to The target of the approval\n @param value The amount of the given token the target will be allowed to spend"
									},
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1882:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "1903:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1934:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "1926:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1954:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "1946:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:72:4"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1975:0:4"
									},
									"scope": 455,
									"src": "1873:307:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "2431:104:4",
										"statements": [
											{
												"assignments": [
													437,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2447:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "2442:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 436,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2442:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 447,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2492:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "2482:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 442,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2486:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2482:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 438,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "2460:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2463:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2460:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 440,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "2475:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2460:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2441:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 449,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "2513:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535445",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2522:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															},
															"value": "STE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															}
														],
														"id": 448,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2505:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "2505:23:4"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "2186:179:4",
										"text": "@notice Transfers ETH to the recipient address\n @dev Fails with `STE`\n @param to The destination of the transfer\n @param value The value to be transferred"
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "2379:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2403:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "2395:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2415:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "2407:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:27:4"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2431:0:4"
									},
									"scope": 455,
									"src": "2370:165:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 456,
							"src": "129:2408:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2493:4"
				},
				"id": 4
			},
			"contracts/SwapUniswap.sol": {
				"ast": {
					"absolutePath": "contracts/SwapUniswap.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IQuoterV2": [
							184
						],
						"ISwapRouter": [
							284
						],
						"IUniswapV3SwapCallback": [
							91
						],
						"SwapUniswap": [
							697
						],
						"TransferHelper": [
							455
						]
					},
					"id": 698,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 457,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"id": 458,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "59:19:5"
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"id": 459,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 456,
							"src": "82:70:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 460,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 285,
							"src": "154:68:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol",
							"id": 461,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 185,
							"src": "224:66:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SwapUniswap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 697,
							"linearizedBaseContracts": [
								697
							],
							"name": "SwapUniswap",
							"nameLocation": "303:11:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 464,
									"mutability": "immutable",
									"name": "swapRouter",
									"nameLocation": "351:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "322:39:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISwapRouter_$284",
										"typeString": "contract ISwapRouter"
									},
									"typeName": {
										"id": 463,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 462,
											"name": "ISwapRouter",
											"nameLocations": [
												"322:11:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 284,
											"src": "322:11:5"
										},
										"referencedDeclaration": 284,
										"src": "322:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$284",
											"typeString": "contract ISwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e20dccb2",
									"id": 467,
									"mutability": "immutable",
									"name": "quoterV2",
									"nameLocation": "395:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "368:35:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IQuoterV2_$184",
										"typeString": "contract IQuoterV2"
									},
									"typeName": {
										"id": 466,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 465,
											"name": "IQuoterV2",
											"nameLocations": [
												"368:9:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 184,
											"src": "368:9:5"
										},
										"referencedDeclaration": 184,
										"src": "368:9:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IQuoterV2_$184",
											"typeString": "contract IQuoterV2"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "SwapUniswap.StableType",
									"id": 471,
									"members": [
										{
											"id": 468,
											"name": "DAI",
											"nameLocation": "439:3:5",
											"nodeType": "EnumValue",
											"src": "439:3:5"
										},
										{
											"id": 469,
											"name": "USDT",
											"nameLocation": "453:4:5",
											"nodeType": "EnumValue",
											"src": "453:4:5"
										},
										{
											"id": 470,
											"name": "USDC",
											"nameLocation": "468:4:5",
											"nodeType": "EnumValue",
											"src": "468:4:5"
										}
									],
									"name": "StableType",
									"nameLocation": "417:10:5",
									"nodeType": "EnumDefinition",
									"src": "412:67:5"
								},
								{
									"constant": false,
									"functionSelector": "e0bab4c4",
									"id": 473,
									"mutability": "immutable",
									"name": "DAI",
									"nameLocation": "512:3:5",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "487:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 472,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "487:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c54e44eb",
									"id": 475,
									"mutability": "immutable",
									"name": "USDT",
									"nameLocation": "547:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "522:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 474,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "522:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "89a30271",
									"id": 477,
									"mutability": "immutable",
									"name": "USDC",
									"nameLocation": "583:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "558:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 476,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "558:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ad5c4648",
									"id": 480,
									"mutability": "constant",
									"name": "WETH",
									"nameLocation": "618:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "594:73:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 478,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "594:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
										"id": 479,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "625:42:5",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "089fe6aa",
									"id": 483,
									"mutability": "constant",
									"name": "poolFee",
									"nameLocation": "699:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "676:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint24",
										"typeString": "uint24"
									},
									"typeName": {
										"id": 481,
										"name": "uint24",
										"nodeType": "ElementaryTypeName",
										"src": "676:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint24",
											"typeString": "uint24"
										}
									},
									"value": {
										"hexValue": "33303030",
										"id": 482,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "709:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3000_by_1",
											"typeString": "int_const 3000"
										},
										"value": "3000"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "876:141:5",
										"statements": [
											{
												"expression": {
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 498,
														"name": "swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "887:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$284",
															"typeString": "contract ISwapRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 499,
														"name": "_swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "900:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$284",
															"typeString": "contract ISwapRouter"
														}
													},
													"src": "887:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$284",
														"typeString": "contract ISwapRouter"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "887:24:5"
											},
											{
												"expression": {
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 502,
														"name": "quoterV2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "922:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IQuoterV2_$184",
															"typeString": "contract IQuoterV2"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 503,
														"name": "_quoterv2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "933:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IQuoterV2_$184",
															"typeString": "contract IQuoterV2"
														}
													},
													"src": "922:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IQuoterV2_$184",
														"typeString": "contract IQuoterV2"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "922:20:5"
											},
											{
												"expression": {
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 506,
														"name": "DAI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "953:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 507,
														"name": "_dai",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "959:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "953:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "953:10:5"
											},
											{
												"expression": {
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 510,
														"name": "USDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "974:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 511,
														"name": "_usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "981:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "974:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "974:12:5"
											},
											{
												"expression": {
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 514,
														"name": "USDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "997:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 515,
														"name": "_usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "1004:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "997:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "997:12:5"
											}
										]
									},
									"id": 519,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "_swapRouter",
												"nameLocation": "756:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "744:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISwapRouter_$284",
													"typeString": "contract ISwapRouter"
												},
												"typeName": {
													"id": 485,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 484,
														"name": "ISwapRouter",
														"nameLocations": [
															"744:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 284,
														"src": "744:11:5"
													},
													"referencedDeclaration": 284,
													"src": "744:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$284",
														"typeString": "contract ISwapRouter"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "_quoterv2",
												"nameLocation": "788:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "778:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IQuoterV2_$184",
													"typeString": "contract IQuoterV2"
												},
												"typeName": {
													"id": 488,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 487,
														"name": "IQuoterV2",
														"nameLocations": [
															"778:9:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 184,
														"src": "778:9:5"
													},
													"referencedDeclaration": 184,
													"src": "778:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IQuoterV2_$184",
														"typeString": "contract IQuoterV2"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "_dai",
												"nameLocation": "816:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "808:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "808:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "_usdt",
												"nameLocation": "839:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "831:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "_usdc",
												"nameLocation": "863:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "855:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "855:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:142:5"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "876:0:5"
									},
									"scope": 697,
									"src": "722:295:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "1210:429:5",
										"statements": [
											{
												"assignments": [
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "1266:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 555,
														"src": "1221:51:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$124_memory_ptr",
															"typeString": "struct IQuoterV2.QuoteExactInputSingleParams"
														},
														"typeName": {
															"id": 535,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 534,
																"name": "IQuoterV2.QuoteExactInputSingleParams",
																"nameLocations": [
																	"1221:9:5",
																	"1231:27:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 124,
																"src": "1221:37:5"
															},
															"referencedDeclaration": 124,
															"src": "1221:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$124_storage_ptr",
																"typeString": "struct IQuoterV2.QuoteExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 545,
												"initialValue": {
													"arguments": [
														{
															"id": 539,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "1355:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "1391:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "1428:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 542,
															"name": "poolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "1460:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"hexValue": "30",
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1505:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 537,
															"name": "IQuoterV2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "1275:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IQuoterV2_$184_$",
																"typeString": "type(contract IQuoterV2)"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1299:27:5",
														"memberName": "QuoteExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 124,
														"src": "1275:51:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_QuoteExactInputSingleParams_$124_storage_ptr_$",
															"typeString": "type(struct IQuoterV2.QuoteExactInputSingleParams storage pointer)"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1346:7:5",
														"1381:8:5",
														"1418:8:5",
														"1455:3:5",
														"1486:17:5"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"amountIn",
														"fee",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "1275:247:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$124_memory_ptr",
														"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1221:301:5"
											},
											{
												"expression": {
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 546,
																"name": "amountOutMinimum",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "1536:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 547,
																"name": "sqrtPriceX96After",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "1554:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															null,
															null
														],
														"id": 548,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "1535:41:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$__$__$",
															"typeString": "tuple(uint256,uint160,,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 551,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 536,
																"src": "1624:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$124_memory_ptr",
																	"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$124_memory_ptr",
																	"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 549,
																"name": "quoterV2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "1579:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IQuoterV2_$184",
																	"typeString": "contract IQuoterV2"
																}
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1602:21:5",
															"memberName": "quoteExactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 139,
															"src": "1579:44:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr_$returns$_t_uint256_$_t_uint160_$_t_uint32_$_t_uint256_$",
																"typeString": "function (struct IQuoterV2.QuoteExactInputSingleParams memory) external returns (uint256,uint160,uint32,uint256)"
															}
														},
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1579:52:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$_t_uint32_$_t_uint256_$",
															"typeString": "tuple(uint256,uint160,uint32,uint256)"
														}
													},
													"src": "1535:96:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "1535:96:5"
											}
										]
									},
									"functionSelector": "ccbfc16c",
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOutMinimum",
									"nameLocation": "1034:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "1072:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "1064:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1064:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "1098:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "1090:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1090:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1125:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "1117:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1117:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1053:87:5"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "amountOutMinimum",
												"nameLocation": "1165:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "1157:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "sqrtPriceX96After",
												"nameLocation": "1191:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "1183:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 529,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1183:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:53:5"
									},
									"scope": 697,
									"src": "1025:614:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "2266:901:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 571,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "2323:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 572,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2343:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2347:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2343:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 576,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2376:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapUniswap_$697",
																		"typeString": "contract SwapUniswap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapUniswap_$697",
																		"typeString": "contract SwapUniswap"
																	}
																],
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2368:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 574,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2368:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2368:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 578,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "2396:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 568,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "2277:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$455_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2292:16:5",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 336,
														"src": "2277:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2277:138:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "2277:138:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 584,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "2455:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 587,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "2470:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$284",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$284",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2462:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 585,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2462:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2462:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "2483:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 581,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "2428:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$455_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2443:11:5",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 428,
														"src": "2428:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2428:64:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "2428:64:5"
											},
											{
												"assignments": [
													593,
													595
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "amountOutMinimum",
														"nameLocation": "2528:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 628,
														"src": "2520:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 592,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2520:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 595,
														"mutability": "mutable",
														"name": "sqrtPriceX96After",
														"nameLocation": "2567:17:5",
														"nodeType": "VariableDeclaration",
														"scope": 628,
														"src": "2559:25:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 594,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "2559:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 601,
												"initialValue": {
													"arguments": [
														{
															"id": 597,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "2618:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 598,
															"name": "stable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "2625:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 599,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "2633:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 596,
														"name": "getAmountOutMinimum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "2598:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint160_$",
															"typeString": "function (address,address,uint256) returns (uint256,uint160)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2598:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$",
														"typeString": "tuple(uint256,uint160)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2505:137:5"
											},
											{
												"assignments": [
													606
												],
												"declarations": [
													{
														"constant": false,
														"id": 606,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "2697:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 628,
														"src": "2655:48:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$208_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 605,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 604,
																"name": "ISwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"2655:11:5",
																	"2667:22:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 208,
																"src": "2655:34:5"
															},
															"referencedDeclaration": 208,
															"src": "2655:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$208_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 620,
												"initialValue": {
													"arguments": [
														{
															"id": 609,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "2783:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 610,
															"name": "stable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "2817:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 611,
															"name": "poolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "2847:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"expression": {
																"id": 612,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2884:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2888:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2884:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 614,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2923:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2929:9:5",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2923:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 616,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "2967:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 617,
															"name": "amountOutMinimum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "3012:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 618,
															"name": "sqrtPriceX96After",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "3066:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"expression": {
															"id": 607,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "2706:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$284_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2732:22:5",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "2706:48:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$208_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"2774:7:5",
														"2807:8:5",
														"2842:3:5",
														"2873:9:5",
														"2913:8:5",
														"2957:8:5",
														"2994:16:5",
														"3047:17:5"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "2706:393:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$208_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2655:444:5"
											},
											{
												"expression": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 621,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "3112:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 624,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "3152:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$208_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$208_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 622,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "3124:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$284",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3135:16:5",
															"memberName": "exactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 217,
															"src": "3124:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$208_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3124:35:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3112:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "3112:47:5"
											}
										]
									},
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "1647:463:5",
										"text": "@notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\n using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\n @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n @param amountIn The exact amount of DAI that will be swapped for WETH9.\n @return amountOut The amount of WETH9 received."
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactInputSingle",
									"nameLocation": "2125:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2164:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "2156:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2156:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2191:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "2183:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "stable",
												"nameLocation": "2215:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "2207:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2145:83:5"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2255:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "2247:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2247:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2246:19:5"
									},
									"scope": 697,
									"src": "2116:1051:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "3834:644:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "3891:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 645,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3911:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3915:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3911:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 649,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3944:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapUniswap_$697",
																		"typeString": "contract SwapUniswap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapUniswap_$697",
																		"typeString": "contract SwapUniswap"
																	}
																],
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3936:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 647,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3936:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3936:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 651,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "3964:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 641,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "3845:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$455_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3860:16:5",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 336,
														"src": "3845:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3845:138:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "3845:138:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 657,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "4023:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 660,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "4038:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$284",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$284",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4030:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 658,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4030:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4030:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 662,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "4051:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 654,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "3996:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$455_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 656,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4011:11:5",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 428,
														"src": "3996:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3996:64:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "3996:64:5"
											},
											{
												"assignments": [
													669
												],
												"declarations": [
													{
														"constant": false,
														"id": 669,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "4109:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 695,
														"src": "4073:42:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputParams_$228_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputParams"
														},
														"typeName": {
															"id": 668,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 667,
																"name": "ISwapRouter.ExactInputParams",
																"nameLocations": [
																	"4073:11:5",
																	"4085:16:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 228,
																"src": "4073:28:5"
															},
															"referencedDeclaration": 228,
															"src": "4073:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputParams_$228_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 687,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 674,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "4203:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 675,
																	"name": "poolFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 483,
																	"src": "4210:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																{
																	"id": 676,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4219:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 677,
																	"name": "poolFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 483,
																	"src": "4225:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																{
																	"id": 678,
																	"name": "stable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "4234:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 672,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4186:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4190:12:5",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "4186:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4186:55:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"expression": {
																"id": 680,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4271:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4275:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4271:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 682,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4310:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4316:9:5",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4310:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 684,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "4354:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4399:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 670,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "4118:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$284_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4144:16:5",
														"memberName": "ExactInputParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 228,
														"src": "4118:42:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputParams_$228_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputParams storage pointer)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"4180:4:5",
														"4260:9:5",
														"4300:8:5",
														"4344:8:5",
														"4381:16:5"
													],
													"names": [
														"path",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum"
													],
													"nodeType": "FunctionCall",
													"src": "4118:298:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$228_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4073:343:5"
											},
											{
												"expression": {
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 688,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "4429:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 691,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "4463:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputParams_$228_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputParams_$228_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputParams memory"
																}
															],
															"expression": {
																"id": 689,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "4441:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$284",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4452:10:5",
															"memberName": "exactInput",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 237,
															"src": "4441:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputParams_$228_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactInputParams memory) payable external returns (uint256)"
															}
														},
														"id": 692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4441:29:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4429:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "4429:41:5"
											}
										]
									},
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "3175:501:5",
										"text": "@notice swapInputMultiplePools swaps a fixed amount of DAI for a maximum possible amount of WETH9 through an intermediary pool.\n For this example, we will swap DAI to USDC, then USDC to WETH9 to achieve our desired output.\n @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n @param amountIn The amount of DAI to be swapped.\n @return amountOut The amount of WETH9 received after the swap."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactInputMultihop",
									"nameLocation": "3691:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3732:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "3724:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3724:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3759:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "3751:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3751:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "stable",
												"nameLocation": "3783:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "3775:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3775:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3713:83:5"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3823:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "3815:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3815:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3814:19:5"
									},
									"scope": 697,
									"src": "3682:796:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 698,
							"src": "294:4187:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:4450:5"
				},
				"id": 5
			}
		}
	}
}