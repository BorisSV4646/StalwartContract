{
	"id": "aebf79b544e4142db863c947d27f18b3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SwapUniswap.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.26;\r\npragma abicoder v2;\r\n\r\nimport \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\";\r\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\r\nimport \"@uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol\";\r\nimport \"./IUniswapPool.sol\";\r\n\r\ncontract SwapUniswap {\r\n    ISwapRouter public immutable swapRouter;\r\n    IQuoterV2 public immutable quoterV2;\r\n    IUniswapV3Factory public immutable uniswapV3Factory;\r\n\r\n    uint24[] public feeTiers = [500, 3000, 10000];\r\n\r\n    enum StableType {\r\n        DAI,\r\n        USDT,\r\n        USDC\r\n    }\r\n\r\n    address public immutable DAI;\r\n    address public immutable USDT;\r\n    address public immutable USDC;\r\n    address public immutable WETH;\r\n\r\n    error NoAvalibleFee();\r\n\r\n    constructor(\r\n        ISwapRouter _swapRouter,\r\n        IQuoterV2 _quoterv2,\r\n        IUniswapV3Factory _uniswapV3Factory,\r\n        address _dai,\r\n        address _usdt,\r\n        address _usdc,\r\n        address _weth\r\n    ) {\r\n        swapRouter = _swapRouter;\r\n        quoterV2 = _quoterv2;\r\n        uniswapV3Factory = _uniswapV3Factory;\r\n        DAI = _dai;\r\n        USDT = _usdt;\r\n        USDC = _usdc;\r\n        WETH = _weth;\r\n    }\r\n\r\n    function getAmountOutMinimum(\r\n        address tokenIn,\r\n        address tokenOut,\r\n        uint256 amountIn,\r\n        uint24 poolFee\r\n    ) public returns (uint256 amountOutMinimum, uint160 sqrtPriceX96After) {\r\n        IQuoterV2.QuoteExactInputSingleParams memory params = IQuoterV2\r\n            .QuoteExactInputSingleParams({\r\n                tokenIn: tokenIn,\r\n                tokenOut: tokenOut,\r\n                amountIn: amountIn,\r\n                fee: poolFee,\r\n                sqrtPriceLimitX96: 0\r\n            });\r\n\r\n        (amountOutMinimum, sqrtPriceX96After, , ) = quoterV2\r\n            .quoteExactInputSingle(params);\r\n    }\r\n\r\n    /// @notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\r\n    /// using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\r\n    /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\r\n    /// @param amountIn The exact amount of DAI that will be swapped for WETH9.\r\n    /// @return amountOut The amount of WETH9 received.\r\n    function swapExactInputSingle(\r\n        uint256 amountIn,\r\n        address token,\r\n        address stable\r\n    ) internal returns (uint256 amountOut) {\r\n        uint24 poolFee = findMinimumFeeTier(token, stable);\r\n\r\n        TransferHelper.safeTransferFrom(\r\n            token,\r\n            msg.sender,\r\n            address(this),\r\n            amountIn\r\n        );\r\n\r\n        TransferHelper.safeApprove(token, address(swapRouter), amountIn);\r\n\r\n        (\r\n            uint256 amountOutMinimum,\r\n            uint160 sqrtPriceX96After\r\n        ) = getAmountOutMinimum(token, stable, amountIn, poolFee);\r\n\r\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter\r\n            .ExactInputSingleParams({\r\n                tokenIn: token,\r\n                tokenOut: stable,\r\n                fee: poolFee,\r\n                recipient: msg.sender,\r\n                deadline: block.timestamp,\r\n                amountIn: amountIn,\r\n                amountOutMinimum: amountOutMinimum,\r\n                sqrtPriceLimitX96: sqrtPriceX96After\r\n            });\r\n\r\n        amountOut = swapRouter.exactInputSingle(params);\r\n    }\r\n\r\n    /// @notice swapInputMultiplePools swaps a fixed amount of DAI for a maximum possible amount of WETH9 through an intermediary pool.\r\n    /// For this example, we will swap DAI to USDC, then USDC to WETH9 to achieve our desired output.\r\n    /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\r\n    /// @param amountIn The amount of DAI to be swapped.\r\n    /// @return amountOut The amount of WETH9 received after the swap.\r\n    function swapExactInputMultihop(\r\n        uint256 amountIn,\r\n        address token,\r\n        address stable\r\n    ) internal returns (uint256 amountOut) {\r\n        uint24 poolFee = findMinimumFeeTier(token, stable);\r\n\r\n        TransferHelper.safeTransferFrom(\r\n            token,\r\n            msg.sender,\r\n            address(this),\r\n            amountIn\r\n        );\r\n\r\n        TransferHelper.safeApprove(token, address(swapRouter), amountIn);\r\n\r\n        ISwapRouter.ExactInputParams memory params = ISwapRouter\r\n            .ExactInputParams({\r\n                path: abi.encodePacked(token, poolFee, USDC, poolFee, stable),\r\n                recipient: msg.sender,\r\n                deadline: block.timestamp,\r\n                amountIn: amountIn,\r\n                amountOutMinimum: 0\r\n            });\r\n\r\n        amountOut = swapRouter.exactInput(params);\r\n    }\r\n\r\n    function findAvailableFeeTiers(\r\n        address tokenA,\r\n        address tokenB\r\n    ) internal view returns (uint24[] memory availableFeeTiers) {\r\n        uint24[] memory availableFees = new uint24[](feeTiers.length);\r\n        uint256 count = 0;\r\n\r\n        for (uint256 i = 0; i < feeTiers.length; i++) {\r\n            address pool = uniswapV3Factory.getPool(\r\n                tokenA,\r\n                tokenB,\r\n                feeTiers[i]\r\n            );\r\n            if (pool != address(0)) {\r\n                availableFees[count] = feeTiers[i];\r\n                count++;\r\n            }\r\n        }\r\n\r\n        availableFeeTiers = new uint24[](count);\r\n        for (uint256 i = 0; i < count; i++) {\r\n            availableFeeTiers[i] = availableFees[i];\r\n        }\r\n    }\r\n\r\n    function findMinimumFeeTier(\r\n        address tokenA,\r\n        address tokenB\r\n    ) internal view returns (uint24) {\r\n        uint24[] memory availableFeeTiers = findAvailableFeeTiers(\r\n            tokenA,\r\n            tokenB\r\n        );\r\n\r\n        if (availableFeeTiers.length == 0) {\r\n            revert NoAvalibleFee();\r\n        }\r\n\r\n        uint24 minFee = availableFeeTiers[0];\r\n        for (uint256 i = 1; i < availableFeeTiers.length; i++) {\r\n            if (availableFeeTiers[i] < minFee) {\r\n                minFee = availableFeeTiers[i];\r\n            }\r\n        }\r\n\r\n        return minFee;\r\n    }\r\n}\r\n"
			},
			"contracts/IUniswapPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.26;\r\n\r\ninterface IUniswapV3Factory {\r\n    function getPool(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint24 fee\r\n    ) external view returns (address pool);\r\n}\r\n\r\ninterface IUniswapV3Pool {\r\n    function fee() external view returns (uint24);\r\n}\r\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\n/// @title QuoterV2 Interface\n/// @notice Supports quoting the calculated amounts from exact input or exact output swaps.\n/// @notice For each pool also tells you the number of initialized ticks crossed and the sqrt price of the pool after the swap.\n/// @dev These functions are not marked view because they rely on calling non-view functions and reverting\n/// to compute the result. They are also not gas efficient and should not be called on-chain.\ninterface IQuoterV2 {\n    /// @notice Returns the amount out received for a given exact input swap without executing the swap\n    /// @param path The path of the swap, i.e. each token pair and the pool fee\n    /// @param amountIn The amount of the first token to swap\n    /// @return amountOut The amount of the last token that would be received\n    /// @return sqrtPriceX96AfterList List of the sqrt price after the swap for each pool in the path\n    /// @return initializedTicksCrossedList List of the initialized ticks that the swap crossed for each pool in the path\n    /// @return gasEstimate The estimate of the gas that the swap consumes\n    function quoteExactInput(bytes memory path, uint256 amountIn)\n        external\n        returns (\n            uint256 amountOut,\n            uint160[] memory sqrtPriceX96AfterList,\n            uint32[] memory initializedTicksCrossedList,\n            uint256 gasEstimate\n        );\n\n    struct QuoteExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint256 amountIn;\n        uint24 fee;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Returns the amount out received for a given exact input but for a swap of a single pool\n    /// @param params The params for the quote, encoded as `QuoteExactInputSingleParams`\n    /// tokenIn The token being swapped in\n    /// tokenOut The token being swapped out\n    /// fee The fee of the token pool to consider for the pair\n    /// amountIn The desired input amount\n    /// sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n    /// @return amountOut The amount of `tokenOut` that would be received\n    /// @return sqrtPriceX96After The sqrt price of the pool after the swap\n    /// @return initializedTicksCrossed The number of initialized ticks that the swap crossed\n    /// @return gasEstimate The estimate of the gas that the swap consumes\n    function quoteExactInputSingle(QuoteExactInputSingleParams memory params)\n        external\n        returns (\n            uint256 amountOut,\n            uint160 sqrtPriceX96After,\n            uint32 initializedTicksCrossed,\n            uint256 gasEstimate\n        );\n\n    /// @notice Returns the amount in required for a given exact output swap without executing the swap\n    /// @param path The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\n    /// @param amountOut The amount of the last token to receive\n    /// @return amountIn The amount of first token required to be paid\n    /// @return sqrtPriceX96AfterList List of the sqrt price after the swap for each pool in the path\n    /// @return initializedTicksCrossedList List of the initialized ticks that the swap crossed for each pool in the path\n    /// @return gasEstimate The estimate of the gas that the swap consumes\n    function quoteExactOutput(bytes memory path, uint256 amountOut)\n        external\n        returns (\n            uint256 amountIn,\n            uint160[] memory sqrtPriceX96AfterList,\n            uint32[] memory initializedTicksCrossedList,\n            uint256 gasEstimate\n        );\n\n    struct QuoteExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint256 amount;\n        uint24 fee;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Returns the amount in required to receive the given exact output amount but for a swap of a single pool\n    /// @param params The params for the quote, encoded as `QuoteExactOutputSingleParams`\n    /// tokenIn The token being swapped in\n    /// tokenOut The token being swapped out\n    /// fee The fee of the token pool to consider for the pair\n    /// amountOut The desired output amount\n    /// sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n    /// @return amountIn The amount required as the input for the swap in order to receive `amountOut`\n    /// @return sqrtPriceX96After The sqrt price of the pool after the swap\n    /// @return initializedTicksCrossed The number of initialized ticks that the swap crossed\n    /// @return gasEstimate The estimate of the gas that the swap consumes\n    function quoteExactOutputSingle(QuoteExactOutputSingleParams memory params)\n        external\n        returns (\n            uint256 amountIn,\n            uint160 sqrtPriceX96After,\n            uint32 initializedTicksCrossed,\n            uint256 gasEstimate\n        );\n}\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\nlibrary TransferHelper {\n    /// @notice Transfers tokens from the targeted address to the given destination\n    /// @notice Errors with 'STF' if transfer fails\n    /// @param token The contract address of the token to be transferred\n    /// @param from The originating address from which the tokens will be transferred\n    /// @param to The destination address of the transfer\n    /// @param value The amount to be transferred\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\n    }\n\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Errors with ST if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\n    }\n\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\n    /// @dev Errors with 'SA' if transfer fails\n    /// @param token The contract address of the token to be approved\n    /// @param to The target of the approval\n    /// @param value The amount of the given token the target will be allowed to spend\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\n    }\n\n    /// @notice Transfers ETH to the recipient address\n    /// @dev Fails with `STE`\n    /// @param to The destination of the transfer\n    /// @param value The value to be transferred\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'STE');\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol": {
				"IQuoterV2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "quoteExactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint160[]",
									"name": "sqrtPriceX96AfterList",
									"type": "uint160[]"
								},
								{
									"internalType": "uint32[]",
									"name": "initializedTicksCrossedList",
									"type": "uint32[]"
								},
								{
									"internalType": "uint256",
									"name": "gasEstimate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IQuoterV2.QuoteExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "quoteExactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96After",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "initializedTicksCrossed",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "gasEstimate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "quoteExactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint160[]",
									"name": "sqrtPriceX96AfterList",
									"type": "uint160[]"
								},
								{
									"internalType": "uint32[]",
									"name": "initializedTicksCrossedList",
									"type": "uint32[]"
								},
								{
									"internalType": "uint256",
									"name": "gasEstimate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IQuoterV2.QuoteExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "quoteExactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96After",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "initializedTicksCrossed",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "gasEstimate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "These functions are not marked view because they rely on calling non-view functions and reverting to compute the result. They are also not gas efficient and should not be called on-chain.",
						"kind": "dev",
						"methods": {
							"quoteExactInput(bytes,uint256)": {
								"params": {
									"amountIn": "The amount of the first token to swap",
									"path": "The path of the swap, i.e. each token pair and the pool fee"
								},
								"returns": {
									"amountOut": "The amount of the last token that would be received",
									"gasEstimate": "The estimate of the gas that the swap consumes",
									"initializedTicksCrossedList": "List of the initialized ticks that the swap crossed for each pool in the path",
									"sqrtPriceX96AfterList": "List of the sqrt price after the swap for each pool in the path"
								}
							},
							"quoteExactInputSingle((address,address,uint256,uint24,uint160))": {
								"params": {
									"params": "The params for the quote, encoded as `QuoteExactInputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountIn The desired input amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap"
								},
								"returns": {
									"amountOut": "The amount of `tokenOut` that would be received",
									"gasEstimate": "The estimate of the gas that the swap consumes",
									"initializedTicksCrossed": "The number of initialized ticks that the swap crossed",
									"sqrtPriceX96After": "The sqrt price of the pool after the swap"
								}
							},
							"quoteExactOutput(bytes,uint256)": {
								"params": {
									"amountOut": "The amount of the last token to receive",
									"path": "The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order"
								},
								"returns": {
									"amountIn": "The amount of first token required to be paid",
									"gasEstimate": "The estimate of the gas that the swap consumes",
									"initializedTicksCrossedList": "List of the initialized ticks that the swap crossed for each pool in the path",
									"sqrtPriceX96AfterList": "List of the sqrt price after the swap for each pool in the path"
								}
							},
							"quoteExactOutputSingle((address,address,uint256,uint24,uint160))": {
								"params": {
									"params": "The params for the quote, encoded as `QuoteExactOutputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountOut The desired output amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap"
								},
								"returns": {
									"amountIn": "The amount required as the input for the swap in order to receive `amountOut`",
									"gasEstimate": "The estimate of the gas that the swap consumes",
									"initializedTicksCrossed": "The number of initialized ticks that the swap crossed",
									"sqrtPriceX96After": "The sqrt price of the pool after the swap"
								}
							}
						},
						"title": "QuoterV2 Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"quoteExactInput(bytes,uint256)": "cdca1753",
							"quoteExactInputSingle((address,address,uint256,uint24,uint160))": "c6a5026a",
							"quoteExactOutput(bytes,uint256)": "2f80bb1d",
							"quoteExactOutputSingle((address,address,uint256,uint24,uint160))": "bd21704a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"quoteExactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint160[]\",\"name\":\"sqrtPriceX96AfterList\",\"type\":\"uint160[]\"},{\"internalType\":\"uint32[]\",\"name\":\"initializedTicksCrossedList\",\"type\":\"uint32[]\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IQuoterV2.QuoteExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"quoteExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96After\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"initializedTicksCrossed\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"quoteExactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint160[]\",\"name\":\"sqrtPriceX96AfterList\",\"type\":\"uint160[]\"},{\"internalType\":\"uint32[]\",\"name\":\"initializedTicksCrossedList\",\"type\":\"uint32[]\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IQuoterV2.QuoteExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"quoteExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96After\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"initializedTicksCrossed\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"These functions are not marked view because they rely on calling non-view functions and reverting to compute the result. They are also not gas efficient and should not be called on-chain.\",\"kind\":\"dev\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"params\":{\"amountIn\":\"The amount of the first token to swap\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee\"},\"returns\":{\"amountOut\":\"The amount of the last token that would be received\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossedList\":\"List of the initialized ticks that the swap crossed for each pool in the path\",\"sqrtPriceX96AfterList\":\"List of the sqrt price after the swap for each pool in the path\"}},\"quoteExactInputSingle((address,address,uint256,uint24,uint160))\":{\"params\":{\"params\":\"The params for the quote, encoded as `QuoteExactInputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountIn The desired input amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\"},\"returns\":{\"amountOut\":\"The amount of `tokenOut` that would be received\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossed\":\"The number of initialized ticks that the swap crossed\",\"sqrtPriceX96After\":\"The sqrt price of the pool after the swap\"}},\"quoteExactOutput(bytes,uint256)\":{\"params\":{\"amountOut\":\"The amount of the last token to receive\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\"},\"returns\":{\"amountIn\":\"The amount of first token required to be paid\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossedList\":\"List of the initialized ticks that the swap crossed for each pool in the path\",\"sqrtPriceX96AfterList\":\"List of the sqrt price after the swap for each pool in the path\"}},\"quoteExactOutputSingle((address,address,uint256,uint24,uint160))\":{\"params\":{\"params\":\"The params for the quote, encoded as `QuoteExactOutputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountOut The desired output amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\"},\"returns\":{\"amountIn\":\"The amount required as the input for the swap in order to receive `amountOut`\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossed\":\"The number of initialized ticks that the swap crossed\",\"sqrtPriceX96After\":\"The sqrt price of the pool after the swap\"}}},\"title\":\"QuoterV2 Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"notice\":\"Returns the amount out received for a given exact input swap without executing the swap\"},\"quoteExactInputSingle((address,address,uint256,uint24,uint160))\":{\"notice\":\"Returns the amount out received for a given exact input but for a swap of a single pool\"},\"quoteExactOutput(bytes,uint256)\":{\"notice\":\"Returns the amount in required for a given exact output swap without executing the swap\"},\"quoteExactOutputSingle((address,address,uint256,uint24,uint160))\":{\"notice\":\"Returns the amount in required to receive the given exact output amount but for a swap of a single pool\"}},\"notice\":\"Supports quoting the calculated amounts from exact input or exact output swaps.For each pool also tells you the number of initialized ticks crossed and the sqrt price of the pool after the swap.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol\":\"IQuoterV2\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol\":{\"keccak256\":\"0x7e931f0cd34811851031c4f1318f59b4a4b427a2d2e2968b8e5ed87a9f7f89d6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://63a8d7dcdd081004356b39e1b8e19ee56b02b3abd3e4165781bde1a100a35bed\",\"dweb:/ipfs/QmdfpYkMxoaeEd646aSioLZcPodnCnpZy9Ny4j98uAba2J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"quoteExactInput(bytes,uint256)": {
								"notice": "Returns the amount out received for a given exact input swap without executing the swap"
							},
							"quoteExactInputSingle((address,address,uint256,uint24,uint160))": {
								"notice": "Returns the amount out received for a given exact input but for a swap of a single pool"
							},
							"quoteExactOutput(bytes,uint256)": {
								"notice": "Returns the amount in required for a given exact output swap without executing the swap"
							},
							"quoteExactOutputSingle((address,address,uint256,uint24,uint160))": {
								"notice": "Returns the amount in required to receive the given exact output amount but for a swap of a single pool"
							}
						},
						"notice": "Supports quoting the calculated amounts from exact input or exact output swaps.For each pool also tells you the number of initialized ticks crossed and the sqrt price of the pool after the swap.",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cafe8c5c3d58302551867c1bf162f0055aec99ac03bebaa27e50a78387ea9b9664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cafe8c5c3d58302551867c1bf162f0055aec99ac03bebaa27e50a78387ea9b9664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA INVALID DUP13 TLOAD RETURNDATASIZE PC ADDRESS 0x25 MLOAD DUP7 PUSH29 0x1BF162F0055AEC99AC03BEBAA27E50A78387EA9B9664736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "129:2408:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cafe8c5c3d58302551867c1bf162f0055aec99ac03bebaa27e50a78387ea9b9664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA INVALID DUP13 TLOAD RETURNDATASIZE PC ADDRESS 0x25 MLOAD DUP7 PUSH29 0x1BF162F0055AEC99AC03BEBAA27E50A78387EA9B9664736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "129:2408:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cafe8c5c3d58302551867c1bf162f0055aec99ac03bebaa27e50a78387ea9b9664736f6c634300081a0033",
									".code": [
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/IUniswapPool.sol",
								"contracts/SwapUniswap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IUniswapPool.sol": {
				"IUniswapV3Factory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getPool(address,address,uint24)": "1698ee82"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IUniswapPool.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IUniswapPool.sol\":{\"keccak256\":\"0x8c0ad54272b9eb95f208708f0e74d7952c4f5e508e110576d8cafdcc192345a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41bf13f35eb6268ce67273537b54b03a28e6999f8b4b44a25426e99ff851b359\",\"dweb:/ipfs/Qmes8QGUSiK5cnTh5vbnAHdvnrCgrVCFw2aFGUbjPFyuju\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV3Pool": {
					"abi": [
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"fee()": "ddca3f43"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IUniswapPool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IUniswapPool.sol\":{\"keccak256\":\"0x8c0ad54272b9eb95f208708f0e74d7952c4f5e508e110576d8cafdcc192345a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41bf13f35eb6268ce67273537b54b03a28e6999f8b4b44a25426e99ff851b359\",\"dweb:/ipfs/Qmes8QGUSiK5cnTh5vbnAHdvnrCgrVCFw2aFGUbjPFyuju\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SwapUniswap.sol": {
				"SwapUniswap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "_swapRouter",
									"type": "address"
								},
								{
									"internalType": "contract IQuoterV2",
									"name": "_quoterv2",
									"type": "address"
								},
								{
									"internalType": "contract IUniswapV3Factory",
									"name": "_uniswapV3Factory",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_dai",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdt",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdc",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_weth",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "NoAvalibleFee",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DAI",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDC",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDT",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "feeTiers",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint24",
									"name": "poolFee",
									"type": "uint24"
								}
							],
							"name": "getAmountOutMinimum",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMinimum",
									"type": "uint256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96After",
									"type": "uint160"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "quoterV2",
							"outputs": [
								{
									"internalType": "contract IQuoterV2",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapV3Factory",
							"outputs": [
								{
									"internalType": "contract IUniswapV3Factory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SwapUniswap.sol\":324:6255  contract SwapUniswap {... */\n  mstore(0x40, 0x0160)\n    /* \"contracts/SwapUniswap.sol\":500:545  uint24[] public feeTiers = [500, 3000, 10000] */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n    /* \"contracts/SwapUniswap.sol\":528:531  500 */\n  0x01f4\n    /* \"contracts/SwapUniswap.sol\":500:545  uint24[] public feeTiers = [500, 3000, 10000] */\n  0xffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/SwapUniswap.sol\":533:537  3000 */\n  0x0bb8\n    /* \"contracts/SwapUniswap.sol\":500:545  uint24[] public feeTiers = [500, 3000, 10000] */\n  0xffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/SwapUniswap.sol\":539:544  10000 */\n  0x2710\n    /* \"contracts/SwapUniswap.sol\":500:545  uint24[] public feeTiers = [500, 3000, 10000] */\n  0xffff\n  and\n  dup2\n  mstore\n  pop\n  0x00\n  swap1\n  0x03\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/SwapUniswap.sol\":804:1239  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_4\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"contracts/SwapUniswap.sol\":1052:1063  _swapRouter */\n  dup7\n    /* \"contracts/SwapUniswap.sol\":1039:1063  swapRouter = _swapRouter */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/SwapUniswap.sol\":1085:1094  _quoterv2 */\n  dup6\n    /* \"contracts/SwapUniswap.sol\":1074:1094  quoterV2 = _quoterv2 */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/SwapUniswap.sol\":1124:1141  _uniswapV3Factory */\n  dup5\n    /* \"contracts/SwapUniswap.sol\":1105:1141  uniswapV3Factory = _uniswapV3Factory */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/SwapUniswap.sol\":1158:1162  _dai */\n  dup4\n    /* \"contracts/SwapUniswap.sol\":1152:1162  DAI = _dai */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xe0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/SwapUniswap.sol\":1180:1185  _usdt */\n  dup3\n    /* \"contracts/SwapUniswap.sol\":1173:1185  USDT = _usdt */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x0100\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/SwapUniswap.sol\":1203:1208  _usdc */\n  dup2\n    /* \"contracts/SwapUniswap.sol\":1196:1208  USDC = _usdc */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x0120\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/SwapUniswap.sol\":1226:1231  _weth */\n  dup1\n    /* \"contracts/SwapUniswap.sol\":1219:1231  WETH = _weth */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x0140\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/SwapUniswap.sol\":804:1239  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/SwapUniswap.sol\":324:6255  contract SwapUniswap {... */\n  jump(tag_8)\ntag_2:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x09\n  add\n  0x0a\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_9\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\n  0x00\ntag_10:\n  dup4\n  dup3\n  gt\n  iszero\n  tag_11\n  jumpi\n  dup4\n  mload\n  dup4\n  dup3\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  swap3\n  0x20\n  add\n  swap3\n  0x03\n  add\n  0x20\n  dup2\n  0x02\n  add\n  div\n  swap3\n  dup4\n  add\n  swap3\n  0x01\n  sub\n  mul\n  jump(tag_10)\ntag_11:\n  dup1\n  iszero\n  tag_12\n  jumpi\n  dup3\n  dup2\n  0x0100\n  exp\n  dup2\n  sload\n  swap1\n  0xffffff\n  mul\n  not\n  and\n  swap1\n  sstore\n  0x03\n  add\n  0x20\n  dup2\n  0x02\n  add\n  div\n  swap3\n  dup4\n  add\n  swap3\n  0x01\n  sub\n  mul\n  jump(tag_11)\ntag_12:\n  pop\ntag_9:\n  pop\n  swap1\n  pop\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  pop\n  swap1\n  jump\t// out\ntag_14:\ntag_15:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_16\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_15)\ntag_16:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_18:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_20:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_21:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_39\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_20\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:683   */\ntag_22:\n    /* \"#utility.yul\":624:631   */\n  0x00\n    /* \"#utility.yul\":653:677   */\n  tag_41\n    /* \"#utility.yul\":671:676   */\n  dup3\n    /* \"#utility.yul\":653:677   */\n  tag_21\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":642:677   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:683   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":689:849   */\ntag_23:\n    /* \"#utility.yul\":781:824   */\n  tag_43\n    /* \"#utility.yul\":818:823   */\n  dup2\n    /* \"#utility.yul\":781:824   */\n  tag_22\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":774:779   */\n  dup2\n    /* \"#utility.yul\":771:825   */\n  eq\n    /* \"#utility.yul\":761:843   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":839:840   */\n  0x00\n    /* \"#utility.yul\":836:837   */\n  dup1\n    /* \"#utility.yul\":829:841   */\n  revert\n    /* \"#utility.yul\":761:843   */\ntag_44:\n    /* \"#utility.yul\":689:849   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":855:1036   */\ntag_24:\n    /* \"#utility.yul\":931:936   */\n  0x00\n    /* \"#utility.yul\":962:968   */\n  dup2\n    /* \"#utility.yul\":956:969   */\n  mload\n    /* \"#utility.yul\":947:969   */\n  swap1\n  pop\n    /* \"#utility.yul\":978:1030   */\n  tag_46\n    /* \"#utility.yul\":1024:1029   */\n  dup2\n    /* \"#utility.yul\":978:1030   */\n  tag_23\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":855:1036   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1042:1155   */\ntag_25:\n    /* \"#utility.yul\":1096:1103   */\n  0x00\n    /* \"#utility.yul\":1125:1149   */\n  tag_48\n    /* \"#utility.yul\":1143:1148   */\n  dup3\n    /* \"#utility.yul\":1125:1149   */\n  tag_21\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1114:1149   */\n  swap1\n  pop\n    /* \"#utility.yul\":1042:1155   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1317   */\ntag_26:\n    /* \"#utility.yul\":1251:1292   */\n  tag_50\n    /* \"#utility.yul\":1286:1291   */\n  dup2\n    /* \"#utility.yul\":1251:1292   */\n  tag_25\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1244:1249   */\n  dup2\n    /* \"#utility.yul\":1241:1293   */\n  eq\n    /* \"#utility.yul\":1231:1311   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1307:1308   */\n  0x00\n    /* \"#utility.yul\":1304:1305   */\n  dup1\n    /* \"#utility.yul\":1297:1309   */\n  revert\n    /* \"#utility.yul\":1231:1311   */\ntag_51:\n    /* \"#utility.yul\":1161:1317   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1323:1500   */\ntag_27:\n    /* \"#utility.yul\":1397:1402   */\n  0x00\n    /* \"#utility.yul\":1428:1434   */\n  dup2\n    /* \"#utility.yul\":1422:1435   */\n  mload\n    /* \"#utility.yul\":1413:1435   */\n  swap1\n  pop\n    /* \"#utility.yul\":1444:1494   */\n  tag_53\n    /* \"#utility.yul\":1488:1493   */\n  dup2\n    /* \"#utility.yul\":1444:1494   */\n  tag_26\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1323:1500   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1506:1627   */\ntag_28:\n    /* \"#utility.yul\":1568:1575   */\n  0x00\n    /* \"#utility.yul\":1597:1621   */\n  tag_55\n    /* \"#utility.yul\":1615:1620   */\n  dup3\n    /* \"#utility.yul\":1597:1621   */\n  tag_21\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1586:1621   */\n  swap1\n  pop\n    /* \"#utility.yul\":1506:1627   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1633:1805   */\ntag_29:\n    /* \"#utility.yul\":1731:1780   */\n  tag_57\n    /* \"#utility.yul\":1774:1779   */\n  dup2\n    /* \"#utility.yul\":1731:1780   */\n  tag_28\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1724:1729   */\n  dup2\n    /* \"#utility.yul\":1721:1781   */\n  eq\n    /* \"#utility.yul\":1711:1799   */\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1795:1796   */\n  0x00\n    /* \"#utility.yul\":1792:1793   */\n  dup1\n    /* \"#utility.yul\":1785:1797   */\n  revert\n    /* \"#utility.yul\":1711:1799   */\ntag_58:\n    /* \"#utility.yul\":1633:1805   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1811:2004   */\ntag_30:\n    /* \"#utility.yul\":1893:1898   */\n  0x00\n    /* \"#utility.yul\":1924:1930   */\n  dup2\n    /* \"#utility.yul\":1918:1931   */\n  mload\n    /* \"#utility.yul\":1909:1931   */\n  swap1\n  pop\n    /* \"#utility.yul\":1940:1998   */\n  tag_60\n    /* \"#utility.yul\":1992:1997   */\n  dup2\n    /* \"#utility.yul\":1940:1998   */\n  tag_29\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1811:2004   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2010:2132   */\ntag_31:\n    /* \"#utility.yul\":2083:2107   */\n  tag_62\n    /* \"#utility.yul\":2101:2106   */\n  dup2\n    /* \"#utility.yul\":2083:2107   */\n  tag_21\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2076:2081   */\n  dup2\n    /* \"#utility.yul\":2073:2108   */\n  eq\n    /* \"#utility.yul\":2063:2126   */\n  tag_63\n  jumpi\n    /* \"#utility.yul\":2122:2123   */\n  0x00\n    /* \"#utility.yul\":2119:2120   */\n  dup1\n    /* \"#utility.yul\":2112:2124   */\n  revert\n    /* \"#utility.yul\":2063:2126   */\ntag_63:\n    /* \"#utility.yul\":2010:2132   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2138:2281   */\ntag_32:\n    /* \"#utility.yul\":2195:2200   */\n  0x00\n    /* \"#utility.yul\":2226:2232   */\n  dup2\n    /* \"#utility.yul\":2220:2233   */\n  mload\n    /* \"#utility.yul\":2211:2233   */\n  swap1\n  pop\n    /* \"#utility.yul\":2242:2275   */\n  tag_65\n    /* \"#utility.yul\":2269:2274   */\n  dup2\n    /* \"#utility.yul\":2242:2275   */\n  tag_31\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2138:2281   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2287:3700   */\ntag_5:\n    /* \"#utility.yul\":2472:2478   */\n  0x00\n    /* \"#utility.yul\":2480:2486   */\n  dup1\n    /* \"#utility.yul\":2488:2494   */\n  0x00\n    /* \"#utility.yul\":2496:2502   */\n  dup1\n    /* \"#utility.yul\":2504:2510   */\n  0x00\n    /* \"#utility.yul\":2512:2518   */\n  dup1\n    /* \"#utility.yul\":2520:2526   */\n  0x00\n    /* \"#utility.yul\":2569:2572   */\n  0xe0\n    /* \"#utility.yul\":2557:2566   */\n  dup9\n    /* \"#utility.yul\":2548:2555   */\n  dup11\n    /* \"#utility.yul\":2544:2567   */\n  sub\n    /* \"#utility.yul\":2540:2573   */\n  slt\n    /* \"#utility.yul\":2537:2657   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":2576:2655   */\n  tag_68\n  tag_18\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2537:2657   */\ntag_67:\n    /* \"#utility.yul\":2696:2697   */\n  0x00\n    /* \"#utility.yul\":2721:2804   */\n  tag_69\n    /* \"#utility.yul\":2796:2803   */\n  dup11\n    /* \"#utility.yul\":2787:2793   */\n  dup3\n    /* \"#utility.yul\":2776:2785   */\n  dup12\n    /* \"#utility.yul\":2772:2794   */\n  add\n    /* \"#utility.yul\":2721:2804   */\n  tag_24\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2711:2804   */\n  swap8\n  pop\n    /* \"#utility.yul\":2667:2814   */\n  pop\n    /* \"#utility.yul\":2853:2855   */\n  0x20\n    /* \"#utility.yul\":2879:2960   */\n  tag_70\n    /* \"#utility.yul\":2952:2959   */\n  dup11\n    /* \"#utility.yul\":2943:2949   */\n  dup3\n    /* \"#utility.yul\":2932:2941   */\n  dup12\n    /* \"#utility.yul\":2928:2950   */\n  add\n    /* \"#utility.yul\":2879:2960   */\n  tag_27\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2869:2960   */\n  swap7\n  pop\n    /* \"#utility.yul\":2824:2970   */\n  pop\n    /* \"#utility.yul\":3009:3011   */\n  0x40\n    /* \"#utility.yul\":3035:3124   */\n  tag_71\n    /* \"#utility.yul\":3116:3123   */\n  dup11\n    /* \"#utility.yul\":3107:3113   */\n  dup3\n    /* \"#utility.yul\":3096:3105   */\n  dup12\n    /* \"#utility.yul\":3092:3114   */\n  add\n    /* \"#utility.yul\":3035:3124   */\n  tag_30\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":3025:3124   */\n  swap6\n  pop\n    /* \"#utility.yul\":2980:3134   */\n  pop\n    /* \"#utility.yul\":3173:3175   */\n  0x60\n    /* \"#utility.yul\":3199:3263   */\n  tag_72\n    /* \"#utility.yul\":3255:3262   */\n  dup11\n    /* \"#utility.yul\":3246:3252   */\n  dup3\n    /* \"#utility.yul\":3235:3244   */\n  dup12\n    /* \"#utility.yul\":3231:3253   */\n  add\n    /* \"#utility.yul\":3199:3263   */\n  tag_32\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":3189:3263   */\n  swap5\n  pop\n    /* \"#utility.yul\":3144:3273   */\n  pop\n    /* \"#utility.yul\":3312:3315   */\n  0x80\n    /* \"#utility.yul\":3339:3403   */\n  tag_73\n    /* \"#utility.yul\":3395:3402   */\n  dup11\n    /* \"#utility.yul\":3386:3392   */\n  dup3\n    /* \"#utility.yul\":3375:3384   */\n  dup12\n    /* \"#utility.yul\":3371:3393   */\n  add\n    /* \"#utility.yul\":3339:3403   */\n  tag_32\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3329:3403   */\n  swap4\n  pop\n    /* \"#utility.yul\":3283:3413   */\n  pop\n    /* \"#utility.yul\":3452:3455   */\n  0xa0\n    /* \"#utility.yul\":3479:3543   */\n  tag_74\n    /* \"#utility.yul\":3535:3542   */\n  dup11\n    /* \"#utility.yul\":3526:3532   */\n  dup3\n    /* \"#utility.yul\":3515:3524   */\n  dup12\n    /* \"#utility.yul\":3511:3533   */\n  add\n    /* \"#utility.yul\":3479:3543   */\n  tag_32\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":3469:3543   */\n  swap3\n  pop\n    /* \"#utility.yul\":3423:3553   */\n  pop\n    /* \"#utility.yul\":3592:3595   */\n  0xc0\n    /* \"#utility.yul\":3619:3683   */\n  tag_75\n    /* \"#utility.yul\":3675:3682   */\n  dup11\n    /* \"#utility.yul\":3666:3672   */\n  dup3\n    /* \"#utility.yul\":3655:3664   */\n  dup12\n    /* \"#utility.yul\":3651:3673   */\n  add\n    /* \"#utility.yul\":3619:3683   */\n  tag_32\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3609:3683   */\n  swap2\n  pop\n    /* \"#utility.yul\":3563:3693   */\n  pop\n    /* \"#utility.yul\":2287:3700   */\n  swap3\n  swap6\n  swap9\n  swap2\n  swap5\n  swap8\n  pop\n  swap3\n  swap6\n  pop\n  jump\t// out\n    /* \"contracts/SwapUniswap.sol\":324:6255  contract SwapUniswap {... */\ntag_8:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xc1e6997eca44a15ccfcac0425fb78f4c2bce7304b04a0a653c647091425cdc24\")\n  0x00\n  assignImmutable(\"0xa0ff41cdac9c80113ababc7450af718333bc6f6809ffa0d29bba7653607bd291\")\n  0x00\n  assignImmutable(\"0xaf9bc89f33715a84bb6f4b24beb007723f72d3094feea5ae0f74a20d5f321e33\")\n  0x00\n  assignImmutable(\"0x74af0cf009313e3c0d92464af6a8b6afccd4848a55d5ef8dac37109dbdba36ea\")\n  0x00\n  assignImmutable(\"0x81e684302dba258ad18c3b31de9ac01448b470fcf6136d2ace7eb5c581a909a4\")\n  0x00\n  assignImmutable(\"0x3a6b057b9d48186986616a0f5b0622760f50f4bcc4f1fc92ab446a90a1025914\")\n  0x00\n  assignImmutable(\"0xd667c05f4ea0c4d90d21d40bfcf145844cbad8a35a13308e33b3fcd34757a132\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/SwapUniswap.sol\":324:6255  contract SwapUniswap {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xad5c4648\n      gt\n      tag_12\n      jumpi\n      dup1\n      0xad5c4648\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xc54e44eb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe0bab4c4\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe20dccb2\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x230ed44a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5b549182\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x89a30271\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9a90f2ec\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SwapUniswap.sol\":500:545  uint24[] public feeTiers = [500, 3000, 10000] */\n    tag_3:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":440:491  IUniswapV3Factory public immutable uniswapV3Factory */\n    tag_4:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":700:729  address public immutable USDC */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":1247:1886  function getAmountOutMinimum(... */\n    tag_6:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap3\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":736:765  address public immutable WETH */\n    tag_7:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":352:391  ISwapRouter public immutable swapRouter */\n    tag_8:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":664:693  address public immutable USDT */\n    tag_9:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":629:657  address public immutable DAI */\n    tag_10:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":398:433  IQuoterV2 public immutable quoterV2 */\n    tag_11:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":500:545  uint24[] public feeTiers = [500, 3000, 10000] */\n    tag_16:\n      0x00\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x0a\n      swap2\n      dup3\n      dup3\n      div\n      add\n      swap2\n      swap1\n      mod\n      0x03\n      mul\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":440:491  IUniswapV3Factory public immutable uniswapV3Factory */\n    tag_20:\n      immutable(\"0x81e684302dba258ad18c3b31de9ac01448b470fcf6136d2ace7eb5c581a909a4\")\n      dup2\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":700:729  address public immutable USDC */\n    tag_24:\n      immutable(\"0xa0ff41cdac9c80113ababc7450af718333bc6f6809ffa0d29bba7653607bd291\")\n      dup2\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":1247:1886  function getAmountOutMinimum(... */\n    tag_30:\n        /* \"contracts/SwapUniswap.sol\":1404:1428  uint256 amountOutMinimum */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":1430:1455  uint160 sqrtPriceX96After */\n      dup1\n        /* \"contracts/SwapUniswap.sol\":1468:1519  IQuoterV2.QuoteExactInputSingleParams memory params */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":1522:1769  IQuoterV2... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/SwapUniswap.sol\":1602:1609  tokenIn */\n      dup9\n        /* \"contracts/SwapUniswap.sol\":1522:1769  IQuoterV2... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":1638:1646  tokenOut */\n      dup8\n        /* \"contracts/SwapUniswap.sol\":1522:1769  IQuoterV2... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":1675:1683  amountIn */\n      dup7\n        /* \"contracts/SwapUniswap.sol\":1522:1769  IQuoterV2... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":1707:1714  poolFee */\n      dup6\n        /* \"contracts/SwapUniswap.sol\":1522:1769  IQuoterV2... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":1752:1753  0 */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":1522:1769  IQuoterV2... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/SwapUniswap.sol\":1468:1769  IQuoterV2.QuoteExactInputSingleParams memory params = IQuoterV2... */\n      swap1\n      pop\n        /* \"contracts/SwapUniswap.sol\":1826:1834  quoterV2 */\n      immutable(\"0x3a6b057b9d48186986616a0f5b0622760f50f4bcc4f1fc92ab446a90a1025914\")\n        /* \"contracts/SwapUniswap.sol\":1826:1870  quoterV2... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc6a5026a\n        /* \"contracts/SwapUniswap.sol\":1871:1877  params */\n      dup3\n        /* \"contracts/SwapUniswap.sol\":1826:1878  quoterV2... */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      0x80\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_56\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_56:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"contracts/SwapUniswap.sol\":1782:1878  (amountOutMinimum, sqrtPriceX96After, , ) = quoterV2... */\n      swap1\n      pop\n      pop\n      dup1\n      swap4\n      pop\n      dup2\n      swap5\n      pop\n      pop\n      pop\n        /* \"contracts/SwapUniswap.sol\":1457:1886  {... */\n      pop\n        /* \"contracts/SwapUniswap.sol\":1247:1886  function getAmountOutMinimum(... */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":736:765  address public immutable WETH */\n    tag_34:\n      immutable(\"0xc1e6997eca44a15ccfcac0425fb78f4c2bce7304b04a0a653c647091425cdc24\")\n      dup2\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":352:391  ISwapRouter public immutable swapRouter */\n    tag_37:\n      immutable(\"0xd667c05f4ea0c4d90d21d40bfcf145844cbad8a35a13308e33b3fcd34757a132\")\n      dup2\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":664:693  address public immutable USDT */\n    tag_41:\n      immutable(\"0xaf9bc89f33715a84bb6f4b24beb007723f72d3094feea5ae0f74a20d5f321e33\")\n      dup2\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":629:657  address public immutable DAI */\n    tag_44:\n      immutable(\"0x74af0cf009313e3c0d92464af6a8b6afccd4848a55d5ef8dac37109dbdba36ea\")\n      dup2\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":398:433  IQuoterV2 public immutable quoterV2 */\n    tag_47:\n      immutable(\"0x3a6b057b9d48186986616a0f5b0622760f50f4bcc4f1fc92ab446a90a1025914\")\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_60:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_62:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_63:\n        /* \"#utility.yul\":490:514   */\n      tag_102\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_62\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_103\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_103:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_64:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_105\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_63\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_15:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_108\n      tag_60\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":766:885   */\n    tag_107:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_109\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_64\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1116   */\n    tag_65:\n        /* \"#utility.yul\":1061:1068   */\n      0x00\n        /* \"#utility.yul\":1101:1109   */\n      0xffffff\n        /* \"#utility.yul\":1094:1099   */\n      dup3\n        /* \"#utility.yul\":1090:1110   */\n      and\n        /* \"#utility.yul\":1079:1110   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1122:1237   */\n    tag_66:\n        /* \"#utility.yul\":1207:1230   */\n      tag_112\n        /* \"#utility.yul\":1224:1229   */\n      dup2\n        /* \"#utility.yul\":1207:1230   */\n      tag_65\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1202:1205   */\n      dup3\n        /* \"#utility.yul\":1195:1231   */\n      mstore\n        /* \"#utility.yul\":1122:1237   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1243:1461   */\n    tag_18:\n        /* \"#utility.yul\":1334:1338   */\n      0x00\n        /* \"#utility.yul\":1372:1374   */\n      0x20\n        /* \"#utility.yul\":1361:1370   */\n      dup3\n        /* \"#utility.yul\":1357:1375   */\n      add\n        /* \"#utility.yul\":1349:1375   */\n      swap1\n      pop\n        /* \"#utility.yul\":1385:1454   */\n      tag_114\n        /* \"#utility.yul\":1451:1452   */\n      0x00\n        /* \"#utility.yul\":1440:1449   */\n      dup4\n        /* \"#utility.yul\":1436:1453   */\n      add\n        /* \"#utility.yul\":1427:1433   */\n      dup5\n        /* \"#utility.yul\":1385:1454   */\n      tag_66\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":1243:1461   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1467:1593   */\n    tag_67:\n        /* \"#utility.yul\":1504:1511   */\n      0x00\n        /* \"#utility.yul\":1544:1586   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1537:1542   */\n      dup3\n        /* \"#utility.yul\":1533:1587   */\n      and\n        /* \"#utility.yul\":1522:1587   */\n      swap1\n      pop\n        /* \"#utility.yul\":1467:1593   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1599:1659   */\n    tag_68:\n        /* \"#utility.yul\":1627:1630   */\n      0x00\n        /* \"#utility.yul\":1648:1653   */\n      dup2\n        /* \"#utility.yul\":1641:1653   */\n      swap1\n      pop\n        /* \"#utility.yul\":1599:1659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1665:1807   */\n    tag_69:\n        /* \"#utility.yul\":1715:1724   */\n      0x00\n        /* \"#utility.yul\":1748:1801   */\n      tag_118\n        /* \"#utility.yul\":1766:1800   */\n      tag_119\n        /* \"#utility.yul\":1775:1799   */\n      tag_120\n        /* \"#utility.yul\":1793:1798   */\n      dup5\n        /* \"#utility.yul\":1775:1799   */\n      tag_67\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1766:1800   */\n      tag_68\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1748:1801   */\n      tag_67\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":1735:1801   */\n      swap1\n      pop\n        /* \"#utility.yul\":1665:1807   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1813:1939   */\n    tag_70:\n        /* \"#utility.yul\":1863:1872   */\n      0x00\n        /* \"#utility.yul\":1896:1933   */\n      tag_122\n        /* \"#utility.yul\":1927:1932   */\n      dup3\n        /* \"#utility.yul\":1896:1933   */\n      tag_69\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":1883:1933   */\n      swap1\n      pop\n        /* \"#utility.yul\":1813:1939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1945:2096   */\n    tag_71:\n        /* \"#utility.yul\":2020:2029   */\n      0x00\n        /* \"#utility.yul\":2053:2090   */\n      tag_124\n        /* \"#utility.yul\":2084:2089   */\n      dup3\n        /* \"#utility.yul\":2053:2090   */\n      tag_70\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2040:2090   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2096   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2102:2283   */\n    tag_72:\n        /* \"#utility.yul\":2214:2276   */\n      tag_126\n        /* \"#utility.yul\":2270:2275   */\n      dup2\n        /* \"#utility.yul\":2214:2276   */\n      tag_71\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2209:2212   */\n      dup3\n        /* \"#utility.yul\":2202:2277   */\n      mstore\n        /* \"#utility.yul\":2102:2283   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2289:2561   */\n    tag_22:\n        /* \"#utility.yul\":2407:2411   */\n      0x00\n        /* \"#utility.yul\":2445:2447   */\n      0x20\n        /* \"#utility.yul\":2434:2443   */\n      dup3\n        /* \"#utility.yul\":2430:2448   */\n      add\n        /* \"#utility.yul\":2422:2448   */\n      swap1\n      pop\n        /* \"#utility.yul\":2458:2554   */\n      tag_128\n        /* \"#utility.yul\":2551:2552   */\n      0x00\n        /* \"#utility.yul\":2540:2549   */\n      dup4\n        /* \"#utility.yul\":2536:2553   */\n      add\n        /* \"#utility.yul\":2527:2533   */\n      dup5\n        /* \"#utility.yul\":2458:2554   */\n      tag_72\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":2289:2561   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2567:2663   */\n    tag_73:\n        /* \"#utility.yul\":2604:2611   */\n      0x00\n        /* \"#utility.yul\":2633:2657   */\n      tag_130\n        /* \"#utility.yul\":2651:2656   */\n      dup3\n        /* \"#utility.yul\":2633:2657   */\n      tag_67\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2622:2657   */\n      swap1\n      pop\n        /* \"#utility.yul\":2567:2663   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2669:2787   */\n    tag_74:\n        /* \"#utility.yul\":2756:2780   */\n      tag_132\n        /* \"#utility.yul\":2774:2779   */\n      dup2\n        /* \"#utility.yul\":2756:2780   */\n      tag_73\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":2751:2754   */\n      dup3\n        /* \"#utility.yul\":2744:2781   */\n      mstore\n        /* \"#utility.yul\":2669:2787   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2793:3015   */\n    tag_26:\n        /* \"#utility.yul\":2886:2890   */\n      0x00\n        /* \"#utility.yul\":2924:2926   */\n      0x20\n        /* \"#utility.yul\":2913:2922   */\n      dup3\n        /* \"#utility.yul\":2909:2927   */\n      add\n        /* \"#utility.yul\":2901:2927   */\n      swap1\n      pop\n        /* \"#utility.yul\":2937:3008   */\n      tag_134\n        /* \"#utility.yul\":3005:3006   */\n      0x00\n        /* \"#utility.yul\":2994:3003   */\n      dup4\n        /* \"#utility.yul\":2990:3007   */\n      add\n        /* \"#utility.yul\":2981:2987   */\n      dup5\n        /* \"#utility.yul\":2937:3008   */\n      tag_74\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":2793:3015   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3021:3143   */\n    tag_75:\n        /* \"#utility.yul\":3094:3118   */\n      tag_136\n        /* \"#utility.yul\":3112:3117   */\n      dup2\n        /* \"#utility.yul\":3094:3118   */\n      tag_73\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":3087:3092   */\n      dup2\n        /* \"#utility.yul\":3084:3119   */\n      eq\n        /* \"#utility.yul\":3074:3137   */\n      tag_137\n      jumpi\n        /* \"#utility.yul\":3133:3134   */\n      0x00\n        /* \"#utility.yul\":3130:3131   */\n      dup1\n        /* \"#utility.yul\":3123:3135   */\n      revert\n        /* \"#utility.yul\":3074:3137   */\n    tag_137:\n        /* \"#utility.yul\":3021:3143   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3149:3288   */\n    tag_76:\n        /* \"#utility.yul\":3195:3200   */\n      0x00\n        /* \"#utility.yul\":3233:3239   */\n      dup2\n        /* \"#utility.yul\":3220:3240   */\n      calldataload\n        /* \"#utility.yul\":3211:3240   */\n      swap1\n      pop\n        /* \"#utility.yul\":3249:3282   */\n      tag_139\n        /* \"#utility.yul\":3276:3281   */\n      dup2\n        /* \"#utility.yul\":3249:3282   */\n      tag_75\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":3149:3288   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3294:3414   */\n    tag_77:\n        /* \"#utility.yul\":3366:3389   */\n      tag_141\n        /* \"#utility.yul\":3383:3388   */\n      dup2\n        /* \"#utility.yul\":3366:3389   */\n      tag_65\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":3359:3364   */\n      dup2\n        /* \"#utility.yul\":3356:3390   */\n      eq\n        /* \"#utility.yul\":3346:3408   */\n      tag_142\n      jumpi\n        /* \"#utility.yul\":3404:3405   */\n      0x00\n        /* \"#utility.yul\":3401:3402   */\n      dup1\n        /* \"#utility.yul\":3394:3406   */\n      revert\n        /* \"#utility.yul\":3346:3408   */\n    tag_142:\n        /* \"#utility.yul\":3294:3414   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3420:3557   */\n    tag_78:\n        /* \"#utility.yul\":3465:3470   */\n      0x00\n        /* \"#utility.yul\":3503:3509   */\n      dup2\n        /* \"#utility.yul\":3490:3510   */\n      calldataload\n        /* \"#utility.yul\":3481:3510   */\n      swap1\n      pop\n        /* \"#utility.yul\":3519:3551   */\n      tag_144\n        /* \"#utility.yul\":3545:3550   */\n      dup2\n        /* \"#utility.yul\":3519:3551   */\n      tag_77\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3420:3557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3563:4326   */\n    tag_29:\n        /* \"#utility.yul\":3648:3654   */\n      0x00\n        /* \"#utility.yul\":3656:3662   */\n      dup1\n        /* \"#utility.yul\":3664:3670   */\n      0x00\n        /* \"#utility.yul\":3672:3678   */\n      dup1\n        /* \"#utility.yul\":3721:3724   */\n      0x80\n        /* \"#utility.yul\":3709:3718   */\n      dup6\n        /* \"#utility.yul\":3700:3707   */\n      dup8\n        /* \"#utility.yul\":3696:3719   */\n      sub\n        /* \"#utility.yul\":3692:3725   */\n      slt\n        /* \"#utility.yul\":3689:3809   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":3728:3807   */\n      tag_147\n      tag_60\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":3689:3809   */\n    tag_146:\n        /* \"#utility.yul\":3848:3849   */\n      0x00\n        /* \"#utility.yul\":3873:3926   */\n      tag_148\n        /* \"#utility.yul\":3918:3925   */\n      dup8\n        /* \"#utility.yul\":3909:3915   */\n      dup3\n        /* \"#utility.yul\":3898:3907   */\n      dup9\n        /* \"#utility.yul\":3894:3916   */\n      add\n        /* \"#utility.yul\":3873:3926   */\n      tag_76\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":3863:3926   */\n      swap5\n      pop\n        /* \"#utility.yul\":3819:3936   */\n      pop\n        /* \"#utility.yul\":3975:3977   */\n      0x20\n        /* \"#utility.yul\":4001:4054   */\n      tag_149\n        /* \"#utility.yul\":4046:4053   */\n      dup8\n        /* \"#utility.yul\":4037:4043   */\n      dup3\n        /* \"#utility.yul\":4026:4035   */\n      dup9\n        /* \"#utility.yul\":4022:4044   */\n      add\n        /* \"#utility.yul\":4001:4054   */\n      tag_76\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":3991:4054   */\n      swap4\n      pop\n        /* \"#utility.yul\":3946:4064   */\n      pop\n        /* \"#utility.yul\":4103:4105   */\n      0x40\n        /* \"#utility.yul\":4129:4182   */\n      tag_150\n        /* \"#utility.yul\":4174:4181   */\n      dup8\n        /* \"#utility.yul\":4165:4171   */\n      dup3\n        /* \"#utility.yul\":4154:4163   */\n      dup9\n        /* \"#utility.yul\":4150:4172   */\n      add\n        /* \"#utility.yul\":4129:4182   */\n      tag_64\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":4119:4182   */\n      swap3\n      pop\n        /* \"#utility.yul\":4074:4192   */\n      pop\n        /* \"#utility.yul\":4231:4233   */\n      0x60\n        /* \"#utility.yul\":4257:4309   */\n      tag_151\n        /* \"#utility.yul\":4301:4308   */\n      dup8\n        /* \"#utility.yul\":4292:4298   */\n      dup3\n        /* \"#utility.yul\":4281:4290   */\n      dup9\n        /* \"#utility.yul\":4277:4299   */\n      add\n        /* \"#utility.yul\":4257:4309   */\n      tag_78\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":4247:4309   */\n      swap2\n      pop\n        /* \"#utility.yul\":4202:4319   */\n      pop\n        /* \"#utility.yul\":3563:4326   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4332:4450   */\n    tag_79:\n        /* \"#utility.yul\":4419:4443   */\n      tag_153\n        /* \"#utility.yul\":4437:4442   */\n      dup2\n        /* \"#utility.yul\":4419:4443   */\n      tag_62\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":4414:4417   */\n      dup3\n        /* \"#utility.yul\":4407:4444   */\n      mstore\n        /* \"#utility.yul\":4332:4450   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4456:4574   */\n    tag_80:\n        /* \"#utility.yul\":4543:4567   */\n      tag_155\n        /* \"#utility.yul\":4561:4566   */\n      dup2\n        /* \"#utility.yul\":4543:4567   */\n      tag_67\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":4538:4541   */\n      dup3\n        /* \"#utility.yul\":4531:4568   */\n      mstore\n        /* \"#utility.yul\":4456:4574   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4580:4912   */\n    tag_32:\n        /* \"#utility.yul\":4701:4705   */\n      0x00\n        /* \"#utility.yul\":4739:4741   */\n      0x40\n        /* \"#utility.yul\":4728:4737   */\n      dup3\n        /* \"#utility.yul\":4724:4742   */\n      add\n        /* \"#utility.yul\":4716:4742   */\n      swap1\n      pop\n        /* \"#utility.yul\":4752:4823   */\n      tag_157\n        /* \"#utility.yul\":4820:4821   */\n      0x00\n        /* \"#utility.yul\":4809:4818   */\n      dup4\n        /* \"#utility.yul\":4805:4822   */\n      add\n        /* \"#utility.yul\":4796:4802   */\n      dup6\n        /* \"#utility.yul\":4752:4823   */\n      tag_79\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":4833:4905   */\n      tag_158\n        /* \"#utility.yul\":4901:4903   */\n      0x20\n        /* \"#utility.yul\":4890:4899   */\n      dup4\n        /* \"#utility.yul\":4886:4904   */\n      add\n        /* \"#utility.yul\":4877:4883   */\n      dup5\n        /* \"#utility.yul\":4833:4905   */\n      tag_80\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":4580:4912   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4918:5063   */\n    tag_81:\n        /* \"#utility.yul\":4987:4996   */\n      0x00\n        /* \"#utility.yul\":5020:5057   */\n      tag_160\n        /* \"#utility.yul\":5051:5056   */\n      dup3\n        /* \"#utility.yul\":5020:5057   */\n      tag_70\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":5007:5057   */\n      swap1\n      pop\n        /* \"#utility.yul\":4918:5063   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5069:5238   */\n    tag_82:\n        /* \"#utility.yul\":5175:5231   */\n      tag_162\n        /* \"#utility.yul\":5225:5230   */\n      dup2\n        /* \"#utility.yul\":5175:5231   */\n      tag_81\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":5170:5173   */\n      dup3\n        /* \"#utility.yul\":5163:5232   */\n      mstore\n        /* \"#utility.yul\":5069:5238   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5244:5504   */\n    tag_39:\n        /* \"#utility.yul\":5356:5360   */\n      0x00\n        /* \"#utility.yul\":5394:5396   */\n      0x20\n        /* \"#utility.yul\":5383:5392   */\n      dup3\n        /* \"#utility.yul\":5379:5397   */\n      add\n        /* \"#utility.yul\":5371:5397   */\n      swap1\n      pop\n        /* \"#utility.yul\":5407:5497   */\n      tag_164\n        /* \"#utility.yul\":5494:5495   */\n      0x00\n        /* \"#utility.yul\":5483:5492   */\n      dup4\n        /* \"#utility.yul\":5479:5496   */\n      add\n        /* \"#utility.yul\":5470:5476   */\n      dup5\n        /* \"#utility.yul\":5407:5497   */\n      tag_82\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":5244:5504   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5510:5653   */\n    tag_83:\n        /* \"#utility.yul\":5577:5586   */\n      0x00\n        /* \"#utility.yul\":5610:5647   */\n      tag_166\n        /* \"#utility.yul\":5641:5646   */\n      dup3\n        /* \"#utility.yul\":5610:5647   */\n      tag_70\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":5597:5647   */\n      swap1\n      pop\n        /* \"#utility.yul\":5510:5653   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5659:5824   */\n    tag_84:\n        /* \"#utility.yul\":5763:5817   */\n      tag_168\n        /* \"#utility.yul\":5811:5816   */\n      dup2\n        /* \"#utility.yul\":5763:5817   */\n      tag_83\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":5758:5761   */\n      dup3\n        /* \"#utility.yul\":5751:5818   */\n      mstore\n        /* \"#utility.yul\":5659:5824   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5830:6086   */\n    tag_49:\n        /* \"#utility.yul\":5940:5944   */\n      0x00\n        /* \"#utility.yul\":5978:5980   */\n      0x20\n        /* \"#utility.yul\":5967:5976   */\n      dup3\n        /* \"#utility.yul\":5963:5981   */\n      add\n        /* \"#utility.yul\":5955:5981   */\n      swap1\n      pop\n        /* \"#utility.yul\":5991:6079   */\n      tag_170\n        /* \"#utility.yul\":6076:6077   */\n      0x00\n        /* \"#utility.yul\":6065:6074   */\n      dup4\n        /* \"#utility.yul\":6061:6078   */\n      add\n        /* \"#utility.yul\":6052:6058   */\n      dup5\n        /* \"#utility.yul\":5991:6079   */\n      tag_84\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":5830:6086   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6092:6200   */\n    tag_85:\n        /* \"#utility.yul\":6169:6193   */\n      tag_172\n        /* \"#utility.yul\":6187:6192   */\n      dup2\n        /* \"#utility.yul\":6169:6193   */\n      tag_73\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":6164:6167   */\n      dup3\n        /* \"#utility.yul\":6157:6194   */\n      mstore\n        /* \"#utility.yul\":6092:6200   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6206:6314   */\n    tag_86:\n        /* \"#utility.yul\":6283:6307   */\n      tag_174\n        /* \"#utility.yul\":6301:6306   */\n      dup2\n        /* \"#utility.yul\":6283:6307   */\n      tag_62\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":6278:6281   */\n      dup3\n        /* \"#utility.yul\":6271:6308   */\n      mstore\n        /* \"#utility.yul\":6206:6314   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6320:6425   */\n    tag_87:\n        /* \"#utility.yul\":6395:6418   */\n      tag_176\n        /* \"#utility.yul\":6412:6417   */\n      dup2\n        /* \"#utility.yul\":6395:6418   */\n      tag_65\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":6390:6393   */\n      dup3\n        /* \"#utility.yul\":6383:6419   */\n      mstore\n        /* \"#utility.yul\":6320:6425   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6431:6539   */\n    tag_88:\n        /* \"#utility.yul\":6508:6532   */\n      tag_178\n        /* \"#utility.yul\":6526:6531   */\n      dup2\n        /* \"#utility.yul\":6508:6532   */\n      tag_67\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":6503:6506   */\n      dup3\n        /* \"#utility.yul\":6496:6533   */\n      mstore\n        /* \"#utility.yul\":6431:6539   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6645:7733   */\n    tag_89:\n        /* \"#utility.yul\":6830:6834   */\n      0xa0\n        /* \"#utility.yul\":6825:6828   */\n      dup3\n        /* \"#utility.yul\":6821:6835   */\n      add\n        /* \"#utility.yul\":6920:6924   */\n      0x00\n        /* \"#utility.yul\":6913:6918   */\n      dup3\n        /* \"#utility.yul\":6909:6925   */\n      add\n        /* \"#utility.yul\":6903:6926   */\n      mload\n        /* \"#utility.yul\":6939:7002   */\n      tag_180\n        /* \"#utility.yul\":6996:7000   */\n      0x00\n        /* \"#utility.yul\":6991:6994   */\n      dup6\n        /* \"#utility.yul\":6987:7001   */\n      add\n        /* \"#utility.yul\":6973:6985   */\n      dup3\n        /* \"#utility.yul\":6939:7002   */\n      tag_85\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":6845:7012   */\n      pop\n        /* \"#utility.yul\":7098:7102   */\n      0x20\n        /* \"#utility.yul\":7091:7096   */\n      dup3\n        /* \"#utility.yul\":7087:7103   */\n      add\n        /* \"#utility.yul\":7081:7104   */\n      mload\n        /* \"#utility.yul\":7117:7180   */\n      tag_181\n        /* \"#utility.yul\":7174:7178   */\n      0x20\n        /* \"#utility.yul\":7169:7172   */\n      dup6\n        /* \"#utility.yul\":7165:7179   */\n      add\n        /* \"#utility.yul\":7151:7163   */\n      dup3\n        /* \"#utility.yul\":7117:7180   */\n      tag_85\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":7022:7190   */\n      pop\n        /* \"#utility.yul\":7276:7280   */\n      0x40\n        /* \"#utility.yul\":7269:7274   */\n      dup3\n        /* \"#utility.yul\":7265:7281   */\n      add\n        /* \"#utility.yul\":7259:7282   */\n      mload\n        /* \"#utility.yul\":7295:7358   */\n      tag_182\n        /* \"#utility.yul\":7352:7356   */\n      0x40\n        /* \"#utility.yul\":7347:7350   */\n      dup6\n        /* \"#utility.yul\":7343:7357   */\n      add\n        /* \"#utility.yul\":7329:7341   */\n      dup3\n        /* \"#utility.yul\":7295:7358   */\n      tag_86\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":7200:7368   */\n      pop\n        /* \"#utility.yul\":7449:7453   */\n      0x60\n        /* \"#utility.yul\":7442:7447   */\n      dup3\n        /* \"#utility.yul\":7438:7454   */\n      add\n        /* \"#utility.yul\":7432:7455   */\n      mload\n        /* \"#utility.yul\":7468:7529   */\n      tag_183\n        /* \"#utility.yul\":7523:7527   */\n      0x60\n        /* \"#utility.yul\":7518:7521   */\n      dup6\n        /* \"#utility.yul\":7514:7528   */\n      add\n        /* \"#utility.yul\":7500:7512   */\n      dup3\n        /* \"#utility.yul\":7468:7529   */\n      tag_87\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":7378:7539   */\n      pop\n        /* \"#utility.yul\":7634:7638   */\n      0x80\n        /* \"#utility.yul\":7627:7632   */\n      dup3\n        /* \"#utility.yul\":7623:7639   */\n      add\n        /* \"#utility.yul\":7617:7640   */\n      mload\n        /* \"#utility.yul\":7653:7716   */\n      tag_184\n        /* \"#utility.yul\":7710:7714   */\n      0x80\n        /* \"#utility.yul\":7705:7708   */\n      dup6\n        /* \"#utility.yul\":7701:7715   */\n      add\n        /* \"#utility.yul\":7687:7699   */\n      dup3\n        /* \"#utility.yul\":7653:7716   */\n      tag_88\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":7549:7726   */\n      pop\n        /* \"#utility.yul\":6799:7733   */\n      pop\n        /* \"#utility.yul\":6645:7733   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7739:8138   */\n    tag_54:\n        /* \"#utility.yul\":7920:7924   */\n      0x00\n        /* \"#utility.yul\":7958:7961   */\n      0xa0\n        /* \"#utility.yul\":7947:7956   */\n      dup3\n        /* \"#utility.yul\":7943:7962   */\n      add\n        /* \"#utility.yul\":7935:7962   */\n      swap1\n      pop\n        /* \"#utility.yul\":7972:8131   */\n      tag_186\n        /* \"#utility.yul\":8128:8129   */\n      0x00\n        /* \"#utility.yul\":8117:8126   */\n      dup4\n        /* \"#utility.yul\":8113:8130   */\n      add\n        /* \"#utility.yul\":8104:8110   */\n      dup5\n        /* \"#utility.yul\":7972:8131   */\n      tag_89\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":7739:8138   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8144:8287   */\n    tag_90:\n        /* \"#utility.yul\":8201:8206   */\n      0x00\n        /* \"#utility.yul\":8232:8238   */\n      dup2\n        /* \"#utility.yul\":8226:8239   */\n      mload\n        /* \"#utility.yul\":8217:8239   */\n      swap1\n      pop\n        /* \"#utility.yul\":8248:8281   */\n      tag_188\n        /* \"#utility.yul\":8275:8280   */\n      dup2\n        /* \"#utility.yul\":8248:8281   */\n      tag_63\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":8144:8287   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8293:8415   */\n    tag_91:\n        /* \"#utility.yul\":8366:8390   */\n      tag_190\n        /* \"#utility.yul\":8384:8389   */\n      dup2\n        /* \"#utility.yul\":8366:8390   */\n      tag_67\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":8359:8364   */\n      dup2\n        /* \"#utility.yul\":8356:8391   */\n      eq\n        /* \"#utility.yul\":8346:8409   */\n      tag_191\n      jumpi\n        /* \"#utility.yul\":8405:8406   */\n      0x00\n        /* \"#utility.yul\":8402:8403   */\n      dup1\n        /* \"#utility.yul\":8395:8407   */\n      revert\n        /* \"#utility.yul\":8346:8409   */\n    tag_191:\n        /* \"#utility.yul\":8293:8415   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8421:8564   */\n    tag_92:\n        /* \"#utility.yul\":8478:8483   */\n      0x00\n        /* \"#utility.yul\":8509:8515   */\n      dup2\n        /* \"#utility.yul\":8503:8516   */\n      mload\n        /* \"#utility.yul\":8494:8516   */\n      swap1\n      pop\n        /* \"#utility.yul\":8525:8558   */\n      tag_193\n        /* \"#utility.yul\":8552:8557   */\n      dup2\n        /* \"#utility.yul\":8525:8558   */\n      tag_91\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":8421:8564   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8570:8663   */\n    tag_93:\n        /* \"#utility.yul\":8606:8613   */\n      0x00\n        /* \"#utility.yul\":8646:8656   */\n      0xffffffff\n        /* \"#utility.yul\":8639:8644   */\n      dup3\n        /* \"#utility.yul\":8635:8657   */\n      and\n        /* \"#utility.yul\":8624:8657   */\n      swap1\n      pop\n        /* \"#utility.yul\":8570:8663   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8669:8789   */\n    tag_94:\n        /* \"#utility.yul\":8741:8764   */\n      tag_196\n        /* \"#utility.yul\":8758:8763   */\n      dup2\n        /* \"#utility.yul\":8741:8764   */\n      tag_93\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":8734:8739   */\n      dup2\n        /* \"#utility.yul\":8731:8765   */\n      eq\n        /* \"#utility.yul\":8721:8783   */\n      tag_197\n      jumpi\n        /* \"#utility.yul\":8779:8780   */\n      0x00\n        /* \"#utility.yul\":8776:8777   */\n      dup1\n        /* \"#utility.yul\":8769:8781   */\n      revert\n        /* \"#utility.yul\":8721:8783   */\n    tag_197:\n        /* \"#utility.yul\":8669:8789   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8795:8936   */\n    tag_95:\n        /* \"#utility.yul\":8851:8856   */\n      0x00\n        /* \"#utility.yul\":8882:8888   */\n      dup2\n        /* \"#utility.yul\":8876:8889   */\n      mload\n        /* \"#utility.yul\":8867:8889   */\n      swap1\n      pop\n        /* \"#utility.yul\":8898:8930   */\n      tag_199\n        /* \"#utility.yul\":8924:8929   */\n      dup2\n        /* \"#utility.yul\":8898:8930   */\n      tag_94\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":8795:8936   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8942:9760   */\n    tag_58:\n        /* \"#utility.yul\":9038:9044   */\n      0x00\n        /* \"#utility.yul\":9046:9052   */\n      dup1\n        /* \"#utility.yul\":9054:9060   */\n      0x00\n        /* \"#utility.yul\":9062:9068   */\n      dup1\n        /* \"#utility.yul\":9111:9114   */\n      0x80\n        /* \"#utility.yul\":9099:9108   */\n      dup6\n        /* \"#utility.yul\":9090:9097   */\n      dup8\n        /* \"#utility.yul\":9086:9109   */\n      sub\n        /* \"#utility.yul\":9082:9115   */\n      slt\n        /* \"#utility.yul\":9079:9199   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":9118:9197   */\n      tag_202\n      tag_60\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":9079:9199   */\n    tag_201:\n        /* \"#utility.yul\":9238:9239   */\n      0x00\n        /* \"#utility.yul\":9263:9327   */\n      tag_203\n        /* \"#utility.yul\":9319:9326   */\n      dup8\n        /* \"#utility.yul\":9310:9316   */\n      dup3\n        /* \"#utility.yul\":9299:9308   */\n      dup9\n        /* \"#utility.yul\":9295:9317   */\n      add\n        /* \"#utility.yul\":9263:9327   */\n      tag_90\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":9253:9327   */\n      swap5\n      pop\n        /* \"#utility.yul\":9209:9337   */\n      pop\n        /* \"#utility.yul\":9376:9378   */\n      0x20\n        /* \"#utility.yul\":9402:9466   */\n      tag_204\n        /* \"#utility.yul\":9458:9465   */\n      dup8\n        /* \"#utility.yul\":9449:9455   */\n      dup3\n        /* \"#utility.yul\":9438:9447   */\n      dup9\n        /* \"#utility.yul\":9434:9456   */\n      add\n        /* \"#utility.yul\":9402:9466   */\n      tag_92\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":9392:9466   */\n      swap4\n      pop\n        /* \"#utility.yul\":9347:9476   */\n      pop\n        /* \"#utility.yul\":9515:9517   */\n      0x40\n        /* \"#utility.yul\":9541:9604   */\n      tag_205\n        /* \"#utility.yul\":9596:9603   */\n      dup8\n        /* \"#utility.yul\":9587:9593   */\n      dup3\n        /* \"#utility.yul\":9576:9585   */\n      dup9\n        /* \"#utility.yul\":9572:9594   */\n      add\n        /* \"#utility.yul\":9541:9604   */\n      tag_95\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":9531:9604   */\n      swap3\n      pop\n        /* \"#utility.yul\":9486:9614   */\n      pop\n        /* \"#utility.yul\":9653:9655   */\n      0x60\n        /* \"#utility.yul\":9679:9743   */\n      tag_206\n        /* \"#utility.yul\":9735:9742   */\n      dup8\n        /* \"#utility.yul\":9726:9732   */\n      dup3\n        /* \"#utility.yul\":9715:9724   */\n      dup9\n        /* \"#utility.yul\":9711:9733   */\n      add\n        /* \"#utility.yul\":9679:9743   */\n      tag_90\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":9669:9743   */\n      swap2\n      pop\n        /* \"#utility.yul\":9624:9753   */\n      pop\n        /* \"#utility.yul\":8942:9760   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220498b3a8689c99b7a627a6d8896234a0088fca93d551cd94313d359830f423f5964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_561": {
									"entryPoint": null,
									"id": 561,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IQuoterV2_$184_fromMemory": {
									"entryPoint": 836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_ISwapRouter_$284_fromMemory": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IUniswapV3Factory_$469_fromMemory": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ISwapRouter_$284t_contract$_IQuoterV2_$184t_contract$_IUniswapV3Factory_$469t_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IQuoterV2_$184": {
									"entryPoint": 797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ISwapRouter_$284": {
									"entryPoint": 738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IUniswapV3Factory_$469": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 686,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IQuoterV2_$184": {
									"entryPoint": 814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ISwapRouter_$284": {
									"entryPoint": 755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IUniswapV3Factory_$469": {
									"entryPoint": 873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3703:7",
										"nodeType": "YulBlock",
										"src": "0:3703:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "632:51:7",
													"nodeType": "YulBlock",
													"src": "632:51:7",
													"statements": [
														{
															"nativeSrc": "642:35:7",
															"nodeType": "YulAssignment",
															"src": "642:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "671:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "671:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "653:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "653:17:7"
																},
																"nativeSrc": "653:24:7",
																"nodeType": "YulFunctionCall",
																"src": "653:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "642:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "642:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ISwapRouter_$284",
												"nativeSrc": "568:115:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "614:5:7",
														"nodeType": "YulTypedName",
														"src": "614:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "624:7:7",
														"nodeType": "YulTypedName",
														"src": "624:7:7",
														"type": ""
													}
												],
												"src": "568:115:7"
											},
											{
												"body": {
													"nativeSrc": "751:98:7",
													"nodeType": "YulBlock",
													"src": "751:98:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "827:16:7",
																"nodeType": "YulBlock",
																"src": "827:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:7",
																					"nodeType": "YulLiteral",
																					"src": "836:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:1:7",
																					"nodeType": "YulLiteral",
																					"src": "839:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "829:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "829:6:7"
																			},
																			"nativeSrc": "829:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "829:12:7"
																		},
																		"nativeSrc": "829:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "829:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "774:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "774:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "818:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "818:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ISwapRouter_$284",
																					"nativeSrc": "781:36:7",
																					"nodeType": "YulIdentifier",
																					"src": "781:36:7"
																				},
																				"nativeSrc": "781:43:7",
																				"nodeType": "YulFunctionCall",
																				"src": "781:43:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "771:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "771:2:7"
																		},
																		"nativeSrc": "771:54:7",
																		"nodeType": "YulFunctionCall",
																		"src": "771:54:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "764:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "764:6:7"
																},
																"nativeSrc": "764:62:7",
																"nodeType": "YulFunctionCall",
																"src": "764:62:7"
															},
															"nativeSrc": "761:82:7",
															"nodeType": "YulIf",
															"src": "761:82:7"
														}
													]
												},
												"name": "validator_revert_t_contract$_ISwapRouter_$284",
												"nativeSrc": "689:160:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "744:5:7",
														"nodeType": "YulTypedName",
														"src": "744:5:7",
														"type": ""
													}
												],
												"src": "689:160:7"
											},
											{
												"body": {
													"nativeSrc": "937:99:7",
													"nodeType": "YulBlock",
													"src": "937:99:7",
													"statements": [
														{
															"nativeSrc": "947:22:7",
															"nodeType": "YulAssignment",
															"src": "947:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "962:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "956:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "956:5:7"
																},
																"nativeSrc": "956:13:7",
																"nodeType": "YulFunctionCall",
																"src": "956:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "947:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "947:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ISwapRouter_$284",
																	"nativeSrc": "978:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "978:45:7"
																},
																"nativeSrc": "978:52:7",
																"nodeType": "YulFunctionCall",
																"src": "978:52:7"
															},
															"nativeSrc": "978:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "978:52:7"
														}
													]
												},
												"name": "abi_decode_t_contract$_ISwapRouter_$284_fromMemory",
												"nativeSrc": "855:181:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "915:6:7",
														"nodeType": "YulTypedName",
														"src": "915:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "923:3:7",
														"nodeType": "YulTypedName",
														"src": "923:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "931:5:7",
														"nodeType": "YulTypedName",
														"src": "931:5:7",
														"type": ""
													}
												],
												"src": "855:181:7"
											},
											{
												"body": {
													"nativeSrc": "1104:51:7",
													"nodeType": "YulBlock",
													"src": "1104:51:7",
													"statements": [
														{
															"nativeSrc": "1114:35:7",
															"nodeType": "YulAssignment",
															"src": "1114:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1143:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1143:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "1125:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1125:17:7"
																},
																"nativeSrc": "1125:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1125:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1114:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1114:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IQuoterV2_$184",
												"nativeSrc": "1042:113:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1086:5:7",
														"nodeType": "YulTypedName",
														"src": "1086:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1096:7:7",
														"nodeType": "YulTypedName",
														"src": "1096:7:7",
														"type": ""
													}
												],
												"src": "1042:113:7"
											},
											{
												"body": {
													"nativeSrc": "1221:96:7",
													"nodeType": "YulBlock",
													"src": "1221:96:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1295:16:7",
																"nodeType": "YulBlock",
																"src": "1295:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1304:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1304:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1307:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1307:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1297:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1297:6:7"
																			},
																			"nativeSrc": "1297:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1297:12:7"
																		},
																		"nativeSrc": "1297:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1297:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1244:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1244:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1286:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1286:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IQuoterV2_$184",
																					"nativeSrc": "1251:34:7",
																					"nodeType": "YulIdentifier",
																					"src": "1251:34:7"
																				},
																				"nativeSrc": "1251:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1251:41:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1241:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1241:2:7"
																		},
																		"nativeSrc": "1241:52:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1241:52:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1234:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1234:6:7"
																},
																"nativeSrc": "1234:60:7",
																"nodeType": "YulFunctionCall",
																"src": "1234:60:7"
															},
															"nativeSrc": "1231:80:7",
															"nodeType": "YulIf",
															"src": "1231:80:7"
														}
													]
												},
												"name": "validator_revert_t_contract$_IQuoterV2_$184",
												"nativeSrc": "1161:156:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1214:5:7",
														"nodeType": "YulTypedName",
														"src": "1214:5:7",
														"type": ""
													}
												],
												"src": "1161:156:7"
											},
											{
												"body": {
													"nativeSrc": "1403:97:7",
													"nodeType": "YulBlock",
													"src": "1403:97:7",
													"statements": [
														{
															"nativeSrc": "1413:22:7",
															"nodeType": "YulAssignment",
															"src": "1413:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1428:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1428:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1422:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1422:5:7"
																},
																"nativeSrc": "1422:13:7",
																"nodeType": "YulFunctionCall",
																"src": "1422:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1413:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1413:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1488:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1488:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IQuoterV2_$184",
																	"nativeSrc": "1444:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1444:43:7"
																},
																"nativeSrc": "1444:50:7",
																"nodeType": "YulFunctionCall",
																"src": "1444:50:7"
															},
															"nativeSrc": "1444:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "1444:50:7"
														}
													]
												},
												"name": "abi_decode_t_contract$_IQuoterV2_$184_fromMemory",
												"nativeSrc": "1323:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1381:6:7",
														"nodeType": "YulTypedName",
														"src": "1381:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1389:3:7",
														"nodeType": "YulTypedName",
														"src": "1389:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1397:5:7",
														"nodeType": "YulTypedName",
														"src": "1397:5:7",
														"type": ""
													}
												],
												"src": "1323:177:7"
											},
											{
												"body": {
													"nativeSrc": "1576:51:7",
													"nodeType": "YulBlock",
													"src": "1576:51:7",
													"statements": [
														{
															"nativeSrc": "1586:35:7",
															"nodeType": "YulAssignment",
															"src": "1586:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1615:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1615:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "1597:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1597:17:7"
																},
																"nativeSrc": "1597:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1597:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1586:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1586:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IUniswapV3Factory_$469",
												"nativeSrc": "1506:121:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1558:5:7",
														"nodeType": "YulTypedName",
														"src": "1558:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1568:7:7",
														"nodeType": "YulTypedName",
														"src": "1568:7:7",
														"type": ""
													}
												],
												"src": "1506:121:7"
											},
											{
												"body": {
													"nativeSrc": "1701:104:7",
													"nodeType": "YulBlock",
													"src": "1701:104:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1783:16:7",
																"nodeType": "YulBlock",
																"src": "1783:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1792:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1792:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1795:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1795:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1785:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1785:6:7"
																			},
																			"nativeSrc": "1785:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1785:12:7"
																		},
																		"nativeSrc": "1785:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1785:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1724:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1724:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1774:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1774:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IUniswapV3Factory_$469",
																					"nativeSrc": "1731:42:7",
																					"nodeType": "YulIdentifier",
																					"src": "1731:42:7"
																				},
																				"nativeSrc": "1731:49:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1731:49:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1721:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1721:2:7"
																		},
																		"nativeSrc": "1721:60:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1721:60:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1714:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1714:6:7"
																},
																"nativeSrc": "1714:68:7",
																"nodeType": "YulFunctionCall",
																"src": "1714:68:7"
															},
															"nativeSrc": "1711:88:7",
															"nodeType": "YulIf",
															"src": "1711:88:7"
														}
													]
												},
												"name": "validator_revert_t_contract$_IUniswapV3Factory_$469",
												"nativeSrc": "1633:172:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1694:5:7",
														"nodeType": "YulTypedName",
														"src": "1694:5:7",
														"type": ""
													}
												],
												"src": "1633:172:7"
											},
											{
												"body": {
													"nativeSrc": "1899:105:7",
													"nodeType": "YulBlock",
													"src": "1899:105:7",
													"statements": [
														{
															"nativeSrc": "1909:22:7",
															"nodeType": "YulAssignment",
															"src": "1909:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1924:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1924:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1918:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1918:5:7"
																},
																"nativeSrc": "1918:13:7",
																"nodeType": "YulFunctionCall",
																"src": "1918:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1909:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1909:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1992:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1992:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IUniswapV3Factory_$469",
																	"nativeSrc": "1940:51:7",
																	"nodeType": "YulIdentifier",
																	"src": "1940:51:7"
																},
																"nativeSrc": "1940:58:7",
																"nodeType": "YulFunctionCall",
																"src": "1940:58:7"
															},
															"nativeSrc": "1940:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "1940:58:7"
														}
													]
												},
												"name": "abi_decode_t_contract$_IUniswapV3Factory_$469_fromMemory",
												"nativeSrc": "1811:193:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1877:6:7",
														"nodeType": "YulTypedName",
														"src": "1877:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1885:3:7",
														"nodeType": "YulTypedName",
														"src": "1885:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1893:5:7",
														"nodeType": "YulTypedName",
														"src": "1893:5:7",
														"type": ""
													}
												],
												"src": "1811:193:7"
											},
											{
												"body": {
													"nativeSrc": "2053:79:7",
													"nodeType": "YulBlock",
													"src": "2053:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2110:16:7",
																"nodeType": "YulBlock",
																"src": "2110:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2119:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2119:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2122:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2122:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2112:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2112:6:7"
																			},
																			"nativeSrc": "2112:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2112:12:7"
																		},
																		"nativeSrc": "2112:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2112:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2076:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2076:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2101:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2101:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2083:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2083:17:7"
																				},
																				"nativeSrc": "2083:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2083:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2073:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2073:2:7"
																		},
																		"nativeSrc": "2073:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2073:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2066:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2066:6:7"
																},
																"nativeSrc": "2066:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2066:43:7"
															},
															"nativeSrc": "2063:63:7",
															"nodeType": "YulIf",
															"src": "2063:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2010:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2046:5:7",
														"nodeType": "YulTypedName",
														"src": "2046:5:7",
														"type": ""
													}
												],
												"src": "2010:122:7"
											},
											{
												"body": {
													"nativeSrc": "2201:80:7",
													"nodeType": "YulBlock",
													"src": "2201:80:7",
													"statements": [
														{
															"nativeSrc": "2211:22:7",
															"nodeType": "YulAssignment",
															"src": "2211:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2226:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2226:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2220:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2220:5:7"
																},
																"nativeSrc": "2220:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2220:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2211:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2211:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2269:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2269:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2242:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2242:26:7"
																},
																"nativeSrc": "2242:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2242:33:7"
															},
															"nativeSrc": "2242:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2242:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "2138:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2179:6:7",
														"nodeType": "YulTypedName",
														"src": "2179:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2187:3:7",
														"nodeType": "YulTypedName",
														"src": "2187:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2195:5:7",
														"nodeType": "YulTypedName",
														"src": "2195:5:7",
														"type": ""
													}
												],
												"src": "2138:143:7"
											},
											{
												"body": {
													"nativeSrc": "2527:1173:7",
													"nodeType": "YulBlock",
													"src": "2527:1173:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2574:83:7",
																"nodeType": "YulBlock",
																"src": "2574:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2576:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2576:77:7"
																			},
																			"nativeSrc": "2576:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2576:79:7"
																		},
																		"nativeSrc": "2576:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2576:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2548:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2548:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2557:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2557:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2544:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2544:3:7"
																		},
																		"nativeSrc": "2544:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2544:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2569:3:7",
																		"nodeType": "YulLiteral",
																		"src": "2569:3:7",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2540:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2540:3:7"
																},
																"nativeSrc": "2540:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2540:33:7"
															},
															"nativeSrc": "2537:120:7",
															"nodeType": "YulIf",
															"src": "2537:120:7"
														},
														{
															"nativeSrc": "2667:147:7",
															"nodeType": "YulBlock",
															"src": "2667:147:7",
															"statements": [
																{
																	"nativeSrc": "2682:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2682:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2696:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2696:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2686:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2686:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2711:93:7",
																	"nodeType": "YulAssignment",
																	"src": "2711:93:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2776:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2776:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2787:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2787:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2772:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2772:3:7"
																				},
																				"nativeSrc": "2772:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2772:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2796:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2796:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ISwapRouter_$284_fromMemory",
																			"nativeSrc": "2721:50:7",
																			"nodeType": "YulIdentifier",
																			"src": "2721:50:7"
																		},
																		"nativeSrc": "2721:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2721:83:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2711:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2711:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2824:146:7",
															"nodeType": "YulBlock",
															"src": "2824:146:7",
															"statements": [
																{
																	"nativeSrc": "2839:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2839:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2853:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2853:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2843:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2843:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2869:91:7",
																	"nodeType": "YulAssignment",
																	"src": "2869:91:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2932:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2932:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2943:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2943:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2928:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2928:3:7"
																				},
																				"nativeSrc": "2928:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2928:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2952:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2952:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IQuoterV2_$184_fromMemory",
																			"nativeSrc": "2879:48:7",
																			"nodeType": "YulIdentifier",
																			"src": "2879:48:7"
																		},
																		"nativeSrc": "2879:81:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2879:81:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2869:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2869:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2980:154:7",
															"nodeType": "YulBlock",
															"src": "2980:154:7",
															"statements": [
																{
																	"nativeSrc": "2995:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2995:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3009:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3009:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2999:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2999:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3025:99:7",
																	"nodeType": "YulAssignment",
																	"src": "3025:99:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3096:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3096:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3107:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3107:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3092:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3092:3:7"
																				},
																				"nativeSrc": "3092:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3092:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3116:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3116:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IUniswapV3Factory_$469_fromMemory",
																			"nativeSrc": "3035:56:7",
																			"nodeType": "YulIdentifier",
																			"src": "3035:56:7"
																		},
																		"nativeSrc": "3035:89:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3035:89:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3025:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3025:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3144:129:7",
															"nodeType": "YulBlock",
															"src": "3144:129:7",
															"statements": [
																{
																	"nativeSrc": "3159:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3159:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3173:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3173:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3163:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3163:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3189:74:7",
																	"nodeType": "YulAssignment",
																	"src": "3189:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3235:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3235:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3246:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3246:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3231:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3231:3:7"
																				},
																				"nativeSrc": "3231:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3231:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3255:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3255:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3199:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "3199:31:7"
																		},
																		"nativeSrc": "3199:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3199:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "3189:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3189:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3283:130:7",
															"nodeType": "YulBlock",
															"src": "3283:130:7",
															"statements": [
																{
																	"nativeSrc": "3298:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3298:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3312:3:7",
																		"nodeType": "YulLiteral",
																		"src": "3312:3:7",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3302:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3302:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3329:74:7",
																	"nodeType": "YulAssignment",
																	"src": "3329:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3375:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3375:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3386:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3386:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3371:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3371:3:7"
																				},
																				"nativeSrc": "3371:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3371:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3395:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3395:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3339:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "3339:31:7"
																		},
																		"nativeSrc": "3339:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3339:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "3329:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3329:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3423:130:7",
															"nodeType": "YulBlock",
															"src": "3423:130:7",
															"statements": [
																{
																	"nativeSrc": "3438:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3438:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3452:3:7",
																		"nodeType": "YulLiteral",
																		"src": "3452:3:7",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3442:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3442:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3469:74:7",
																	"nodeType": "YulAssignment",
																	"src": "3469:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3515:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3515:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3526:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3526:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3511:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3511:3:7"
																				},
																				"nativeSrc": "3511:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3511:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3535:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3535:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3479:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "3479:31:7"
																		},
																		"nativeSrc": "3479:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3479:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "3469:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3469:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3563:130:7",
															"nodeType": "YulBlock",
															"src": "3563:130:7",
															"statements": [
																{
																	"nativeSrc": "3578:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3578:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3592:3:7",
																		"nodeType": "YulLiteral",
																		"src": "3592:3:7",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3582:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3582:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3609:74:7",
																	"nodeType": "YulAssignment",
																	"src": "3609:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3655:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3655:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3666:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3666:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3651:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3651:3:7"
																				},
																				"nativeSrc": "3651:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3651:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3675:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3675:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3619:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "3619:31:7"
																		},
																		"nativeSrc": "3619:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3619:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "3609:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3609:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ISwapRouter_$284t_contract$_IQuoterV2_$184t_contract$_IUniswapV3Factory_$469t_addresst_addresst_addresst_address_fromMemory",
												"nativeSrc": "2287:1413:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2449:9:7",
														"nodeType": "YulTypedName",
														"src": "2449:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2460:7:7",
														"nodeType": "YulTypedName",
														"src": "2460:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2472:6:7",
														"nodeType": "YulTypedName",
														"src": "2472:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2480:6:7",
														"nodeType": "YulTypedName",
														"src": "2480:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2488:6:7",
														"nodeType": "YulTypedName",
														"src": "2488:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2496:6:7",
														"nodeType": "YulTypedName",
														"src": "2496:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2504:6:7",
														"nodeType": "YulTypedName",
														"src": "2504:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2512:6:7",
														"nodeType": "YulTypedName",
														"src": "2512:6:7",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "2520:6:7",
														"nodeType": "YulTypedName",
														"src": "2520:6:7",
														"type": ""
													}
												],
												"src": "2287:1413:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ISwapRouter_$284(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ISwapRouter_$284(value) {\n        if iszero(eq(value, cleanup_t_contract$_ISwapRouter_$284(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ISwapRouter_$284_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ISwapRouter_$284(value)\n    }\n\n    function cleanup_t_contract$_IQuoterV2_$184(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IQuoterV2_$184(value) {\n        if iszero(eq(value, cleanup_t_contract$_IQuoterV2_$184(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IQuoterV2_$184_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IQuoterV2_$184(value)\n    }\n\n    function cleanup_t_contract$_IUniswapV3Factory_$469(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IUniswapV3Factory_$469(value) {\n        if iszero(eq(value, cleanup_t_contract$_IUniswapV3Factory_$469(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IUniswapV3Factory_$469_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IUniswapV3Factory_$469(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ISwapRouter_$284t_contract$_IQuoterV2_$184t_contract$_IUniswapV3Factory_$469t_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ISwapRouter_$284_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IQuoterV2_$184_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_IUniswapV3Factory_$469_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "61016060405260405180606001604052806101f461ffff168152602001610bb861ffff16815260200161271061ffff168152505f9060036100419291906101ea565b5034801561004d575f80fd5b50604051610d6b380380610d6b833981810160405281019061006f91906103bd565b8673ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508573ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508473ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1660e08173ffffffffffffffffffffffffffffffffffffffff16815250508273ffffffffffffffffffffffffffffffffffffffff166101008173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff166101208173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff166101408173ffffffffffffffffffffffffffffffffffffffff16815250505050505050505061045a565b828054828255905f5260205f2090600901600a90048101928215610282579160200282015f5b8382111561025157835183826101000a81548162ffffff021916908361ffff1602179055509260200192600301602081600201049283019260010302610210565b80156102805782816101000a81549062ffffff0219169055600301602081600201049283019260010302610251565b505b50905061028f9190610293565b5090565b5b808211156102aa575f815f905550600101610294565b5090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102db826102b2565b9050919050565b5f6102ec826102d1565b9050919050565b6102fc816102e2565b8114610306575f80fd5b50565b5f81519050610317816102f3565b92915050565b5f610327826102d1565b9050919050565b6103378161031d565b8114610341575f80fd5b50565b5f815190506103528161032e565b92915050565b5f610362826102d1565b9050919050565b61037281610358565b811461037c575f80fd5b50565b5f8151905061038d81610369565b92915050565b61039c816102d1565b81146103a6575f80fd5b50565b5f815190506103b781610393565b92915050565b5f805f805f805f60e0888a0312156103d8576103d76102ae565b5b5f6103e58a828b01610309565b97505060206103f68a828b01610344565b96505060406104078a828b0161037f565b95505060606104188a828b016103a9565b94505060806104298a828b016103a9565b93505060a061043a8a828b016103a9565b92505060c061044b8a828b016103a9565b91505092959891949750929550565b60805160a05160c05160e0516101005161012051610140516108b96104b25f395f61036801525f61022301525f6103b001525f6103d401525f6101ff01525f81816102ba01526103f801525f61038c01526108b95ff3fe608060405234801561000f575f80fd5b5060043610610091575f3560e01c8063ad5c464811610064578063ad5c464814610132578063c31c9c0714610150578063c54e44eb1461016e578063e0bab4c41461018c578063e20dccb2146101aa57610091565b8063230ed44a146100955780635b549182146100c557806389a30271146100e35780639a90f2ec14610101575b5f80fd5b6100af60048036038101906100aa9190610451565b6101c8565b6040516100bc9190610499565b60405180910390f35b6100cd6101fd565b6040516100da919061052c565b60405180910390f35b6100eb610221565b6040516100f89190610565565b60405180910390f35b61011b600480360381019061011691906105d2565b610245565b604051610129929190610654565b60405180910390f35b61013a610366565b6040516101479190610565565b60405180910390f35b61015861038a565b604051610165919061069b565b60405180910390f35b6101766103ae565b6040516101839190610565565b60405180910390f35b6101946103d2565b6040516101a19190610565565b60405180910390f35b6101b26103f6565b6040516101bf91906106d4565b60405180910390f35b5f81815481106101d6575f80fd5b905f5260205f2090600a9182820401919006600302915054906101000a900462ffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f805f6040518060a001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018562ffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c6a5026a826040518263ffffffff1660e01b8152600401610311919061078f565b6080604051808303815f875af115801561032d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610351919061081f565b90505080935081945050505094509492505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f80fd5b5f819050919050565b6104308161041e565b811461043a575f80fd5b50565b5f8135905061044b81610427565b92915050565b5f602082840312156104665761046561041a565b5b5f6104738482850161043d565b91505092915050565b5f62ffffff82169050919050565b6104938161047c565b82525050565b5f6020820190506104ac5f83018461048a565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6104f46104ef6104ea846104b2565b6104d1565b6104b2565b9050919050565b5f610505826104da565b9050919050565b5f610516826104fb565b9050919050565b6105268161050c565b82525050565b5f60208201905061053f5f83018461051d565b92915050565b5f61054f826104b2565b9050919050565b61055f81610545565b82525050565b5f6020820190506105785f830184610556565b92915050565b61058781610545565b8114610591575f80fd5b50565b5f813590506105a28161057e565b92915050565b6105b18161047c565b81146105bb575f80fd5b50565b5f813590506105cc816105a8565b92915050565b5f805f80608085870312156105ea576105e961041a565b5b5f6105f787828801610594565b945050602061060887828801610594565b93505060406106198782880161043d565b925050606061062a878288016105be565b91505092959194509250565b61063f8161041e565b82525050565b61064e816104b2565b82525050565b5f6040820190506106675f830185610636565b6106746020830184610645565b9392505050565b5f610685826104fb565b9050919050565b6106958161067b565b82525050565b5f6020820190506106ae5f83018461068c565b92915050565b5f6106be826104fb565b9050919050565b6106ce816106b4565b82525050565b5f6020820190506106e75f8301846106c5565b92915050565b6106f681610545565b82525050565b6107058161041e565b82525050565b6107148161047c565b82525050565b610723816104b2565b82525050565b60a082015f82015161073d5f8501826106ed565b50602082015161075060208501826106ed565b50604082015161076360408501826106fc565b506060820151610776606085018261070b565b506080820151610789608085018261071a565b50505050565b5f60a0820190506107a25f830184610729565b92915050565b5f815190506107b681610427565b92915050565b6107c5816104b2565b81146107cf575f80fd5b50565b5f815190506107e0816107bc565b92915050565b5f63ffffffff82169050919050565b6107fe816107e6565b8114610808575f80fd5b50565b5f81519050610819816107f5565b92915050565b5f805f80608085870312156108375761083661041a565b5b5f610844878288016107a8565b9450506020610855878288016107d2565b93505060406108668782880161080b565b9250506060610877878288016107a8565b9150509295919450925056fea2646970667358221220498b3a8689c99b7a627a6d8896234a0088fca93d551cd94313d359830f423f5964736f6c634300081a0033",
							"opcodes": "PUSH2 0x160 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1F4 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2710 PUSH2 0xFFFF AND DUP2 MSTORE POP PUSH0 SWAP1 PUSH1 0x3 PUSH2 0x41 SWAP3 SWAP2 SWAP1 PUSH2 0x1EA JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH2 0x4D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xD6B CODESIZE SUB DUP1 PUSH2 0xD6B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x6F SWAP2 SWAP1 PUSH2 0x3BD JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x100 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x120 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x140 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP POP POP POP POP PUSH2 0x45A JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x9 ADD PUSH1 0xA SWAP1 DIV DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x282 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0x251 JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x3 ADD PUSH1 0x20 DUP2 PUSH1 0x2 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x210 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x280 JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH3 0xFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 ADD PUSH1 0x20 DUP2 PUSH1 0x2 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x251 JUMP JUMPDEST POP JUMPDEST POP SWAP1 POP PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x293 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2AA JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x294 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2DB DUP3 PUSH2 0x2B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2EC DUP3 PUSH2 0x2D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FC DUP2 PUSH2 0x2E2 JUMP JUMPDEST DUP2 EQ PUSH2 0x306 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x317 DUP2 PUSH2 0x2F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x327 DUP3 PUSH2 0x2D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x337 DUP2 PUSH2 0x31D JUMP JUMPDEST DUP2 EQ PUSH2 0x341 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x352 DUP2 PUSH2 0x32E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x362 DUP3 PUSH2 0x2D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x372 DUP2 PUSH2 0x358 JUMP JUMPDEST DUP2 EQ PUSH2 0x37C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x38D DUP2 PUSH2 0x369 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x39C DUP2 PUSH2 0x2D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x3A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3B7 DUP2 PUSH2 0x393 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3D8 JUMPI PUSH2 0x3D7 PUSH2 0x2AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3E5 DUP11 DUP3 DUP12 ADD PUSH2 0x309 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x3F6 DUP11 DUP3 DUP12 ADD PUSH2 0x344 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x407 DUP11 DUP3 DUP12 ADD PUSH2 0x37F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x418 DUP11 DUP3 DUP12 ADD PUSH2 0x3A9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x429 DUP11 DUP3 DUP12 ADD PUSH2 0x3A9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x43A DUP11 DUP3 DUP12 ADD PUSH2 0x3A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x44B DUP11 DUP3 DUP12 ADD PUSH2 0x3A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x8B9 PUSH2 0x4B2 PUSH0 CODECOPY PUSH0 PUSH2 0x368 ADD MSTORE PUSH0 PUSH2 0x223 ADD MSTORE PUSH0 PUSH2 0x3B0 ADD MSTORE PUSH0 PUSH2 0x3D4 ADD MSTORE PUSH0 PUSH2 0x1FF ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x2BA ADD MSTORE PUSH2 0x3F8 ADD MSTORE PUSH0 PUSH2 0x38C ADD MSTORE PUSH2 0x8B9 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAD5C4648 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0xC54E44EB EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xE0BAB4C4 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xE20DCCB2 EQ PUSH2 0x1AA JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x230ED44A EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x5B549182 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x9A90F2EC EQ PUSH2 0x101 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x451 JUMP JUMPDEST PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0x221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x245 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP3 SWAP2 SWAP1 PUSH2 0x654 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH2 0x366 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x69B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x176 PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0xA SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x3 MUL SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC6A5026A DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x78F JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x32D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x81F JUMP JUMPDEST SWAP1 POP POP DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x430 DUP2 PUSH2 0x41E JUMP JUMPDEST DUP2 EQ PUSH2 0x43A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x44B DUP2 PUSH2 0x427 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x466 JUMPI PUSH2 0x465 PUSH2 0x41A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x473 DUP5 DUP3 DUP6 ADD PUSH2 0x43D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x493 DUP2 PUSH2 0x47C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4AC PUSH0 DUP4 ADD DUP5 PUSH2 0x48A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4F4 PUSH2 0x4EF PUSH2 0x4EA DUP5 PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x505 DUP3 PUSH2 0x4DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x516 DUP3 PUSH2 0x4FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x526 DUP2 PUSH2 0x50C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x53F PUSH0 DUP4 ADD DUP5 PUSH2 0x51D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x54F DUP3 PUSH2 0x4B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55F DUP2 PUSH2 0x545 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x578 PUSH0 DUP4 ADD DUP5 PUSH2 0x556 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x587 DUP2 PUSH2 0x545 JUMP JUMPDEST DUP2 EQ PUSH2 0x591 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A2 DUP2 PUSH2 0x57E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5B1 DUP2 PUSH2 0x47C JUMP JUMPDEST DUP2 EQ PUSH2 0x5BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5CC DUP2 PUSH2 0x5A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x5EA JUMPI PUSH2 0x5E9 PUSH2 0x41A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5F7 DUP8 DUP3 DUP9 ADD PUSH2 0x594 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x608 DUP8 DUP3 DUP9 ADD PUSH2 0x594 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x619 DUP8 DUP3 DUP9 ADD PUSH2 0x43D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x62A DUP8 DUP3 DUP9 ADD PUSH2 0x5BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x63F DUP2 PUSH2 0x41E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x64E DUP2 PUSH2 0x4B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x667 PUSH0 DUP4 ADD DUP6 PUSH2 0x636 JUMP JUMPDEST PUSH2 0x674 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x645 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x685 DUP3 PUSH2 0x4FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x695 DUP2 PUSH2 0x67B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6AE PUSH0 DUP4 ADD DUP5 PUSH2 0x68C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6BE DUP3 PUSH2 0x4FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6CE DUP2 PUSH2 0x6B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6E7 PUSH0 DUP4 ADD DUP5 PUSH2 0x6C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6F6 DUP2 PUSH2 0x545 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x705 DUP2 PUSH2 0x41E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x714 DUP2 PUSH2 0x47C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x723 DUP2 PUSH2 0x4B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x73D PUSH0 DUP6 ADD DUP3 PUSH2 0x6ED JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x750 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x6ED JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x763 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x6FC JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x776 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x70B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x789 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x71A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x7A2 PUSH0 DUP4 ADD DUP5 PUSH2 0x729 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x7B6 DUP2 PUSH2 0x427 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7C5 DUP2 PUSH2 0x4B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x7CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x7E0 DUP2 PUSH2 0x7BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7FE DUP2 PUSH2 0x7E6 JUMP JUMPDEST DUP2 EQ PUSH2 0x808 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x819 DUP2 PUSH2 0x7F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x837 JUMPI PUSH2 0x836 PUSH2 0x41A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x844 DUP8 DUP3 DUP9 ADD PUSH2 0x7A8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x855 DUP8 DUP3 DUP9 ADD PUSH2 0x7D2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x866 DUP8 DUP3 DUP9 ADD PUSH2 0x80B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x877 DUP8 DUP3 DUP9 ADD PUSH2 0x7A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBHASH DUP12 GASPRICE DUP7 DUP10 0xC9 SWAP12 PUSH27 0x627A6D8896234A0088FCA93D551CD94313D359830F423F5964736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "324:5931:6:-:0;;;500:45;;;;;;;;528:3;500:45;;;;;;533:4;500:45;;;;;;539:5;500:45;;;;;;;;;;;;;:::i;:::-;;804:435;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1052:11;1039:24;;;;;;;;;;1085:9;1074:20;;;;;;;;;;1124:17;1105:36;;;;;;;;;;1158:4;1152:10;;;;;;;;;;1180:5;1173:12;;;;;;;;;;1203:5;1196:12;;;;;;;;;;1226:5;1219:12;;;;;;;;;;804:435;;;;;;;324:5931;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:115::-;624:7;653:24;671:5;653:24;:::i;:::-;642:35;;568:115;;;:::o;689:160::-;781:43;818:5;781:43;:::i;:::-;774:5;771:54;761:82;;839:1;836;829:12;761:82;689:160;:::o;855:181::-;931:5;962:6;956:13;947:22;;978:52;1024:5;978:52;:::i;:::-;855:181;;;;:::o;1042:113::-;1096:7;1125:24;1143:5;1125:24;:::i;:::-;1114:35;;1042:113;;;:::o;1161:156::-;1251:41;1286:5;1251:41;:::i;:::-;1244:5;1241:52;1231:80;;1307:1;1304;1297:12;1231:80;1161:156;:::o;1323:177::-;1397:5;1428:6;1422:13;1413:22;;1444:50;1488:5;1444:50;:::i;:::-;1323:177;;;;:::o;1506:121::-;1568:7;1597:24;1615:5;1597:24;:::i;:::-;1586:35;;1506:121;;;:::o;1633:172::-;1731:49;1774:5;1731:49;:::i;:::-;1724:5;1721:60;1711:88;;1795:1;1792;1785:12;1711:88;1633:172;:::o;1811:193::-;1893:5;1924:6;1918:13;1909:22;;1940:58;1992:5;1940:58;:::i;:::-;1811:193;;;;:::o;2010:122::-;2083:24;2101:5;2083:24;:::i;:::-;2076:5;2073:35;2063:63;;2122:1;2119;2112:12;2063:63;2010:122;:::o;2138:143::-;2195:5;2226:6;2220:13;2211:22;;2242:33;2269:5;2242:33;:::i;:::-;2138:143;;;;:::o;2287:1413::-;2472:6;2480;2488;2496;2504;2512;2520;2569:3;2557:9;2548:7;2544:23;2540:33;2537:120;;;2576:79;;:::i;:::-;2537:120;2696:1;2721:83;2796:7;2787:6;2776:9;2772:22;2721:83;:::i;:::-;2711:93;;2667:147;2853:2;2879:81;2952:7;2943:6;2932:9;2928:22;2879:81;:::i;:::-;2869:91;;2824:146;3009:2;3035:89;3116:7;3107:6;3096:9;3092:22;3035:89;:::i;:::-;3025:99;;2980:154;3173:2;3199:64;3255:7;3246:6;3235:9;3231:22;3199:64;:::i;:::-;3189:74;;3144:129;3312:3;3339:64;3395:7;3386:6;3375:9;3371:22;3339:64;:::i;:::-;3329:74;;3283:130;3452:3;3479:64;3535:7;3526:6;3515:9;3511:22;3479:64;:::i;:::-;3469:74;;3423:130;3592:3;3619:64;3675:7;3666:6;3655:9;3651:22;3619:64;:::i;:::-;3609:74;;3563:130;2287:1413;;;;;;;;;;:::o;324:5931:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DAI_504": {
									"entryPoint": 978,
									"id": 504,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USDC_508": {
									"entryPoint": 545,
									"id": 508,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USDT_506": {
									"entryPoint": 942,
									"id": 506,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WETH_510": {
									"entryPoint": 870,
									"id": 510,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeTiers_498": {
									"entryPoint": 456,
									"id": 498,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getAmountOutMinimum_600": {
									"entryPoint": 581,
									"id": 600,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"@quoterV2_488": {
									"entryPoint": 1014,
									"id": 488,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapRouter_485": {
									"entryPoint": 906,
									"id": 485,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@uniswapV3Factory_491": {
									"entryPoint": 509,
									"id": 491,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint160_fromMemory": {
									"entryPoint": 2002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint24": {
									"entryPoint": 1470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32_fromMemory": {
									"entryPoint": 2059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint24": {
									"entryPoint": 1490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint160t_uint32t_uint256_fromMemory": {
									"entryPoint": 2079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IQuoterV2_$184_to_t_address_fromStack": {
									"entryPoint": 1733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ISwapRouter_$284_to_t_address_fromStack": {
									"entryPoint": 1676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IUniswapV3Factory_$469_to_t_address_fromStack": {
									"entryPoint": 1309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr_to_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr_fromStack": {
									"entryPoint": 1833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160": {
									"entryPoint": 1818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160_fromStack": {
									"entryPoint": 1605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 1803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24_fromStack": {
									"entryPoint": 1162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IQuoterV2_$184__to_t_address__fromStack_reversed": {
									"entryPoint": 1748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISwapRouter_$284__to_t_address__fromStack_reversed": {
									"entryPoint": 1691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUniswapV3Factory_$469__to_t_address__fromStack_reversed": {
									"entryPoint": 1324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr__to_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr__fromStack_reversed": {
									"entryPoint": 1935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed": {
									"entryPoint": 1177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint160__to_t_uint256_t_uint160__fromStack_reversed": {
									"entryPoint": 1620,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 1148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 2022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IQuoterV2_$184_to_t_address": {
									"entryPoint": 1716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ISwapRouter_$284_to_t_address": {
									"entryPoint": 1659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IUniswapV3Factory_$469_to_t_address": {
									"entryPoint": 1292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1050,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint160": {
									"entryPoint": 1980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint24": {
									"entryPoint": 1448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 2037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9763:7",
										"nodeType": "YulBlock",
										"src": "0:9763:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:32:7",
													"nodeType": "YulBlock",
													"src": "379:32:7",
													"statements": [
														{
															"nativeSrc": "389:16:7",
															"nodeType": "YulAssignment",
															"src": "389:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:7",
																"nodeType": "YulIdentifier",
																"src": "400:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:77:7"
											},
											{
												"body": {
													"nativeSrc": "460:79:7",
													"nodeType": "YulBlock",
													"src": "460:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:7",
																"nodeType": "YulBlock",
																"src": "517:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:7",
																					"nodeType": "YulLiteral",
																					"src": "526:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:7",
																					"nodeType": "YulLiteral",
																					"src": "529:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:7"
																			},
																			"nativeSrc": "519:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:7"
																		},
																		"nativeSrc": "519:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:7"
																				},
																				"nativeSrc": "490:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:7"
																		},
																		"nativeSrc": "480:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:7"
																},
																"nativeSrc": "473:43:7",
																"nodeType": "YulFunctionCall",
																"src": "473:43:7"
															},
															"nativeSrc": "470:63:7",
															"nodeType": "YulIf",
															"src": "470:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:7",
														"nodeType": "YulTypedName",
														"src": "453:5:7",
														"type": ""
													}
												],
												"src": "417:122:7"
											},
											{
												"body": {
													"nativeSrc": "597:87:7",
													"nodeType": "YulBlock",
													"src": "597:87:7",
													"statements": [
														{
															"nativeSrc": "607:29:7",
															"nodeType": "YulAssignment",
															"src": "607:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:7"
																},
																"nativeSrc": "616:20:7",
																"nodeType": "YulFunctionCall",
																"src": "616:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:7"
																},
																"nativeSrc": "645:33:7",
																"nodeType": "YulFunctionCall",
																"src": "645:33:7"
															},
															"nativeSrc": "645:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:7",
														"nodeType": "YulTypedName",
														"src": "575:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:7",
														"nodeType": "YulTypedName",
														"src": "583:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:7",
														"nodeType": "YulTypedName",
														"src": "591:5:7",
														"type": ""
													}
												],
												"src": "545:139:7"
											},
											{
												"body": {
													"nativeSrc": "756:263:7",
													"nodeType": "YulBlock",
													"src": "756:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:7",
																"nodeType": "YulBlock",
																"src": "802:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:7"
																			},
																			"nativeSrc": "804:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:7"
																		},
																		"nativeSrc": "804:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:7"
																		},
																		"nativeSrc": "773:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:7",
																		"nodeType": "YulLiteral",
																		"src": "798:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:7"
																},
																"nativeSrc": "769:32:7",
																"nodeType": "YulFunctionCall",
																"src": "769:32:7"
															},
															"nativeSrc": "766:119:7",
															"nodeType": "YulIf",
															"src": "766:119:7"
														},
														{
															"nativeSrc": "895:117:7",
															"nodeType": "YulBlock",
															"src": "895:117:7",
															"statements": [
																{
																	"nativeSrc": "910:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:7",
																		"nodeType": "YulLiteral",
																		"src": "924:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:7",
																			"nodeType": "YulTypedName",
																			"src": "914:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:7",
																	"nodeType": "YulAssignment",
																	"src": "939:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:7"
																				},
																				"nativeSrc": "970:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:7"
																		},
																		"nativeSrc": "949:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:7",
														"nodeType": "YulTypedName",
														"src": "726:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:7",
														"nodeType": "YulTypedName",
														"src": "737:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:7",
														"nodeType": "YulTypedName",
														"src": "749:6:7",
														"type": ""
													}
												],
												"src": "690:329:7"
											},
											{
												"body": {
													"nativeSrc": "1069:47:7",
													"nodeType": "YulBlock",
													"src": "1069:47:7",
													"statements": [
														{
															"nativeSrc": "1079:31:7",
															"nodeType": "YulAssignment",
															"src": "1079:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1094:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1094:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1101:8:7",
																		"nodeType": "YulLiteral",
																		"src": "1101:8:7",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1090:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1090:3:7"
																},
																"nativeSrc": "1090:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1090:20:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1079:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1079:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "1025:91:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1051:5:7",
														"nodeType": "YulTypedName",
														"src": "1051:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1061:7:7",
														"nodeType": "YulTypedName",
														"src": "1061:7:7",
														"type": ""
													}
												],
												"src": "1025:91:7"
											},
											{
												"body": {
													"nativeSrc": "1185:52:7",
													"nodeType": "YulBlock",
													"src": "1185:52:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1202:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1202:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1224:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1224:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "1207:16:7",
																			"nodeType": "YulIdentifier",
																			"src": "1207:16:7"
																		},
																		"nativeSrc": "1207:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1207:23:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1195:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1195:6:7"
																},
																"nativeSrc": "1195:36:7",
																"nodeType": "YulFunctionCall",
																"src": "1195:36:7"
															},
															"nativeSrc": "1195:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "1195:36:7"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
												"nativeSrc": "1122:115:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1173:5:7",
														"nodeType": "YulTypedName",
														"src": "1173:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1180:3:7",
														"nodeType": "YulTypedName",
														"src": "1180:3:7",
														"type": ""
													}
												],
												"src": "1122:115:7"
											},
											{
												"body": {
													"nativeSrc": "1339:122:7",
													"nodeType": "YulBlock",
													"src": "1339:122:7",
													"statements": [
														{
															"nativeSrc": "1349:26:7",
															"nodeType": "YulAssignment",
															"src": "1349:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1361:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1361:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1372:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1372:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1357:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1357:3:7"
																},
																"nativeSrc": "1357:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1357:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1349:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1349:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1427:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1427:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1440:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1440:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1451:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1451:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1436:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1436:3:7"
																		},
																		"nativeSrc": "1436:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1436:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
																	"nativeSrc": "1385:41:7",
																	"nodeType": "YulIdentifier",
																	"src": "1385:41:7"
																},
																"nativeSrc": "1385:69:7",
																"nodeType": "YulFunctionCall",
																"src": "1385:69:7"
															},
															"nativeSrc": "1385:69:7",
															"nodeType": "YulExpressionStatement",
															"src": "1385:69:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed",
												"nativeSrc": "1243:218:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1311:9:7",
														"nodeType": "YulTypedName",
														"src": "1311:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1323:6:7",
														"nodeType": "YulTypedName",
														"src": "1323:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1334:4:7",
														"nodeType": "YulTypedName",
														"src": "1334:4:7",
														"type": ""
													}
												],
												"src": "1243:218:7"
											},
											{
												"body": {
													"nativeSrc": "1512:81:7",
													"nodeType": "YulBlock",
													"src": "1512:81:7",
													"statements": [
														{
															"nativeSrc": "1522:65:7",
															"nodeType": "YulAssignment",
															"src": "1522:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1537:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1537:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1544:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1544:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1533:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1533:3:7"
																},
																"nativeSrc": "1533:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1533:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1522:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1522:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1467:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1494:5:7",
														"nodeType": "YulTypedName",
														"src": "1494:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1504:7:7",
														"nodeType": "YulTypedName",
														"src": "1504:7:7",
														"type": ""
													}
												],
												"src": "1467:126:7"
											},
											{
												"body": {
													"nativeSrc": "1631:28:7",
													"nodeType": "YulBlock",
													"src": "1631:28:7",
													"statements": [
														{
															"nativeSrc": "1641:12:7",
															"nodeType": "YulAssignment",
															"src": "1641:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1648:5:7",
																"nodeType": "YulIdentifier",
																"src": "1648:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1641:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1641:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1599:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1617:5:7",
														"nodeType": "YulTypedName",
														"src": "1617:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1627:3:7",
														"nodeType": "YulTypedName",
														"src": "1627:3:7",
														"type": ""
													}
												],
												"src": "1599:60:7"
											},
											{
												"body": {
													"nativeSrc": "1725:82:7",
													"nodeType": "YulBlock",
													"src": "1725:82:7",
													"statements": [
														{
															"nativeSrc": "1735:66:7",
															"nodeType": "YulAssignment",
															"src": "1735:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1793:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1793:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1775:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1775:17:7"
																				},
																				"nativeSrc": "1775:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1775:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1766:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "1766:8:7"
																		},
																		"nativeSrc": "1766:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1766:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1748:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1748:17:7"
																},
																"nativeSrc": "1748:53:7",
																"nodeType": "YulFunctionCall",
																"src": "1748:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1735:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1735:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1665:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1705:5:7",
														"nodeType": "YulTypedName",
														"src": "1705:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1715:9:7",
														"nodeType": "YulTypedName",
														"src": "1715:9:7",
														"type": ""
													}
												],
												"src": "1665:142:7"
											},
											{
												"body": {
													"nativeSrc": "1873:66:7",
													"nodeType": "YulBlock",
													"src": "1873:66:7",
													"statements": [
														{
															"nativeSrc": "1883:50:7",
															"nodeType": "YulAssignment",
															"src": "1883:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1927:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1927:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1896:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "1896:30:7"
																},
																"nativeSrc": "1896:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1896:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1883:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1883:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1813:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1853:5:7",
														"nodeType": "YulTypedName",
														"src": "1853:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1863:9:7",
														"nodeType": "YulTypedName",
														"src": "1863:9:7",
														"type": ""
													}
												],
												"src": "1813:126:7"
											},
											{
												"body": {
													"nativeSrc": "2030:66:7",
													"nodeType": "YulBlock",
													"src": "2030:66:7",
													"statements": [
														{
															"nativeSrc": "2040:50:7",
															"nodeType": "YulAssignment",
															"src": "2040:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2084:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2084:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2053:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2053:30:7"
																},
																"nativeSrc": "2053:37:7",
																"nodeType": "YulFunctionCall",
																"src": "2053:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2040:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IUniswapV3Factory_$469_to_t_address",
												"nativeSrc": "1945:151:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2010:5:7",
														"nodeType": "YulTypedName",
														"src": "2010:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2020:9:7",
														"nodeType": "YulTypedName",
														"src": "2020:9:7",
														"type": ""
													}
												],
												"src": "1945:151:7"
											},
											{
												"body": {
													"nativeSrc": "2192:91:7",
													"nodeType": "YulBlock",
													"src": "2192:91:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2209:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2209:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2270:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2270:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IUniswapV3Factory_$469_to_t_address",
																			"nativeSrc": "2214:55:7",
																			"nodeType": "YulIdentifier",
																			"src": "2214:55:7"
																		},
																		"nativeSrc": "2214:62:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2214:62:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2202:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2202:6:7"
																},
																"nativeSrc": "2202:75:7",
																"nodeType": "YulFunctionCall",
																"src": "2202:75:7"
															},
															"nativeSrc": "2202:75:7",
															"nodeType": "YulExpressionStatement",
															"src": "2202:75:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IUniswapV3Factory_$469_to_t_address_fromStack",
												"nativeSrc": "2102:181:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2180:5:7",
														"nodeType": "YulTypedName",
														"src": "2180:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2187:3:7",
														"nodeType": "YulTypedName",
														"src": "2187:3:7",
														"type": ""
													}
												],
												"src": "2102:181:7"
											},
											{
												"body": {
													"nativeSrc": "2412:149:7",
													"nodeType": "YulBlock",
													"src": "2412:149:7",
													"statements": [
														{
															"nativeSrc": "2422:26:7",
															"nodeType": "YulAssignment",
															"src": "2422:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2434:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2434:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2445:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2445:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2430:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2430:3:7"
																},
																"nativeSrc": "2430:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2430:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2422:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2422:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2527:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2527:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2540:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2540:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2551:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2551:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2536:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2536:3:7"
																		},
																		"nativeSrc": "2536:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2536:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IUniswapV3Factory_$469_to_t_address_fromStack",
																	"nativeSrc": "2458:68:7",
																	"nodeType": "YulIdentifier",
																	"src": "2458:68:7"
																},
																"nativeSrc": "2458:96:7",
																"nodeType": "YulFunctionCall",
																"src": "2458:96:7"
															},
															"nativeSrc": "2458:96:7",
															"nodeType": "YulExpressionStatement",
															"src": "2458:96:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV3Factory_$469__to_t_address__fromStack_reversed",
												"nativeSrc": "2289:272:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2384:9:7",
														"nodeType": "YulTypedName",
														"src": "2384:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2396:6:7",
														"nodeType": "YulTypedName",
														"src": "2396:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2407:4:7",
														"nodeType": "YulTypedName",
														"src": "2407:4:7",
														"type": ""
													}
												],
												"src": "2289:272:7"
											},
											{
												"body": {
													"nativeSrc": "2612:51:7",
													"nodeType": "YulBlock",
													"src": "2612:51:7",
													"statements": [
														{
															"nativeSrc": "2622:35:7",
															"nodeType": "YulAssignment",
															"src": "2622:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2651:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2651:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2633:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2633:17:7"
																},
																"nativeSrc": "2633:24:7",
																"nodeType": "YulFunctionCall",
																"src": "2633:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2622:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2622:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2567:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2594:5:7",
														"nodeType": "YulTypedName",
														"src": "2594:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2604:7:7",
														"nodeType": "YulTypedName",
														"src": "2604:7:7",
														"type": ""
													}
												],
												"src": "2567:96:7"
											},
											{
												"body": {
													"nativeSrc": "2734:53:7",
													"nodeType": "YulBlock",
													"src": "2734:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2751:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2751:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2774:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2774:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2756:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "2756:17:7"
																		},
																		"nativeSrc": "2756:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2756:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2744:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2744:6:7"
																},
																"nativeSrc": "2744:37:7",
																"nodeType": "YulFunctionCall",
																"src": "2744:37:7"
															},
															"nativeSrc": "2744:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "2744:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2669:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2722:5:7",
														"nodeType": "YulTypedName",
														"src": "2722:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2729:3:7",
														"nodeType": "YulTypedName",
														"src": "2729:3:7",
														"type": ""
													}
												],
												"src": "2669:118:7"
											},
											{
												"body": {
													"nativeSrc": "2891:124:7",
													"nodeType": "YulBlock",
													"src": "2891:124:7",
													"statements": [
														{
															"nativeSrc": "2901:26:7",
															"nodeType": "YulAssignment",
															"src": "2901:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2913:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2913:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2924:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2924:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2909:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2909:3:7"
																},
																"nativeSrc": "2909:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2909:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2901:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2901:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2981:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2981:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2994:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2994:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3005:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3005:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2990:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2990:3:7"
																		},
																		"nativeSrc": "2990:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2990:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2937:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2937:43:7"
																},
																"nativeSrc": "2937:71:7",
																"nodeType": "YulFunctionCall",
																"src": "2937:71:7"
															},
															"nativeSrc": "2937:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "2937:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2793:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2863:9:7",
														"nodeType": "YulTypedName",
														"src": "2863:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2875:6:7",
														"nodeType": "YulTypedName",
														"src": "2875:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2886:4:7",
														"nodeType": "YulTypedName",
														"src": "2886:4:7",
														"type": ""
													}
												],
												"src": "2793:222:7"
											},
											{
												"body": {
													"nativeSrc": "3064:79:7",
													"nodeType": "YulBlock",
													"src": "3064:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3121:16:7",
																"nodeType": "YulBlock",
																"src": "3121:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3130:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3130:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3133:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3133:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3123:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3123:6:7"
																			},
																			"nativeSrc": "3123:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3123:12:7"
																		},
																		"nativeSrc": "3123:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3123:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3087:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3087:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3112:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3112:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3094:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3094:17:7"
																				},
																				"nativeSrc": "3094:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3094:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3084:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3084:2:7"
																		},
																		"nativeSrc": "3084:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3084:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3077:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:7"
																},
																"nativeSrc": "3077:43:7",
																"nodeType": "YulFunctionCall",
																"src": "3077:43:7"
															},
															"nativeSrc": "3074:63:7",
															"nodeType": "YulIf",
															"src": "3074:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3021:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3057:5:7",
														"nodeType": "YulTypedName",
														"src": "3057:5:7",
														"type": ""
													}
												],
												"src": "3021:122:7"
											},
											{
												"body": {
													"nativeSrc": "3201:87:7",
													"nodeType": "YulBlock",
													"src": "3201:87:7",
													"statements": [
														{
															"nativeSrc": "3211:29:7",
															"nodeType": "YulAssignment",
															"src": "3211:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3233:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3233:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3220:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3220:12:7"
																},
																"nativeSrc": "3220:20:7",
																"nodeType": "YulFunctionCall",
																"src": "3220:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3211:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3211:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3276:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3276:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3249:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "3249:26:7"
																},
																"nativeSrc": "3249:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3249:33:7"
															},
															"nativeSrc": "3249:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3249:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3149:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3179:6:7",
														"nodeType": "YulTypedName",
														"src": "3179:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3187:3:7",
														"nodeType": "YulTypedName",
														"src": "3187:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3195:5:7",
														"nodeType": "YulTypedName",
														"src": "3195:5:7",
														"type": ""
													}
												],
												"src": "3149:139:7"
											},
											{
												"body": {
													"nativeSrc": "3336:78:7",
													"nodeType": "YulBlock",
													"src": "3336:78:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3392:16:7",
																"nodeType": "YulBlock",
																"src": "3392:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3401:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3401:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3404:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3404:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3394:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3394:6:7"
																			},
																			"nativeSrc": "3394:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3394:12:7"
																		},
																		"nativeSrc": "3394:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3394:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3359:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3359:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3383:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3383:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint24",
																					"nativeSrc": "3366:16:7",
																					"nodeType": "YulIdentifier",
																					"src": "3366:16:7"
																				},
																				"nativeSrc": "3366:23:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3366:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3356:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3356:2:7"
																		},
																		"nativeSrc": "3356:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3356:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3349:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3349:6:7"
																},
																"nativeSrc": "3349:42:7",
																"nodeType": "YulFunctionCall",
																"src": "3349:42:7"
															},
															"nativeSrc": "3346:62:7",
															"nodeType": "YulIf",
															"src": "3346:62:7"
														}
													]
												},
												"name": "validator_revert_t_uint24",
												"nativeSrc": "3294:120:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3329:5:7",
														"nodeType": "YulTypedName",
														"src": "3329:5:7",
														"type": ""
													}
												],
												"src": "3294:120:7"
											},
											{
												"body": {
													"nativeSrc": "3471:86:7",
													"nodeType": "YulBlock",
													"src": "3471:86:7",
													"statements": [
														{
															"nativeSrc": "3481:29:7",
															"nodeType": "YulAssignment",
															"src": "3481:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3503:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3503:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3490:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3490:12:7"
																},
																"nativeSrc": "3490:20:7",
																"nodeType": "YulFunctionCall",
																"src": "3490:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3481:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3481:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3545:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3545:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint24",
																	"nativeSrc": "3519:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "3519:25:7"
																},
																"nativeSrc": "3519:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3519:32:7"
															},
															"nativeSrc": "3519:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "3519:32:7"
														}
													]
												},
												"name": "abi_decode_t_uint24",
												"nativeSrc": "3420:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3449:6:7",
														"nodeType": "YulTypedName",
														"src": "3449:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3457:3:7",
														"nodeType": "YulTypedName",
														"src": "3457:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3465:5:7",
														"nodeType": "YulTypedName",
														"src": "3465:5:7",
														"type": ""
													}
												],
												"src": "3420:137:7"
											},
											{
												"body": {
													"nativeSrc": "3679:647:7",
													"nodeType": "YulBlock",
													"src": "3679:647:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3726:83:7",
																"nodeType": "YulBlock",
																"src": "3726:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3728:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3728:77:7"
																			},
																			"nativeSrc": "3728:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3728:79:7"
																		},
																		"nativeSrc": "3728:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3728:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3700:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3700:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3709:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3709:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3696:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3696:3:7"
																		},
																		"nativeSrc": "3696:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3696:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3721:3:7",
																		"nodeType": "YulLiteral",
																		"src": "3721:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3692:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3692:3:7"
																},
																"nativeSrc": "3692:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3692:33:7"
															},
															"nativeSrc": "3689:120:7",
															"nodeType": "YulIf",
															"src": "3689:120:7"
														},
														{
															"nativeSrc": "3819:117:7",
															"nodeType": "YulBlock",
															"src": "3819:117:7",
															"statements": [
																{
																	"nativeSrc": "3834:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3834:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3848:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3838:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3838:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3863:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3863:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3898:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3898:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3909:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3909:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3894:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3894:3:7"
																				},
																				"nativeSrc": "3894:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3894:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3918:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3918:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3873:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3873:20:7"
																		},
																		"nativeSrc": "3873:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3873:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3863:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3863:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3946:118:7",
															"nodeType": "YulBlock",
															"src": "3946:118:7",
															"statements": [
																{
																	"nativeSrc": "3961:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3961:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3975:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3975:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3965:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3965:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3991:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3991:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4026:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4026:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4037:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4037:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4022:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4022:3:7"
																				},
																				"nativeSrc": "4022:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4022:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4046:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4046:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4001:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4001:20:7"
																		},
																		"nativeSrc": "4001:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4001:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3991:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3991:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4074:118:7",
															"nodeType": "YulBlock",
															"src": "4074:118:7",
															"statements": [
																{
																	"nativeSrc": "4089:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4089:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4103:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4103:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4093:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4093:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4119:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4119:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4154:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4154:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4165:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4165:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4150:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4150:3:7"
																				},
																				"nativeSrc": "4150:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4150:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4174:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4174:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4129:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4129:20:7"
																		},
																		"nativeSrc": "4129:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4129:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4119:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4119:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4202:117:7",
															"nodeType": "YulBlock",
															"src": "4202:117:7",
															"statements": [
																{
																	"nativeSrc": "4217:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4217:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4231:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4231:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4221:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4221:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4247:62:7",
																	"nodeType": "YulAssignment",
																	"src": "4247:62:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4281:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4281:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4292:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4292:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4277:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4277:3:7"
																				},
																				"nativeSrc": "4277:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4277:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4301:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4301:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint24",
																			"nativeSrc": "4257:19:7",
																			"nodeType": "YulIdentifier",
																			"src": "4257:19:7"
																		},
																		"nativeSrc": "4257:52:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4257:52:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4247:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4247:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint24",
												"nativeSrc": "3563:763:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3625:9:7",
														"nodeType": "YulTypedName",
														"src": "3625:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3636:7:7",
														"nodeType": "YulTypedName",
														"src": "3636:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3648:6:7",
														"nodeType": "YulTypedName",
														"src": "3648:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3656:6:7",
														"nodeType": "YulTypedName",
														"src": "3656:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3664:6:7",
														"nodeType": "YulTypedName",
														"src": "3664:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3672:6:7",
														"nodeType": "YulTypedName",
														"src": "3672:6:7",
														"type": ""
													}
												],
												"src": "3563:763:7"
											},
											{
												"body": {
													"nativeSrc": "4397:53:7",
													"nodeType": "YulBlock",
													"src": "4397:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4414:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4414:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4437:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4437:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4419:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "4419:17:7"
																		},
																		"nativeSrc": "4419:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4419:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4407:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4407:6:7"
																},
																"nativeSrc": "4407:37:7",
																"nodeType": "YulFunctionCall",
																"src": "4407:37:7"
															},
															"nativeSrc": "4407:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "4407:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4332:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4385:5:7",
														"nodeType": "YulTypedName",
														"src": "4385:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4392:3:7",
														"nodeType": "YulTypedName",
														"src": "4392:3:7",
														"type": ""
													}
												],
												"src": "4332:118:7"
											},
											{
												"body": {
													"nativeSrc": "4521:53:7",
													"nodeType": "YulBlock",
													"src": "4521:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4538:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4538:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4561:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4561:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "4543:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "4543:17:7"
																		},
																		"nativeSrc": "4543:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4543:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4531:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4531:6:7"
																},
																"nativeSrc": "4531:37:7",
																"nodeType": "YulFunctionCall",
																"src": "4531:37:7"
															},
															"nativeSrc": "4531:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "4531:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160_fromStack",
												"nativeSrc": "4456:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4509:5:7",
														"nodeType": "YulTypedName",
														"src": "4509:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4516:3:7",
														"nodeType": "YulTypedName",
														"src": "4516:3:7",
														"type": ""
													}
												],
												"src": "4456:118:7"
											},
											{
												"body": {
													"nativeSrc": "4706:206:7",
													"nodeType": "YulBlock",
													"src": "4706:206:7",
													"statements": [
														{
															"nativeSrc": "4716:26:7",
															"nodeType": "YulAssignment",
															"src": "4716:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4728:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4728:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4739:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4739:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4724:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4724:3:7"
																},
																"nativeSrc": "4724:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4724:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4716:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4716:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4796:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4796:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4809:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4809:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4820:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4820:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4805:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4805:3:7"
																		},
																		"nativeSrc": "4805:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4805:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4752:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4752:43:7"
																},
																"nativeSrc": "4752:71:7",
																"nodeType": "YulFunctionCall",
																"src": "4752:71:7"
															},
															"nativeSrc": "4752:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "4752:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4877:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4877:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4890:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4890:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4901:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4901:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4886:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4886:3:7"
																		},
																		"nativeSrc": "4886:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4886:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint160_to_t_uint160_fromStack",
																	"nativeSrc": "4833:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4833:43:7"
																},
																"nativeSrc": "4833:72:7",
																"nodeType": "YulFunctionCall",
																"src": "4833:72:7"
															},
															"nativeSrc": "4833:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "4833:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint160__to_t_uint256_t_uint160__fromStack_reversed",
												"nativeSrc": "4580:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4670:9:7",
														"nodeType": "YulTypedName",
														"src": "4670:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4682:6:7",
														"nodeType": "YulTypedName",
														"src": "4682:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4690:6:7",
														"nodeType": "YulTypedName",
														"src": "4690:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4701:4:7",
														"nodeType": "YulTypedName",
														"src": "4701:4:7",
														"type": ""
													}
												],
												"src": "4580:332:7"
											},
											{
												"body": {
													"nativeSrc": "4997:66:7",
													"nodeType": "YulBlock",
													"src": "4997:66:7",
													"statements": [
														{
															"nativeSrc": "5007:50:7",
															"nodeType": "YulAssignment",
															"src": "5007:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5051:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5051:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5020:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "5020:30:7"
																},
																"nativeSrc": "5020:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5020:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5007:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5007:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISwapRouter_$284_to_t_address",
												"nativeSrc": "4918:145:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4977:5:7",
														"nodeType": "YulTypedName",
														"src": "4977:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4987:9:7",
														"nodeType": "YulTypedName",
														"src": "4987:9:7",
														"type": ""
													}
												],
												"src": "4918:145:7"
											},
											{
												"body": {
													"nativeSrc": "5153:85:7",
													"nodeType": "YulBlock",
													"src": "5153:85:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5170:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5170:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5225:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5225:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ISwapRouter_$284_to_t_address",
																			"nativeSrc": "5175:49:7",
																			"nodeType": "YulIdentifier",
																			"src": "5175:49:7"
																		},
																		"nativeSrc": "5175:56:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5175:56:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5163:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5163:6:7"
																},
																"nativeSrc": "5163:69:7",
																"nodeType": "YulFunctionCall",
																"src": "5163:69:7"
															},
															"nativeSrc": "5163:69:7",
															"nodeType": "YulExpressionStatement",
															"src": "5163:69:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_ISwapRouter_$284_to_t_address_fromStack",
												"nativeSrc": "5069:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5141:5:7",
														"nodeType": "YulTypedName",
														"src": "5141:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5148:3:7",
														"nodeType": "YulTypedName",
														"src": "5148:3:7",
														"type": ""
													}
												],
												"src": "5069:169:7"
											},
											{
												"body": {
													"nativeSrc": "5361:143:7",
													"nodeType": "YulBlock",
													"src": "5361:143:7",
													"statements": [
														{
															"nativeSrc": "5371:26:7",
															"nodeType": "YulAssignment",
															"src": "5371:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5383:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5383:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5394:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5394:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5379:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5379:3:7"
																},
																"nativeSrc": "5379:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5379:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5371:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5371:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5470:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5470:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5483:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5483:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5494:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5494:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5479:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5479:3:7"
																		},
																		"nativeSrc": "5479:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5479:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ISwapRouter_$284_to_t_address_fromStack",
																	"nativeSrc": "5407:62:7",
																	"nodeType": "YulIdentifier",
																	"src": "5407:62:7"
																},
																"nativeSrc": "5407:90:7",
																"nodeType": "YulFunctionCall",
																"src": "5407:90:7"
															},
															"nativeSrc": "5407:90:7",
															"nodeType": "YulExpressionStatement",
															"src": "5407:90:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISwapRouter_$284__to_t_address__fromStack_reversed",
												"nativeSrc": "5244:260:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5333:9:7",
														"nodeType": "YulTypedName",
														"src": "5333:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5345:6:7",
														"nodeType": "YulTypedName",
														"src": "5345:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5356:4:7",
														"nodeType": "YulTypedName",
														"src": "5356:4:7",
														"type": ""
													}
												],
												"src": "5244:260:7"
											},
											{
												"body": {
													"nativeSrc": "5587:66:7",
													"nodeType": "YulBlock",
													"src": "5587:66:7",
													"statements": [
														{
															"nativeSrc": "5597:50:7",
															"nodeType": "YulAssignment",
															"src": "5597:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5641:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5641:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5610:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "5610:30:7"
																},
																"nativeSrc": "5610:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5610:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5597:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5597:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IQuoterV2_$184_to_t_address",
												"nativeSrc": "5510:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5567:5:7",
														"nodeType": "YulTypedName",
														"src": "5567:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5577:9:7",
														"nodeType": "YulTypedName",
														"src": "5577:9:7",
														"type": ""
													}
												],
												"src": "5510:143:7"
											},
											{
												"body": {
													"nativeSrc": "5741:83:7",
													"nodeType": "YulBlock",
													"src": "5741:83:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5758:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5758:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5811:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5811:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IQuoterV2_$184_to_t_address",
																			"nativeSrc": "5763:47:7",
																			"nodeType": "YulIdentifier",
																			"src": "5763:47:7"
																		},
																		"nativeSrc": "5763:54:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5763:54:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5751:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5751:6:7"
																},
																"nativeSrc": "5751:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5751:67:7"
															},
															"nativeSrc": "5751:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5751:67:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IQuoterV2_$184_to_t_address_fromStack",
												"nativeSrc": "5659:165:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5729:5:7",
														"nodeType": "YulTypedName",
														"src": "5729:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5736:3:7",
														"nodeType": "YulTypedName",
														"src": "5736:3:7",
														"type": ""
													}
												],
												"src": "5659:165:7"
											},
											{
												"body": {
													"nativeSrc": "5945:141:7",
													"nodeType": "YulBlock",
													"src": "5945:141:7",
													"statements": [
														{
															"nativeSrc": "5955:26:7",
															"nodeType": "YulAssignment",
															"src": "5955:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5967:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5967:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5978:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5978:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5963:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5963:3:7"
																},
																"nativeSrc": "5963:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5963:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5955:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5955:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6052:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6052:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6065:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6065:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6076:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6076:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6061:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6061:3:7"
																		},
																		"nativeSrc": "6061:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6061:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IQuoterV2_$184_to_t_address_fromStack",
																	"nativeSrc": "5991:60:7",
																	"nodeType": "YulIdentifier",
																	"src": "5991:60:7"
																},
																"nativeSrc": "5991:88:7",
																"nodeType": "YulFunctionCall",
																"src": "5991:88:7"
															},
															"nativeSrc": "5991:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "5991:88:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IQuoterV2_$184__to_t_address__fromStack_reversed",
												"nativeSrc": "5830:256:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5917:9:7",
														"nodeType": "YulTypedName",
														"src": "5917:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5929:6:7",
														"nodeType": "YulTypedName",
														"src": "5929:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5940:4:7",
														"nodeType": "YulTypedName",
														"src": "5940:4:7",
														"type": ""
													}
												],
												"src": "5830:256:7"
											},
											{
												"body": {
													"nativeSrc": "6147:53:7",
													"nodeType": "YulBlock",
													"src": "6147:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6164:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6164:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6187:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6187:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6169:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6169:17:7"
																		},
																		"nativeSrc": "6169:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6169:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6157:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6157:6:7"
																},
																"nativeSrc": "6157:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6157:37:7"
															},
															"nativeSrc": "6157:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6157:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "6092:108:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6135:5:7",
														"nodeType": "YulTypedName",
														"src": "6135:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6142:3:7",
														"nodeType": "YulTypedName",
														"src": "6142:3:7",
														"type": ""
													}
												],
												"src": "6092:108:7"
											},
											{
												"body": {
													"nativeSrc": "6261:53:7",
													"nodeType": "YulBlock",
													"src": "6261:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6278:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6278:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6301:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6301:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6283:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6283:17:7"
																		},
																		"nativeSrc": "6283:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6283:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6271:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6271:6:7"
																},
																"nativeSrc": "6271:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6271:37:7"
															},
															"nativeSrc": "6271:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6271:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "6206:108:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6249:5:7",
														"nodeType": "YulTypedName",
														"src": "6249:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6256:3:7",
														"nodeType": "YulTypedName",
														"src": "6256:3:7",
														"type": ""
													}
												],
												"src": "6206:108:7"
											},
											{
												"body": {
													"nativeSrc": "6373:52:7",
													"nodeType": "YulBlock",
													"src": "6373:52:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6390:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6390:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6412:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6412:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "6395:16:7",
																			"nodeType": "YulIdentifier",
																			"src": "6395:16:7"
																		},
																		"nativeSrc": "6395:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6395:23:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:7"
																},
																"nativeSrc": "6383:36:7",
																"nodeType": "YulFunctionCall",
																"src": "6383:36:7"
															},
															"nativeSrc": "6383:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "6383:36:7"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nativeSrc": "6320:105:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6361:5:7",
														"nodeType": "YulTypedName",
														"src": "6361:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6368:3:7",
														"nodeType": "YulTypedName",
														"src": "6368:3:7",
														"type": ""
													}
												],
												"src": "6320:105:7"
											},
											{
												"body": {
													"nativeSrc": "6486:53:7",
													"nodeType": "YulBlock",
													"src": "6486:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6503:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6503:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6526:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6526:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "6508:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6508:17:7"
																		},
																		"nativeSrc": "6508:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6508:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6496:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6496:6:7"
																},
																"nativeSrc": "6496:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6496:37:7"
															},
															"nativeSrc": "6496:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6496:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nativeSrc": "6431:108:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6474:5:7",
														"nodeType": "YulTypedName",
														"src": "6474:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6481:3:7",
														"nodeType": "YulTypedName",
														"src": "6481:3:7",
														"type": ""
													}
												],
												"src": "6431:108:7"
											},
											{
												"body": {
													"nativeSrc": "6799:934:7",
													"nodeType": "YulBlock",
													"src": "6799:934:7",
													"statements": [
														{
															"nativeSrc": "6809:26:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6809:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6825:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6825:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6830:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6830:4:7",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6821:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6821:3:7"
																},
																"nativeSrc": "6821:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6821:14:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "6813:4:7",
																	"nodeType": "YulTypedName",
																	"src": "6813:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6845:167:7",
															"nodeType": "YulBlock",
															"src": "6845:167:7",
															"statements": [
																{
																	"nativeSrc": "6883:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6883:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6913:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "6913:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6920:4:7",
																						"nodeType": "YulLiteral",
																						"src": "6920:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6909:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6909:3:7"
																				},
																				"nativeSrc": "6909:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6909:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6903:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "6903:5:7"
																		},
																		"nativeSrc": "6903:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6903:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6887:12:7",
																			"nodeType": "YulTypedName",
																			"src": "6887:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6973:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "6973:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6991:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6991:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6996:4:7",
																						"nodeType": "YulLiteral",
																						"src": "6996:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6987:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6987:3:7"
																				},
																				"nativeSrc": "6987:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6987:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "6939:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "6939:33:7"
																		},
																		"nativeSrc": "6939:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6939:63:7"
																	},
																	"nativeSrc": "6939:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "6939:63:7"
																}
															]
														},
														{
															"nativeSrc": "7022:168:7",
															"nodeType": "YulBlock",
															"src": "7022:168:7",
															"statements": [
																{
																	"nativeSrc": "7061:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7061:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7091:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7091:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7098:4:7",
																						"nodeType": "YulLiteral",
																						"src": "7098:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7087:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7087:3:7"
																				},
																				"nativeSrc": "7087:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7087:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7081:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "7081:5:7"
																		},
																		"nativeSrc": "7081:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7081:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7065:12:7",
																			"nodeType": "YulTypedName",
																			"src": "7065:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7151:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "7151:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7169:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7169:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7174:4:7",
																						"nodeType": "YulLiteral",
																						"src": "7174:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7165:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7165:3:7"
																				},
																				"nativeSrc": "7165:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7165:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "7117:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "7117:33:7"
																		},
																		"nativeSrc": "7117:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7117:63:7"
																	},
																	"nativeSrc": "7117:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "7117:63:7"
																}
															]
														},
														{
															"nativeSrc": "7200:168:7",
															"nodeType": "YulBlock",
															"src": "7200:168:7",
															"statements": [
																{
																	"nativeSrc": "7239:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7239:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7269:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7269:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7276:4:7",
																						"nodeType": "YulLiteral",
																						"src": "7276:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7265:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7265:3:7"
																				},
																				"nativeSrc": "7265:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7265:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7259:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "7259:5:7"
																		},
																		"nativeSrc": "7259:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7259:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7243:12:7",
																			"nodeType": "YulTypedName",
																			"src": "7243:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7329:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "7329:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7347:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7347:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7352:4:7",
																						"nodeType": "YulLiteral",
																						"src": "7352:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7343:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7343:3:7"
																				},
																				"nativeSrc": "7343:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7343:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7295:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "7295:33:7"
																		},
																		"nativeSrc": "7295:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7295:63:7"
																	},
																	"nativeSrc": "7295:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "7295:63:7"
																}
															]
														},
														{
															"nativeSrc": "7378:161:7",
															"nodeType": "YulBlock",
															"src": "7378:161:7",
															"statements": [
																{
																	"nativeSrc": "7412:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7412:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7442:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7442:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7449:4:7",
																						"nodeType": "YulLiteral",
																						"src": "7449:4:7",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7438:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7438:3:7"
																				},
																				"nativeSrc": "7438:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7438:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7432:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "7432:5:7"
																		},
																		"nativeSrc": "7432:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7432:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7416:12:7",
																			"nodeType": "YulTypedName",
																			"src": "7416:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7500:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "7500:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7518:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7518:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7523:4:7",
																						"nodeType": "YulLiteral",
																						"src": "7523:4:7",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7514:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7514:3:7"
																				},
																				"nativeSrc": "7514:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7514:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "7468:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "7468:31:7"
																		},
																		"nativeSrc": "7468:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7468:61:7"
																	},
																	"nativeSrc": "7468:61:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "7468:61:7"
																}
															]
														},
														{
															"nativeSrc": "7549:177:7",
															"nodeType": "YulBlock",
															"src": "7549:177:7",
															"statements": [
																{
																	"nativeSrc": "7597:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7597:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7627:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7627:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7634:4:7",
																						"nodeType": "YulLiteral",
																						"src": "7634:4:7",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7623:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7623:3:7"
																				},
																				"nativeSrc": "7623:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7623:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7617:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "7617:5:7"
																		},
																		"nativeSrc": "7617:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7617:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7601:12:7",
																			"nodeType": "YulTypedName",
																			"src": "7601:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7687:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "7687:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7705:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7705:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7710:4:7",
																						"nodeType": "YulLiteral",
																						"src": "7710:4:7",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7701:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7701:3:7"
																				},
																				"nativeSrc": "7701:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7701:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nativeSrc": "7653:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "7653:33:7"
																		},
																		"nativeSrc": "7653:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7653:63:7"
																	},
																	"nativeSrc": "7653:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "7653:63:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr_to_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr_fromStack",
												"nativeSrc": "6645:1088:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6786:5:7",
														"nodeType": "YulTypedName",
														"src": "6786:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6793:3:7",
														"nodeType": "YulTypedName",
														"src": "6793:3:7",
														"type": ""
													}
												],
												"src": "6645:1088:7"
											},
											{
												"body": {
													"nativeSrc": "7925:213:7",
													"nodeType": "YulBlock",
													"src": "7925:213:7",
													"statements": [
														{
															"nativeSrc": "7935:27:7",
															"nodeType": "YulAssignment",
															"src": "7935:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7947:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7947:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7958:3:7",
																		"nodeType": "YulLiteral",
																		"src": "7958:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7943:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7943:3:7"
																},
																"nativeSrc": "7943:19:7",
																"nodeType": "YulFunctionCall",
																"src": "7943:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7935:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7935:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8104:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8104:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8117:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8117:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8128:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8128:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8113:3:7"
																		},
																		"nativeSrc": "8113:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8113:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr_to_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr_fromStack",
																	"nativeSrc": "7972:131:7",
																	"nodeType": "YulIdentifier",
																	"src": "7972:131:7"
																},
																"nativeSrc": "7972:159:7",
																"nodeType": "YulFunctionCall",
																"src": "7972:159:7"
															},
															"nativeSrc": "7972:159:7",
															"nodeType": "YulExpressionStatement",
															"src": "7972:159:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr__to_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr__fromStack_reversed",
												"nativeSrc": "7739:399:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7897:9:7",
														"nodeType": "YulTypedName",
														"src": "7897:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7909:6:7",
														"nodeType": "YulTypedName",
														"src": "7909:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7920:4:7",
														"nodeType": "YulTypedName",
														"src": "7920:4:7",
														"type": ""
													}
												],
												"src": "7739:399:7"
											},
											{
												"body": {
													"nativeSrc": "8207:80:7",
													"nodeType": "YulBlock",
													"src": "8207:80:7",
													"statements": [
														{
															"nativeSrc": "8217:22:7",
															"nodeType": "YulAssignment",
															"src": "8217:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8232:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8232:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8226:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8226:5:7"
																},
																"nativeSrc": "8226:13:7",
																"nodeType": "YulFunctionCall",
																"src": "8226:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8217:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8217:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8275:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8275:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "8248:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "8248:26:7"
																},
																"nativeSrc": "8248:33:7",
																"nodeType": "YulFunctionCall",
																"src": "8248:33:7"
															},
															"nativeSrc": "8248:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "8248:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "8144:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8185:6:7",
														"nodeType": "YulTypedName",
														"src": "8185:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8193:3:7",
														"nodeType": "YulTypedName",
														"src": "8193:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8201:5:7",
														"nodeType": "YulTypedName",
														"src": "8201:5:7",
														"type": ""
													}
												],
												"src": "8144:143:7"
											},
											{
												"body": {
													"nativeSrc": "8336:79:7",
													"nodeType": "YulBlock",
													"src": "8336:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8393:16:7",
																"nodeType": "YulBlock",
																"src": "8393:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8402:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8402:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8405:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8405:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8395:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8395:6:7"
																			},
																			"nativeSrc": "8395:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8395:12:7"
																		},
																		"nativeSrc": "8395:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8395:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8359:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8359:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8384:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "8384:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "8366:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "8366:17:7"
																				},
																				"nativeSrc": "8366:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8366:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8356:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8356:2:7"
																		},
																		"nativeSrc": "8356:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8356:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8349:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8349:6:7"
																},
																"nativeSrc": "8349:43:7",
																"nodeType": "YulFunctionCall",
																"src": "8349:43:7"
															},
															"nativeSrc": "8346:63:7",
															"nodeType": "YulIf",
															"src": "8346:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint160",
												"nativeSrc": "8293:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8329:5:7",
														"nodeType": "YulTypedName",
														"src": "8329:5:7",
														"type": ""
													}
												],
												"src": "8293:122:7"
											},
											{
												"body": {
													"nativeSrc": "8484:80:7",
													"nodeType": "YulBlock",
													"src": "8484:80:7",
													"statements": [
														{
															"nativeSrc": "8494:22:7",
															"nodeType": "YulAssignment",
															"src": "8494:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8509:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8509:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8503:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8503:5:7"
																},
																"nativeSrc": "8503:13:7",
																"nodeType": "YulFunctionCall",
																"src": "8503:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8494:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8494:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8552:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8552:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint160",
																	"nativeSrc": "8525:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "8525:26:7"
																},
																"nativeSrc": "8525:33:7",
																"nodeType": "YulFunctionCall",
																"src": "8525:33:7"
															},
															"nativeSrc": "8525:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "8525:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint160_fromMemory",
												"nativeSrc": "8421:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8462:6:7",
														"nodeType": "YulTypedName",
														"src": "8462:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8470:3:7",
														"nodeType": "YulTypedName",
														"src": "8470:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8478:5:7",
														"nodeType": "YulTypedName",
														"src": "8478:5:7",
														"type": ""
													}
												],
												"src": "8421:143:7"
											},
											{
												"body": {
													"nativeSrc": "8614:49:7",
													"nodeType": "YulBlock",
													"src": "8614:49:7",
													"statements": [
														{
															"nativeSrc": "8624:33:7",
															"nodeType": "YulAssignment",
															"src": "8624:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8639:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8639:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8646:10:7",
																		"nodeType": "YulLiteral",
																		"src": "8646:10:7",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8635:3:7"
																},
																"nativeSrc": "8635:22:7",
																"nodeType": "YulFunctionCall",
																"src": "8635:22:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8624:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "8624:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nativeSrc": "8570:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8596:5:7",
														"nodeType": "YulTypedName",
														"src": "8596:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8606:7:7",
														"nodeType": "YulTypedName",
														"src": "8606:7:7",
														"type": ""
													}
												],
												"src": "8570:93:7"
											},
											{
												"body": {
													"nativeSrc": "8711:78:7",
													"nodeType": "YulBlock",
													"src": "8711:78:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8767:16:7",
																"nodeType": "YulBlock",
																"src": "8767:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8776:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8776:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8779:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8779:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8769:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8769:6:7"
																			},
																			"nativeSrc": "8769:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8769:12:7"
																		},
																		"nativeSrc": "8769:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8769:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8734:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8734:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8758:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "8758:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nativeSrc": "8741:16:7",
																					"nodeType": "YulIdentifier",
																					"src": "8741:16:7"
																				},
																				"nativeSrc": "8741:23:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8741:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8731:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8731:2:7"
																		},
																		"nativeSrc": "8731:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8731:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8724:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8724:6:7"
																},
																"nativeSrc": "8724:42:7",
																"nodeType": "YulFunctionCall",
																"src": "8724:42:7"
															},
															"nativeSrc": "8721:62:7",
															"nodeType": "YulIf",
															"src": "8721:62:7"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nativeSrc": "8669:120:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8704:5:7",
														"nodeType": "YulTypedName",
														"src": "8704:5:7",
														"type": ""
													}
												],
												"src": "8669:120:7"
											},
											{
												"body": {
													"nativeSrc": "8857:79:7",
													"nodeType": "YulBlock",
													"src": "8857:79:7",
													"statements": [
														{
															"nativeSrc": "8867:22:7",
															"nodeType": "YulAssignment",
															"src": "8867:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8882:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8882:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8876:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8876:5:7"
																},
																"nativeSrc": "8876:13:7",
																"nodeType": "YulFunctionCall",
																"src": "8876:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8867:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8867:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8924:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8924:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nativeSrc": "8898:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "8898:25:7"
																},
																"nativeSrc": "8898:32:7",
																"nodeType": "YulFunctionCall",
																"src": "8898:32:7"
															},
															"nativeSrc": "8898:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "8898:32:7"
														}
													]
												},
												"name": "abi_decode_t_uint32_fromMemory",
												"nativeSrc": "8795:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8835:6:7",
														"nodeType": "YulTypedName",
														"src": "8835:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8843:3:7",
														"nodeType": "YulTypedName",
														"src": "8843:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8851:5:7",
														"nodeType": "YulTypedName",
														"src": "8851:5:7",
														"type": ""
													}
												],
												"src": "8795:141:7"
											},
											{
												"body": {
													"nativeSrc": "9069:691:7",
													"nodeType": "YulBlock",
													"src": "9069:691:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9116:83:7",
																"nodeType": "YulBlock",
																"src": "9116:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9118:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "9118:77:7"
																			},
																			"nativeSrc": "9118:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9118:79:7"
																		},
																		"nativeSrc": "9118:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9118:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9090:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9090:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9099:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9099:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9086:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9086:3:7"
																		},
																		"nativeSrc": "9086:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9086:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9111:3:7",
																		"nodeType": "YulLiteral",
																		"src": "9111:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9082:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9082:3:7"
																},
																"nativeSrc": "9082:33:7",
																"nodeType": "YulFunctionCall",
																"src": "9082:33:7"
															},
															"nativeSrc": "9079:120:7",
															"nodeType": "YulIf",
															"src": "9079:120:7"
														},
														{
															"nativeSrc": "9209:128:7",
															"nodeType": "YulBlock",
															"src": "9209:128:7",
															"statements": [
																{
																	"nativeSrc": "9224:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9224:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9238:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9238:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9228:6:7",
																			"nodeType": "YulTypedName",
																			"src": "9228:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9253:74:7",
																	"nodeType": "YulAssignment",
																	"src": "9253:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9299:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9299:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9310:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9310:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9295:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9295:3:7"
																				},
																				"nativeSrc": "9295:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9295:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9319:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9319:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "9263:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "9263:31:7"
																		},
																		"nativeSrc": "9263:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9263:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9253:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "9253:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9347:129:7",
															"nodeType": "YulBlock",
															"src": "9347:129:7",
															"statements": [
																{
																	"nativeSrc": "9362:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9362:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9376:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9376:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9366:6:7",
																			"nodeType": "YulTypedName",
																			"src": "9366:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9392:74:7",
																	"nodeType": "YulAssignment",
																	"src": "9392:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9438:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9438:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9449:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9449:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9434:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9434:3:7"
																				},
																				"nativeSrc": "9434:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9434:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9458:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9458:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint160_fromMemory",
																			"nativeSrc": "9402:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "9402:31:7"
																		},
																		"nativeSrc": "9402:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9402:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9392:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "9392:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9486:128:7",
															"nodeType": "YulBlock",
															"src": "9486:128:7",
															"statements": [
																{
																	"nativeSrc": "9501:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9501:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9515:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9515:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9505:6:7",
																			"nodeType": "YulTypedName",
																			"src": "9505:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9531:73:7",
																	"nodeType": "YulAssignment",
																	"src": "9531:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9576:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9576:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9587:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9587:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9572:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9572:3:7"
																				},
																				"nativeSrc": "9572:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9572:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9596:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9596:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32_fromMemory",
																			"nativeSrc": "9541:30:7",
																			"nodeType": "YulIdentifier",
																			"src": "9541:30:7"
																		},
																		"nativeSrc": "9541:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9541:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9531:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "9531:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9624:129:7",
															"nodeType": "YulBlock",
															"src": "9624:129:7",
															"statements": [
																{
																	"nativeSrc": "9639:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9639:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9653:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9653:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9643:6:7",
																			"nodeType": "YulTypedName",
																			"src": "9643:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9669:74:7",
																	"nodeType": "YulAssignment",
																	"src": "9669:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9715:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9715:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9726:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9726:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9711:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9711:3:7"
																				},
																				"nativeSrc": "9711:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9711:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9735:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9735:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "9679:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "9679:31:7"
																		},
																		"nativeSrc": "9679:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9679:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9669:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "9669:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint160t_uint32t_uint256_fromMemory",
												"nativeSrc": "8942:818:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9015:9:7",
														"nodeType": "YulTypedName",
														"src": "9015:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9026:7:7",
														"nodeType": "YulTypedName",
														"src": "9026:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9038:6:7",
														"nodeType": "YulTypedName",
														"src": "9038:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9046:6:7",
														"nodeType": "YulTypedName",
														"src": "9046:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9054:6:7",
														"nodeType": "YulTypedName",
														"src": "9054:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9062:6:7",
														"nodeType": "YulTypedName",
														"src": "9062:6:7",
														"type": ""
													}
												],
												"src": "8942:818:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV3Factory_$469_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IUniswapV3Factory_$469_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV3Factory_$469_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IUniswapV3Factory_$469__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IUniswapV3Factory_$469_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint24(value) {\n        if iszero(eq(value, cleanup_t_uint24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint24(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint24(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint24(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint24(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint160__to_t_uint256_t_uint160__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint160_to_t_uint160_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function convert_t_contract$_ISwapRouter_$284_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISwapRouter_$284_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapRouter_$284_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapRouter_$284__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapRouter_$284_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IQuoterV2_$184_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IQuoterV2_$184_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IQuoterV2_$184_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IQuoterV2_$184__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IQuoterV2_$184_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    // struct IQuoterV2.QuoteExactInputSingleParams -> struct IQuoterV2.QuoteExactInputSingleParams\n    function abi_encode_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr_to_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0x80))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr__to_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr_to_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function validator_revert_t_uint160(value) {\n        if iszero(eq(value, cleanup_t_uint160(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint160_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint160(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint160t_uint32t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint160_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"485": [
									{
										"length": 32,
										"start": 908
									}
								],
								"488": [
									{
										"length": 32,
										"start": 698
									},
									{
										"length": 32,
										"start": 1016
									}
								],
								"491": [
									{
										"length": 32,
										"start": 511
									}
								],
								"504": [
									{
										"length": 32,
										"start": 980
									}
								],
								"506": [
									{
										"length": 32,
										"start": 944
									}
								],
								"508": [
									{
										"length": 32,
										"start": 547
									}
								],
								"510": [
									{
										"length": 32,
										"start": 872
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610091575f3560e01c8063ad5c464811610064578063ad5c464814610132578063c31c9c0714610150578063c54e44eb1461016e578063e0bab4c41461018c578063e20dccb2146101aa57610091565b8063230ed44a146100955780635b549182146100c557806389a30271146100e35780639a90f2ec14610101575b5f80fd5b6100af60048036038101906100aa9190610451565b6101c8565b6040516100bc9190610499565b60405180910390f35b6100cd6101fd565b6040516100da919061052c565b60405180910390f35b6100eb610221565b6040516100f89190610565565b60405180910390f35b61011b600480360381019061011691906105d2565b610245565b604051610129929190610654565b60405180910390f35b61013a610366565b6040516101479190610565565b60405180910390f35b61015861038a565b604051610165919061069b565b60405180910390f35b6101766103ae565b6040516101839190610565565b60405180910390f35b6101946103d2565b6040516101a19190610565565b60405180910390f35b6101b26103f6565b6040516101bf91906106d4565b60405180910390f35b5f81815481106101d6575f80fd5b905f5260205f2090600a9182820401919006600302915054906101000a900462ffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f805f6040518060a001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018562ffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c6a5026a826040518263ffffffff1660e01b8152600401610311919061078f565b6080604051808303815f875af115801561032d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610351919061081f565b90505080935081945050505094509492505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f80fd5b5f819050919050565b6104308161041e565b811461043a575f80fd5b50565b5f8135905061044b81610427565b92915050565b5f602082840312156104665761046561041a565b5b5f6104738482850161043d565b91505092915050565b5f62ffffff82169050919050565b6104938161047c565b82525050565b5f6020820190506104ac5f83018461048a565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6104f46104ef6104ea846104b2565b6104d1565b6104b2565b9050919050565b5f610505826104da565b9050919050565b5f610516826104fb565b9050919050565b6105268161050c565b82525050565b5f60208201905061053f5f83018461051d565b92915050565b5f61054f826104b2565b9050919050565b61055f81610545565b82525050565b5f6020820190506105785f830184610556565b92915050565b61058781610545565b8114610591575f80fd5b50565b5f813590506105a28161057e565b92915050565b6105b18161047c565b81146105bb575f80fd5b50565b5f813590506105cc816105a8565b92915050565b5f805f80608085870312156105ea576105e961041a565b5b5f6105f787828801610594565b945050602061060887828801610594565b93505060406106198782880161043d565b925050606061062a878288016105be565b91505092959194509250565b61063f8161041e565b82525050565b61064e816104b2565b82525050565b5f6040820190506106675f830185610636565b6106746020830184610645565b9392505050565b5f610685826104fb565b9050919050565b6106958161067b565b82525050565b5f6020820190506106ae5f83018461068c565b92915050565b5f6106be826104fb565b9050919050565b6106ce816106b4565b82525050565b5f6020820190506106e75f8301846106c5565b92915050565b6106f681610545565b82525050565b6107058161041e565b82525050565b6107148161047c565b82525050565b610723816104b2565b82525050565b60a082015f82015161073d5f8501826106ed565b50602082015161075060208501826106ed565b50604082015161076360408501826106fc565b506060820151610776606085018261070b565b506080820151610789608085018261071a565b50505050565b5f60a0820190506107a25f830184610729565b92915050565b5f815190506107b681610427565b92915050565b6107c5816104b2565b81146107cf575f80fd5b50565b5f815190506107e0816107bc565b92915050565b5f63ffffffff82169050919050565b6107fe816107e6565b8114610808575f80fd5b50565b5f81519050610819816107f5565b92915050565b5f805f80608085870312156108375761083661041a565b5b5f610844878288016107a8565b9450506020610855878288016107d2565b93505060406108668782880161080b565b9250506060610877878288016107a8565b9150509295919450925056fea2646970667358221220498b3a8689c99b7a627a6d8896234a0088fca93d551cd94313d359830f423f5964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAD5C4648 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0xC54E44EB EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xE0BAB4C4 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xE20DCCB2 EQ PUSH2 0x1AA JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x230ED44A EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x5B549182 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x9A90F2EC EQ PUSH2 0x101 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x451 JUMP JUMPDEST PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0x221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x245 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP3 SWAP2 SWAP1 PUSH2 0x654 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH2 0x366 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x69B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x176 PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0xA SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x3 MUL SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC6A5026A DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x78F JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x32D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x81F JUMP JUMPDEST SWAP1 POP POP DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x430 DUP2 PUSH2 0x41E JUMP JUMPDEST DUP2 EQ PUSH2 0x43A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x44B DUP2 PUSH2 0x427 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x466 JUMPI PUSH2 0x465 PUSH2 0x41A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x473 DUP5 DUP3 DUP6 ADD PUSH2 0x43D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x493 DUP2 PUSH2 0x47C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4AC PUSH0 DUP4 ADD DUP5 PUSH2 0x48A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4F4 PUSH2 0x4EF PUSH2 0x4EA DUP5 PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x505 DUP3 PUSH2 0x4DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x516 DUP3 PUSH2 0x4FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x526 DUP2 PUSH2 0x50C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x53F PUSH0 DUP4 ADD DUP5 PUSH2 0x51D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x54F DUP3 PUSH2 0x4B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55F DUP2 PUSH2 0x545 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x578 PUSH0 DUP4 ADD DUP5 PUSH2 0x556 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x587 DUP2 PUSH2 0x545 JUMP JUMPDEST DUP2 EQ PUSH2 0x591 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A2 DUP2 PUSH2 0x57E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5B1 DUP2 PUSH2 0x47C JUMP JUMPDEST DUP2 EQ PUSH2 0x5BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5CC DUP2 PUSH2 0x5A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x5EA JUMPI PUSH2 0x5E9 PUSH2 0x41A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5F7 DUP8 DUP3 DUP9 ADD PUSH2 0x594 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x608 DUP8 DUP3 DUP9 ADD PUSH2 0x594 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x619 DUP8 DUP3 DUP9 ADD PUSH2 0x43D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x62A DUP8 DUP3 DUP9 ADD PUSH2 0x5BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x63F DUP2 PUSH2 0x41E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x64E DUP2 PUSH2 0x4B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x667 PUSH0 DUP4 ADD DUP6 PUSH2 0x636 JUMP JUMPDEST PUSH2 0x674 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x645 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x685 DUP3 PUSH2 0x4FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x695 DUP2 PUSH2 0x67B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6AE PUSH0 DUP4 ADD DUP5 PUSH2 0x68C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6BE DUP3 PUSH2 0x4FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6CE DUP2 PUSH2 0x6B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6E7 PUSH0 DUP4 ADD DUP5 PUSH2 0x6C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6F6 DUP2 PUSH2 0x545 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x705 DUP2 PUSH2 0x41E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x714 DUP2 PUSH2 0x47C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x723 DUP2 PUSH2 0x4B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x73D PUSH0 DUP6 ADD DUP3 PUSH2 0x6ED JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x750 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x6ED JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x763 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x6FC JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x776 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x70B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x789 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x71A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x7A2 PUSH0 DUP4 ADD DUP5 PUSH2 0x729 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x7B6 DUP2 PUSH2 0x427 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7C5 DUP2 PUSH2 0x4B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x7CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x7E0 DUP2 PUSH2 0x7BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7FE DUP2 PUSH2 0x7E6 JUMP JUMPDEST DUP2 EQ PUSH2 0x808 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x819 DUP2 PUSH2 0x7F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x837 JUMPI PUSH2 0x836 PUSH2 0x41A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x844 DUP8 DUP3 DUP9 ADD PUSH2 0x7A8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x855 DUP8 DUP3 DUP9 ADD PUSH2 0x7D2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x866 DUP8 DUP3 DUP9 ADD PUSH2 0x80B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x877 DUP8 DUP3 DUP9 ADD PUSH2 0x7A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBHASH DUP12 GASPRICE DUP7 DUP10 0xC9 SWAP12 PUSH27 0x627A6D8896234A0088FCA93D551CD94313D359830F423F5964736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "324:5931:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;500:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;440:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;700:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1247:639;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;736:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;352:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;664:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;629:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;398:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;500:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;440:51::-;;;:::o;700:29::-;;;:::o;1247:639::-;1404:24;1430:25;1468:51;1522:247;;;;;;;;1602:7;1522:247;;;;;;1638:8;1522:247;;;;;;1675:8;1522:247;;;;1707:7;1522:247;;;;;;1752:1;1522:247;;;;;1468:301;;1826:8;:44;;;1871:6;1826:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1782:96;;;;;;;;;;;1457:429;1247:639;;;;;;;:::o;736:29::-;;;:::o;352:39::-;;;:::o;664:29::-;;;:::o;629:28::-;;;:::o;398:35::-;;;:::o;88:117:7:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:91::-;1061:7;1101:8;1094:5;1090:20;1079:31;;1025:91;;;:::o;1122:115::-;1207:23;1224:5;1207:23;:::i;:::-;1202:3;1195:36;1122:115;;:::o;1243:218::-;1334:4;1372:2;1361:9;1357:18;1349:26;;1385:69;1451:1;1440:9;1436:17;1427:6;1385:69;:::i;:::-;1243:218;;;;:::o;1467:126::-;1504:7;1544:42;1537:5;1533:54;1522:65;;1467:126;;;:::o;1599:60::-;1627:3;1648:5;1641:12;;1599:60;;;:::o;1665:142::-;1715:9;1748:53;1766:34;1775:24;1793:5;1775:24;:::i;:::-;1766:34;:::i;:::-;1748:53;:::i;:::-;1735:66;;1665:142;;;:::o;1813:126::-;1863:9;1896:37;1927:5;1896:37;:::i;:::-;1883:50;;1813:126;;;:::o;1945:151::-;2020:9;2053:37;2084:5;2053:37;:::i;:::-;2040:50;;1945:151;;;:::o;2102:181::-;2214:62;2270:5;2214:62;:::i;:::-;2209:3;2202:75;2102:181;;:::o;2289:272::-;2407:4;2445:2;2434:9;2430:18;2422:26;;2458:96;2551:1;2540:9;2536:17;2527:6;2458:96;:::i;:::-;2289:272;;;;:::o;2567:96::-;2604:7;2633:24;2651:5;2633:24;:::i;:::-;2622:35;;2567:96;;;:::o;2669:118::-;2756:24;2774:5;2756:24;:::i;:::-;2751:3;2744:37;2669:118;;:::o;2793:222::-;2886:4;2924:2;2913:9;2909:18;2901:26;;2937:71;3005:1;2994:9;2990:17;2981:6;2937:71;:::i;:::-;2793:222;;;;:::o;3021:122::-;3094:24;3112:5;3094:24;:::i;:::-;3087:5;3084:35;3074:63;;3133:1;3130;3123:12;3074:63;3021:122;:::o;3149:139::-;3195:5;3233:6;3220:20;3211:29;;3249:33;3276:5;3249:33;:::i;:::-;3149:139;;;;:::o;3294:120::-;3366:23;3383:5;3366:23;:::i;:::-;3359:5;3356:34;3346:62;;3404:1;3401;3394:12;3346:62;3294:120;:::o;3420:137::-;3465:5;3503:6;3490:20;3481:29;;3519:32;3545:5;3519:32;:::i;:::-;3420:137;;;;:::o;3563:763::-;3648:6;3656;3664;3672;3721:3;3709:9;3700:7;3696:23;3692:33;3689:120;;;3728:79;;:::i;:::-;3689:120;3848:1;3873:53;3918:7;3909:6;3898:9;3894:22;3873:53;:::i;:::-;3863:63;;3819:117;3975:2;4001:53;4046:7;4037:6;4026:9;4022:22;4001:53;:::i;:::-;3991:63;;3946:118;4103:2;4129:53;4174:7;4165:6;4154:9;4150:22;4129:53;:::i;:::-;4119:63;;4074:118;4231:2;4257:52;4301:7;4292:6;4281:9;4277:22;4257:52;:::i;:::-;4247:62;;4202:117;3563:763;;;;;;;:::o;4332:118::-;4419:24;4437:5;4419:24;:::i;:::-;4414:3;4407:37;4332:118;;:::o;4456:::-;4543:24;4561:5;4543:24;:::i;:::-;4538:3;4531:37;4456:118;;:::o;4580:332::-;4701:4;4739:2;4728:9;4724:18;4716:26;;4752:71;4820:1;4809:9;4805:17;4796:6;4752:71;:::i;:::-;4833:72;4901:2;4890:9;4886:18;4877:6;4833:72;:::i;:::-;4580:332;;;;;:::o;4918:145::-;4987:9;5020:37;5051:5;5020:37;:::i;:::-;5007:50;;4918:145;;;:::o;5069:169::-;5175:56;5225:5;5175:56;:::i;:::-;5170:3;5163:69;5069:169;;:::o;5244:260::-;5356:4;5394:2;5383:9;5379:18;5371:26;;5407:90;5494:1;5483:9;5479:17;5470:6;5407:90;:::i;:::-;5244:260;;;;:::o;5510:143::-;5577:9;5610:37;5641:5;5610:37;:::i;:::-;5597:50;;5510:143;;;:::o;5659:165::-;5763:54;5811:5;5763:54;:::i;:::-;5758:3;5751:67;5659:165;;:::o;5830:256::-;5940:4;5978:2;5967:9;5963:18;5955:26;;5991:88;6076:1;6065:9;6061:17;6052:6;5991:88;:::i;:::-;5830:256;;;;:::o;6092:108::-;6169:24;6187:5;6169:24;:::i;:::-;6164:3;6157:37;6092:108;;:::o;6206:::-;6283:24;6301:5;6283:24;:::i;:::-;6278:3;6271:37;6206:108;;:::o;6320:105::-;6395:23;6412:5;6395:23;:::i;:::-;6390:3;6383:36;6320:105;;:::o;6431:108::-;6508:24;6526:5;6508:24;:::i;:::-;6503:3;6496:37;6431:108;;:::o;6645:1088::-;6830:4;6825:3;6821:14;6920:4;6913:5;6909:16;6903:23;6939:63;6996:4;6991:3;6987:14;6973:12;6939:63;:::i;:::-;6845:167;7098:4;7091:5;7087:16;7081:23;7117:63;7174:4;7169:3;7165:14;7151:12;7117:63;:::i;:::-;7022:168;7276:4;7269:5;7265:16;7259:23;7295:63;7352:4;7347:3;7343:14;7329:12;7295:63;:::i;:::-;7200:168;7449:4;7442:5;7438:16;7432:23;7468:61;7523:4;7518:3;7514:14;7500:12;7468:61;:::i;:::-;7378:161;7634:4;7627:5;7623:16;7617:23;7653:63;7710:4;7705:3;7701:14;7687:12;7653:63;:::i;:::-;7549:177;6799:934;6645:1088;;:::o;7739:399::-;7920:4;7958:3;7947:9;7943:19;7935:27;;7972:159;8128:1;8117:9;8113:17;8104:6;7972:159;:::i;:::-;7739:399;;;;:::o;8144:143::-;8201:5;8232:6;8226:13;8217:22;;8248:33;8275:5;8248:33;:::i;:::-;8144:143;;;;:::o;8293:122::-;8366:24;8384:5;8366:24;:::i;:::-;8359:5;8356:35;8346:63;;8405:1;8402;8395:12;8346:63;8293:122;:::o;8421:143::-;8478:5;8509:6;8503:13;8494:22;;8525:33;8552:5;8525:33;:::i;:::-;8421:143;;;;:::o;8570:93::-;8606:7;8646:10;8639:5;8635:22;8624:33;;8570:93;;;:::o;8669:120::-;8741:23;8758:5;8741:23;:::i;:::-;8734:5;8731:34;8721:62;;8779:1;8776;8769:12;8721:62;8669:120;:::o;8795:141::-;8851:5;8882:6;8876:13;8867:22;;8898:32;8924:5;8898:32;:::i;:::-;8795:141;;;;:::o;8942:818::-;9038:6;9046;9054;9062;9111:3;9099:9;9090:7;9086:23;9082:33;9079:120;;;9118:79;;:::i;:::-;9079:120;9238:1;9263:64;9319:7;9310:6;9299:9;9295:22;9263:64;:::i;:::-;9253:74;;9209:128;9376:2;9402:64;9458:7;9449:6;9438:9;9434:22;9402:64;:::i;:::-;9392:74;;9347:129;9515:2;9541:63;9596:7;9587:6;9576:9;9572:22;9541:63;:::i;:::-;9531:73;;9486:128;9653:2;9679:64;9735:7;9726:6;9715:9;9711:22;9679:64;:::i;:::-;9669:74;;9624:129;8942:818;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "446600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DAI()": "infinite",
								"USDC()": "infinite",
								"USDT()": "infinite",
								"WETH()": "infinite",
								"feeTiers(uint256)": "6539",
								"getAmountOutMinimum(address,address,uint256,uint24)": "infinite",
								"quoterV2()": "infinite",
								"swapRouter()": "infinite",
								"uniswapV3Factory()": "infinite"
							},
							"internal": {
								"findAvailableFeeTiers(address,address)": "infinite",
								"findMinimumFeeTier(address,address)": "infinite",
								"swapExactInputMultihop(uint256,address,address)": "infinite",
								"swapExactInputSingle(uint256,address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 500,
									"end": 545,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 500,
									"end": 545,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 500,
									"end": 545,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 500,
									"end": 545,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 500,
									"end": 545,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 500,
									"end": 545,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 500,
									"end": 545,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 500,
									"end": 545,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 528,
									"end": 531,
									"name": "PUSH",
									"source": 6,
									"value": "1F4"
								},
								{
									"begin": 500,
									"end": 545,
									"name": "PUSH",
									"source": 6,
									"value": "FFFF"
								},
								{
									"begin": 500,
									"end": 545,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 500,
									"end": 545,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 500,
									"end": 545,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 500,
									"end": 545,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 500,
									"end": 545,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 533,
									"end": 537,
									"name": "PUSH",
									"source": 6,
									"value": "BB8"
								},
								{
									"begin": 500,
									"end": 545,
									"name": "PUSH",
									"source": 6,
									"value": "FFFF"
								},
								{
									"begin": 500,
									"end": 545,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 500,
									"end": 545,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 500,
									"end": 545,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 500,
									"end": 545,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 500,
									"end": 545,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 539,
									"end": 544,
									"name": "PUSH",
									"source": 6,
									"value": "2710"
								},
								{
									"begin": 500,
									"end": 545,
									"name": "PUSH",
									"source": 6,
									"value": "FFFF"
								},
								{
									"begin": 500,
									"end": 545,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 500,
									"end": 545,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 500,
									"end": 545,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 500,
									"end": 545,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 500,
									"end": 545,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 500,
									"end": 545,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 500,
									"end": 545,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 500,
									"end": 545,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 500,
									"end": 545,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 500,
									"end": 545,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 500,
									"end": 545,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 500,
									"end": 545,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 500,
									"end": 545,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 500,
									"end": 545,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 500,
									"end": 545,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 500,
									"end": 545,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 804,
									"end": 1239,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "tag",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1052,
									"end": 1063,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1039,
									"end": 1063,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1063,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1039,
									"end": 1063,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1039,
									"end": 1063,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1039,
									"end": 1063,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1063,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1039,
									"end": 1063,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1039,
									"end": 1063,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1039,
									"end": 1063,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1039,
									"end": 1063,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1085,
									"end": 1094,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1074,
									"end": 1094,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1074,
									"end": 1094,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1074,
									"end": 1094,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 1074,
									"end": 1094,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1074,
									"end": 1094,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1074,
									"end": 1094,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1074,
									"end": 1094,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1074,
									"end": 1094,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1074,
									"end": 1094,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1074,
									"end": 1094,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1124,
									"end": 1141,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1141,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1105,
									"end": 1141,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1141,
									"name": "PUSH",
									"source": 6,
									"value": "C0"
								},
								{
									"begin": 1105,
									"end": 1141,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1141,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1105,
									"end": 1141,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1141,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1141,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1141,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1141,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1158,
									"end": 1162,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1152,
									"end": 1162,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1152,
									"end": 1162,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1152,
									"end": 1162,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1152,
									"end": 1162,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1152,
									"end": 1162,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1152,
									"end": 1162,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1152,
									"end": 1162,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1152,
									"end": 1162,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1152,
									"end": 1162,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1152,
									"end": 1162,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1185,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1173,
									"end": 1185,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1173,
									"end": 1185,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1173,
									"end": 1185,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1173,
									"end": 1185,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1173,
									"end": 1185,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1173,
									"end": 1185,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1173,
									"end": 1185,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1173,
									"end": 1185,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1173,
									"end": 1185,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1173,
									"end": 1185,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1203,
									"end": 1208,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1208,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1196,
									"end": 1208,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1208,
									"name": "PUSH",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 1196,
									"end": 1208,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1208,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1196,
									"end": 1208,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1208,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1208,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1208,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1208,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1226,
									"end": 1231,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1219,
									"end": 1231,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1219,
									"end": 1231,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1219,
									"end": 1231,
									"name": "PUSH",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 1219,
									"end": 1231,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1219,
									"end": 1231,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1219,
									"end": 1231,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1219,
									"end": 1231,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1219,
									"end": 1231,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1219,
									"end": 1231,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1219,
									"end": 1231,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 804,
									"end": 1239,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFF"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "FFFF"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFF"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 324,
									"end": 6255,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 683,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 568,
									"end": 683,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 624,
									"end": 631,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 671,
									"end": 676,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 653,
									"end": 677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 653,
									"end": 677,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 642,
									"end": 677,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 642,
									"end": 677,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 568,
									"end": 683,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 689,
									"end": 849,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 689,
									"end": 849,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 818,
									"end": 823,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 781,
									"end": 824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 781,
									"end": 824,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 781,
									"end": 824,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 774,
									"end": 779,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 771,
									"end": 825,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 761,
									"end": 843,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 839,
									"end": 840,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 829,
									"end": 841,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 761,
									"end": 843,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 689,
									"end": 849,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 689,
									"end": 849,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 931,
									"end": 936,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 962,
									"end": 968,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 956,
									"end": 969,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 947,
									"end": 969,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 947,
									"end": 969,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1024,
									"end": 1029,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 978,
									"end": 1030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 855,
									"end": 1036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1042,
									"end": 1155,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1042,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1096,
									"end": 1103,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1125,
									"end": 1149,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1143,
									"end": 1148,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1125,
									"end": 1149,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1125,
									"end": 1149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1125,
									"end": 1149,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1125,
									"end": 1149,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1114,
									"end": 1149,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1114,
									"end": 1149,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1042,
									"end": 1155,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1042,
									"end": 1155,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1042,
									"end": 1155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1042,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1317,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1161,
									"end": 1317,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1251,
									"end": 1292,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1286,
									"end": 1291,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1251,
									"end": 1292,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1251,
									"end": 1292,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1251,
									"end": 1292,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1251,
									"end": 1292,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1244,
									"end": 1249,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1241,
									"end": 1293,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1311,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1231,
									"end": 1311,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1307,
									"end": 1308,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1304,
									"end": 1305,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1297,
									"end": 1309,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1311,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1231,
									"end": 1311,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1317,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1317,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1323,
									"end": 1500,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1323,
									"end": 1500,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1397,
									"end": 1402,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1428,
									"end": 1434,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1422,
									"end": 1435,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1413,
									"end": 1435,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1413,
									"end": 1435,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1444,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1488,
									"end": 1493,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1444,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1444,
									"end": 1494,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1444,
									"end": 1494,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1444,
									"end": 1494,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1323,
									"end": 1500,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1323,
									"end": 1500,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1323,
									"end": 1500,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1323,
									"end": 1500,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1323,
									"end": 1500,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1506,
									"end": 1627,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1506,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1575,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1597,
									"end": 1621,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1615,
									"end": 1620,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1597,
									"end": 1621,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1597,
									"end": 1621,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1597,
									"end": 1621,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1597,
									"end": 1621,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1586,
									"end": 1621,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1586,
									"end": 1621,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1506,
									"end": 1627,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1506,
									"end": 1627,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1506,
									"end": 1627,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1506,
									"end": 1627,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1805,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1633,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1731,
									"end": 1780,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 1774,
									"end": 1779,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1731,
									"end": 1780,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1731,
									"end": 1780,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1731,
									"end": 1780,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 1731,
									"end": 1780,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1724,
									"end": 1729,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1721,
									"end": 1781,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1711,
									"end": 1799,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1711,
									"end": 1799,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1795,
									"end": 1796,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1792,
									"end": 1793,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1785,
									"end": 1797,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1711,
									"end": 1799,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1711,
									"end": 1799,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1805,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1805,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1811,
									"end": 2004,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1811,
									"end": 2004,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1893,
									"end": 1898,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1924,
									"end": 1930,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1918,
									"end": 1931,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1909,
									"end": 1931,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1909,
									"end": 1931,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1940,
									"end": 1998,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1992,
									"end": 1997,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1940,
									"end": 1998,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1940,
									"end": 1998,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1940,
									"end": 1998,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1940,
									"end": 1998,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1811,
									"end": 2004,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1811,
									"end": 2004,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1811,
									"end": 2004,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1811,
									"end": 2004,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1811,
									"end": 2004,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2010,
									"end": 2132,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 2010,
									"end": 2132,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2083,
									"end": 2107,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2101,
									"end": 2106,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2083,
									"end": 2107,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 2083,
									"end": 2107,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2083,
									"end": 2107,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2083,
									"end": 2107,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2076,
									"end": 2081,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2073,
									"end": 2108,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 2063,
									"end": 2126,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2063,
									"end": 2126,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2122,
									"end": 2123,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2119,
									"end": 2120,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2112,
									"end": 2124,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2063,
									"end": 2126,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2063,
									"end": 2126,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2010,
									"end": 2132,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2010,
									"end": 2132,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2138,
									"end": 2281,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 2138,
									"end": 2281,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2195,
									"end": 2200,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2226,
									"end": 2232,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2220,
									"end": 2233,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2211,
									"end": 2233,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2211,
									"end": 2233,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2242,
									"end": 2275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2269,
									"end": 2274,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2242,
									"end": 2275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 2242,
									"end": 2275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2242,
									"end": 2275,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2242,
									"end": 2275,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2138,
									"end": 2281,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2138,
									"end": 2281,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2138,
									"end": 2281,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2138,
									"end": 2281,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2138,
									"end": 2281,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2287,
									"end": 3700,
									"name": "tag",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2287,
									"end": 3700,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2472,
									"end": 2478,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2480,
									"end": 2486,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2488,
									"end": 2494,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2496,
									"end": 2502,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2504,
									"end": 2510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2512,
									"end": 2518,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2526,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2569,
									"end": 2572,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 2557,
									"end": 2566,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 2548,
									"end": 2555,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 2544,
									"end": 2567,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2540,
									"end": 2573,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 2537,
									"end": 2657,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2537,
									"end": 2657,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 2537,
									"end": 2657,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2576,
									"end": 2655,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2576,
									"end": 2655,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 2576,
									"end": 2655,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2576,
									"end": 2655,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2576,
									"end": 2655,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2537,
									"end": 2657,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 2537,
									"end": 2657,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2696,
									"end": 2697,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2721,
									"end": 2804,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2796,
									"end": 2803,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 2787,
									"end": 2793,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2776,
									"end": 2785,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 2772,
									"end": 2794,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2721,
									"end": 2804,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2721,
									"end": 2804,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2721,
									"end": 2804,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2721,
									"end": 2804,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2711,
									"end": 2804,
									"name": "SWAP8",
									"source": 7
								},
								{
									"begin": 2711,
									"end": 2804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2667,
									"end": 2814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2853,
									"end": 2855,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2879,
									"end": 2960,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2952,
									"end": 2959,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 2943,
									"end": 2949,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2932,
									"end": 2941,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 2928,
									"end": 2950,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2879,
									"end": 2960,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 2879,
									"end": 2960,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2879,
									"end": 2960,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2879,
									"end": 2960,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2869,
									"end": 2960,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": 2869,
									"end": 2960,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2824,
									"end": 2970,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3009,
									"end": 3011,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3035,
									"end": 3124,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 3116,
									"end": 3123,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 3107,
									"end": 3113,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3096,
									"end": 3105,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 3092,
									"end": 3114,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3035,
									"end": 3124,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 3035,
									"end": 3124,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3035,
									"end": 3124,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 3035,
									"end": 3124,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3025,
									"end": 3124,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 3025,
									"end": 3124,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2980,
									"end": 3134,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3173,
									"end": 3175,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3199,
									"end": 3263,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 3255,
									"end": 3262,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 3246,
									"end": 3252,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3235,
									"end": 3244,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 3231,
									"end": 3253,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3199,
									"end": 3263,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 3199,
									"end": 3263,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3199,
									"end": 3263,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 3199,
									"end": 3263,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3263,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3263,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3144,
									"end": 3273,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3312,
									"end": 3315,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3339,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 3395,
									"end": 3402,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 3386,
									"end": 3392,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3375,
									"end": 3384,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 3371,
									"end": 3393,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3339,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 3339,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3339,
									"end": 3403,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 3339,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3329,
									"end": 3403,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3329,
									"end": 3403,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3283,
									"end": 3413,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3452,
									"end": 3455,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 3479,
									"end": 3543,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 3535,
									"end": 3542,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 3526,
									"end": 3532,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3515,
									"end": 3524,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 3511,
									"end": 3533,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3479,
									"end": 3543,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 3479,
									"end": 3543,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3479,
									"end": 3543,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 3479,
									"end": 3543,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3469,
									"end": 3543,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3469,
									"end": 3543,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3423,
									"end": 3553,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3592,
									"end": 3595,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 3619,
									"end": 3683,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3675,
									"end": 3682,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 3666,
									"end": 3672,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3655,
									"end": 3664,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 3651,
									"end": 3673,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3619,
									"end": 3683,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 3619,
									"end": 3683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3619,
									"end": 3683,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3619,
									"end": 3683,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3609,
									"end": 3683,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3609,
									"end": 3683,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3563,
									"end": 3693,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2287,
									"end": 3700,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2287,
									"end": 3700,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 2287,
									"end": 3700,
									"name": "SWAP9",
									"source": 7
								},
								{
									"begin": 2287,
									"end": 3700,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2287,
									"end": 3700,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2287,
									"end": 3700,
									"name": "SWAP8",
									"source": 7
								},
								{
									"begin": 2287,
									"end": 3700,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2287,
									"end": 3700,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2287,
									"end": 3700,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 2287,
									"end": 3700,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2287,
									"end": 3700,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "C0"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "510"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "508"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "506"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "504"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "491"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "488"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "485"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 6255,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220498b3a8689c99b7a627a6d8896234a0088fca93d551cd94313d359830f423f5964736f6c634300081a0033",
									".code": [
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH",
											"source": 6,
											"value": "AD5C4648"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH",
											"source": 6,
											"value": "AD5C4648"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH",
											"source": 6,
											"value": "C31C9C07"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH",
											"source": 6,
											"value": "C54E44EB"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH",
											"source": 6,
											"value": "E0BAB4C4"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH",
											"source": 6,
											"value": "E20DCCB2"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH",
											"source": 6,
											"value": "230ED44A"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH",
											"source": 6,
											"value": "5B549182"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH",
											"source": 6,
											"value": "89A30271"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH",
											"source": 6,
											"value": "9A90F2EC"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 324,
											"end": 6255,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 500,
											"end": 545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 500,
											"end": 545,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 500,
											"end": 545,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 500,
											"end": 545,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 500,
											"end": 545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 500,
											"end": 545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 500,
											"end": 545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 500,
											"end": 545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 545,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 500,
											"end": 545,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 500,
											"end": 545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 500,
											"end": 545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 545,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 440,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 440,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 440,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 440,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 440,
											"end": 491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 440,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 440,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 440,
											"end": 491,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 440,
											"end": 491,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 440,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 440,
											"end": 491,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 440,
											"end": 491,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 440,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 440,
											"end": 491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 440,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 440,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 440,
											"end": 491,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 440,
											"end": 491,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 440,
											"end": 491,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 440,
											"end": 491,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 440,
											"end": 491,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 440,
											"end": 491,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 440,
											"end": 491,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 700,
											"end": 729,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 700,
											"end": 729,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 700,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 700,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 700,
											"end": 729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 700,
											"end": 729,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 700,
											"end": 729,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 700,
											"end": 729,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 729,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 700,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 700,
											"end": 729,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 700,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 700,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 700,
											"end": 729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 700,
											"end": 729,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 700,
											"end": 729,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 700,
											"end": 729,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 729,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 700,
											"end": 729,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 700,
											"end": 729,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 700,
											"end": 729,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 700,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 700,
											"end": 729,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1247,
											"end": 1886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1247,
											"end": 1886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1247,
											"end": 1886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 736,
											"end": 765,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 736,
											"end": 765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 736,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 736,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 736,
											"end": 765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 736,
											"end": 765,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 736,
											"end": 765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 736,
											"end": 765,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 765,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 736,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 736,
											"end": 765,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 736,
											"end": 765,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 736,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 736,
											"end": 765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 736,
											"end": 765,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 736,
											"end": 765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 736,
											"end": 765,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 765,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 736,
											"end": 765,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 736,
											"end": 765,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 736,
											"end": 765,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 736,
											"end": 765,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 736,
											"end": 765,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 352,
											"end": 391,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 352,
											"end": 391,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 352,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 352,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 352,
											"end": 391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 352,
											"end": 391,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 352,
											"end": 391,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 352,
											"end": 391,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 352,
											"end": 391,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 352,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 352,
											"end": 391,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 352,
											"end": 391,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 352,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 352,
											"end": 391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 352,
											"end": 391,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 352,
											"end": 391,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 352,
											"end": 391,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 352,
											"end": 391,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 352,
											"end": 391,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 352,
											"end": 391,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 352,
											"end": 391,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 352,
											"end": 391,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 352,
											"end": 391,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 664,
											"end": 693,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 664,
											"end": 693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 664,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 664,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 664,
											"end": 693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 664,
											"end": 693,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 664,
											"end": 693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 664,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 664,
											"end": 693,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 664,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 664,
											"end": 693,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 664,
											"end": 693,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 664,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 664,
											"end": 693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 664,
											"end": 693,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 664,
											"end": 693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 664,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 664,
											"end": 693,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 664,
											"end": 693,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 664,
											"end": 693,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 664,
											"end": 693,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 664,
											"end": 693,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 664,
											"end": 693,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 629,
											"end": 657,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 629,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 629,
											"end": 657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 629,
											"end": 657,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 629,
											"end": 657,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 629,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 629,
											"end": 657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 629,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 629,
											"end": 657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 629,
											"end": 657,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 629,
											"end": 657,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 629,
											"end": 657,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 629,
											"end": 657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 629,
											"end": 657,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 629,
											"end": 657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 629,
											"end": 657,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 398,
											"end": 433,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 398,
											"end": 433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 398,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 398,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 398,
											"end": 433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 398,
											"end": 433,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 398,
											"end": 433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 398,
											"end": 433,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 433,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 398,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 398,
											"end": 433,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 398,
											"end": 433,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 398,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 398,
											"end": 433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 398,
											"end": 433,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 398,
											"end": 433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 398,
											"end": 433,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 433,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 398,
											"end": 433,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 398,
											"end": 433,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 398,
											"end": 433,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 398,
											"end": 433,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 398,
											"end": 433,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 500,
											"end": 545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 500,
											"end": 545,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 545,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 500,
											"end": 545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 545,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 500,
											"end": 545,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 545,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 500,
											"end": 545,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "MOD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 500,
											"end": 545,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 500,
											"end": 545,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFF"
										},
										{
											"begin": 500,
											"end": 545,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 500,
											"end": 545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 440,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 440,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 440,
											"end": 491,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "491"
										},
										{
											"begin": 440,
											"end": 491,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 440,
											"end": 491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 700,
											"end": 729,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 700,
											"end": 729,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 700,
											"end": 729,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "508"
										},
										{
											"begin": 700,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 700,
											"end": 729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1428,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1430,
											"end": 1455,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1468,
											"end": 1519,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1602,
											"end": 1609,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1646,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1675,
											"end": 1683,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1707,
											"end": 1714,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFF"
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1753,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1769,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1468,
											"end": 1769,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1468,
											"end": 1769,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1834,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 1826,
											"end": 1870,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1826,
											"end": 1870,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1870,
											"name": "PUSH",
											"source": 6,
											"value": "C6A5026A"
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1826,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1826,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1826,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1878,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1878,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1878,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1878,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1886,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 736,
											"end": 765,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 736,
											"end": 765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 736,
											"end": 765,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "510"
										},
										{
											"begin": 736,
											"end": 765,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 736,
											"end": 765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 352,
											"end": 391,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 352,
											"end": 391,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 352,
											"end": 391,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "485"
										},
										{
											"begin": 352,
											"end": 391,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 352,
											"end": 391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 664,
											"end": 693,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 664,
											"end": 693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 664,
											"end": 693,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 664,
											"end": 693,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 664,
											"end": 693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 629,
											"end": 657,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 629,
											"end": 657,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 629,
											"end": 657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 398,
											"end": 433,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 398,
											"end": 433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 398,
											"end": 433,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 398,
											"end": 433,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 398,
											"end": 433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1116,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1025,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1068,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1109,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFF"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1110,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1110,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1116,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1116,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1237,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1122,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1224,
											"end": 1229,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1207,
											"end": 1230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1230,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1207,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1205,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1195,
											"end": 1231,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1461,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1243,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 1338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1372,
											"end": 1374,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1361,
											"end": 1370,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1375,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1375,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1385,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1451,
											"end": 1452,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1449,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1436,
											"end": 1453,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1433,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1385,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1385,
											"end": 1454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1385,
											"end": 1454,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1385,
											"end": 1454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1461,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1461,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1461,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1461,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1467,
											"end": 1593,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1467,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1504,
											"end": 1511,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1544,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1537,
											"end": 1542,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1587,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1522,
											"end": 1587,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1522,
											"end": 1587,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1467,
											"end": 1593,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1467,
											"end": 1593,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1467,
											"end": 1593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1467,
											"end": 1593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1659,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1599,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1627,
											"end": 1630,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1653,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1659,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1659,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1659,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1807,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1665,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1724,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 1766,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 1775,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1793,
											"end": 1798,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1775,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1799,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1775,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1766,
											"end": 1800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1800,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 1766,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1748,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1748,
											"end": 1801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1748,
											"end": 1801,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 1748,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1801,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1807,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1807,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1807,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1939,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1813,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1872,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 1927,
											"end": 1932,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1896,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1896,
											"end": 1933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1896,
											"end": 1933,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 1896,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1883,
											"end": 1933,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1883,
											"end": 1933,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1939,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1945,
											"end": 2096,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1945,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2029,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2053,
											"end": 2090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2090,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2053,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2090,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1945,
											"end": 2096,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1945,
											"end": 2096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1945,
											"end": 2096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1945,
											"end": 2096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2102,
											"end": 2283,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2102,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2214,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2270,
											"end": 2275,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2214,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2214,
											"end": 2276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2214,
											"end": 2276,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2214,
											"end": 2276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2212,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2277,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2102,
											"end": 2283,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2102,
											"end": 2283,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2102,
											"end": 2283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2289,
											"end": 2561,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2289,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2407,
											"end": 2411,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2445,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2443,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2448,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2448,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2551,
											"end": 2552,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2549,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2553,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2527,
											"end": 2533,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2458,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2554,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2458,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2289,
											"end": 2561,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2289,
											"end": 2561,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2289,
											"end": 2561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2289,
											"end": 2561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2289,
											"end": 2561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2663,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 2567,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2611,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2651,
											"end": 2656,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2633,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 2633,
											"end": 2657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2633,
											"end": 2657,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2633,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2657,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2663,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2663,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2787,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 2669,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 2756,
											"end": 2780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2780,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2756,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2754,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2781,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2793,
											"end": 3015,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 2793,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2886,
											"end": 2890,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2926,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2913,
											"end": 2922,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 2927,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3005,
											"end": 3006,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2994,
											"end": 3003,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2990,
											"end": 3007,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2981,
											"end": 2987,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 2937,
											"end": 3008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 3008,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2937,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2793,
											"end": 3015,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2793,
											"end": 3015,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2793,
											"end": 3015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2793,
											"end": 3015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2793,
											"end": 3015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3143,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3021,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3094,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 3112,
											"end": 3117,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3094,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 3094,
											"end": 3118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3094,
											"end": 3118,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 3094,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3087,
											"end": 3092,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3119,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3074,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 3074,
											"end": 3137,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3133,
											"end": 3134,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3131,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3074,
											"end": 3137,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 3074,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3149,
											"end": 3288,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3149,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3195,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3233,
											"end": 3239,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3240,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3211,
											"end": 3240,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3211,
											"end": 3240,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3249,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 3276,
											"end": 3281,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3249,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3249,
											"end": 3282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3249,
											"end": 3282,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 3249,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3149,
											"end": 3288,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3149,
											"end": 3288,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3149,
											"end": 3288,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3149,
											"end": 3288,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3149,
											"end": 3288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3294,
											"end": 3414,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 3294,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3366,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 3383,
											"end": 3388,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3366,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 3366,
											"end": 3389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3366,
											"end": 3389,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 3366,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3364,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3356,
											"end": 3390,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3346,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 3346,
											"end": 3408,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3404,
											"end": 3405,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3401,
											"end": 3402,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3406,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3346,
											"end": 3408,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 3346,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3294,
											"end": 3414,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3294,
											"end": 3414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3557,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 3420,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3470,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3503,
											"end": 3509,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3490,
											"end": 3510,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3481,
											"end": 3510,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3481,
											"end": 3510,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 3545,
											"end": 3550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 3519,
											"end": 3551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3551,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 3519,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3557,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3557,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 4326,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 3563,
											"end": 4326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3648,
											"end": 3654,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3656,
											"end": 3662,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3664,
											"end": 3670,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3672,
											"end": 3678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3724,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3709,
											"end": 3718,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3700,
											"end": 3707,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3696,
											"end": 3719,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3692,
											"end": 3725,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3689,
											"end": 3809,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3689,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 3689,
											"end": 3809,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 3728,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3728,
											"end": 3807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3807,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 3728,
											"end": 3807,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3689,
											"end": 3809,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 3689,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3849,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3873,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 3918,
											"end": 3925,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3909,
											"end": 3915,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3907,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3916,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3873,
											"end": 3926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 3926,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 3873,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3863,
											"end": 3926,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3863,
											"end": 3926,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3975,
											"end": 3977,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4001,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4037,
											"end": 4043,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4035,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4044,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4001,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 4001,
											"end": 4054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4001,
											"end": 4054,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 4001,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 4054,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 4054,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4103,
											"end": 4105,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4129,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 4174,
											"end": 4181,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4165,
											"end": 4171,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4154,
											"end": 4163,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4172,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4129,
											"end": 4182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4182,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 4129,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4119,
											"end": 4182,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4119,
											"end": 4182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4192,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4231,
											"end": 4233,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4257,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 4301,
											"end": 4308,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4298,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4281,
											"end": 4290,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4277,
											"end": 4299,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 4257,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4309,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 4257,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4247,
											"end": 4309,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4247,
											"end": 4309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4202,
											"end": 4319,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 4326,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 4326,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 4326,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 4326,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 4326,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 4326,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 4326,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 4326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4332,
											"end": 4450,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 4332,
											"end": 4450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4419,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 4437,
											"end": 4442,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4419,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 4419,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4419,
											"end": 4443,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 4419,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4414,
											"end": 4417,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4444,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4332,
											"end": 4450,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4332,
											"end": 4450,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4332,
											"end": 4450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4456,
											"end": 4574,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4456,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4543,
											"end": 4567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 4561,
											"end": 4566,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4543,
											"end": 4567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 4543,
											"end": 4567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4543,
											"end": 4567,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 4543,
											"end": 4567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4541,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4531,
											"end": 4568,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4456,
											"end": 4574,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4456,
											"end": 4574,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4456,
											"end": 4574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4580,
											"end": 4912,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 4580,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4701,
											"end": 4705,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4741,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4728,
											"end": 4737,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4724,
											"end": 4742,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4716,
											"end": 4742,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4716,
											"end": 4742,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 4820,
											"end": 4821,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4809,
											"end": 4818,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4805,
											"end": 4822,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4796,
											"end": 4802,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 4752,
											"end": 4823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4823,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 4752,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 4901,
											"end": 4903,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4890,
											"end": 4899,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 4904,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4877,
											"end": 4883,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4833,
											"end": 4905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4905,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 4833,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4580,
											"end": 4912,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4580,
											"end": 4912,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4580,
											"end": 4912,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4580,
											"end": 4912,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4580,
											"end": 4912,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4580,
											"end": 4912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4918,
											"end": 5063,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 4918,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4987,
											"end": 4996,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5020,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 5051,
											"end": 5056,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 5020,
											"end": 5057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5057,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 5020,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5007,
											"end": 5057,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5007,
											"end": 5057,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4918,
											"end": 5063,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4918,
											"end": 5063,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4918,
											"end": 5063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4918,
											"end": 5063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5069,
											"end": 5238,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5069,
											"end": 5238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 5225,
											"end": 5230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 5175,
											"end": 5231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 5175,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5170,
											"end": 5173,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5163,
											"end": 5232,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5069,
											"end": 5238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5069,
											"end": 5238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5069,
											"end": 5238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5244,
											"end": 5504,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 5244,
											"end": 5504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5356,
											"end": 5360,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5394,
											"end": 5396,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5383,
											"end": 5392,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5379,
											"end": 5397,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5371,
											"end": 5397,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5371,
											"end": 5397,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 5494,
											"end": 5495,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5483,
											"end": 5492,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5407,
											"end": 5497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5497,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 5407,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5244,
											"end": 5504,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5244,
											"end": 5504,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5244,
											"end": 5504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5244,
											"end": 5504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5244,
											"end": 5504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5510,
											"end": 5653,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 5510,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5577,
											"end": 5586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 5641,
											"end": 5646,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 5610,
											"end": 5647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5647,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 5610,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5597,
											"end": 5647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5597,
											"end": 5647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5510,
											"end": 5653,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5510,
											"end": 5653,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5510,
											"end": 5653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5510,
											"end": 5653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5824,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5659,
											"end": 5824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 5811,
											"end": 5816,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 5763,
											"end": 5817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5817,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 5763,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5758,
											"end": 5761,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5751,
											"end": 5818,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5824,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5824,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5830,
											"end": 6086,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 5830,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5940,
											"end": 5944,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5978,
											"end": 5980,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5967,
											"end": 5976,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5955,
											"end": 5981,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5955,
											"end": 5981,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5991,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 6076,
											"end": 6077,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6065,
											"end": 6074,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6061,
											"end": 6078,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6052,
											"end": 6058,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5991,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5991,
											"end": 6079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5991,
											"end": 6079,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 5991,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5830,
											"end": 6086,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5830,
											"end": 6086,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5830,
											"end": 6086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5830,
											"end": 6086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5830,
											"end": 6086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6200,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 6092,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6169,
											"end": 6193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 6187,
											"end": 6192,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6169,
											"end": 6193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 6169,
											"end": 6193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6169,
											"end": 6193,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 6169,
											"end": 6193,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6167,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6157,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6314,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 6206,
											"end": 6314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6283,
											"end": 6307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 6301,
											"end": 6306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6283,
											"end": 6307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 6283,
											"end": 6307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6283,
											"end": 6307,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 6283,
											"end": 6307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6278,
											"end": 6281,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6271,
											"end": 6308,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6320,
											"end": 6425,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 6320,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6395,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 6412,
											"end": 6417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6395,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 6395,
											"end": 6418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6395,
											"end": 6418,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 6395,
											"end": 6418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6390,
											"end": 6393,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6383,
											"end": 6419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6320,
											"end": 6425,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6320,
											"end": 6425,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6320,
											"end": 6425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6539,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 6431,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6508,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 6526,
											"end": 6531,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6508,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 6508,
											"end": 6532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6508,
											"end": 6532,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 6508,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6503,
											"end": 6506,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6496,
											"end": 6533,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6645,
											"end": 7733,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 6645,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6830,
											"end": 6834,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 6825,
											"end": 6828,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6821,
											"end": 6835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6920,
											"end": 6924,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6913,
											"end": 6918,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6903,
											"end": 6926,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6939,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6991,
											"end": 6994,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7001,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6973,
											"end": 6985,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6939,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 6939,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6939,
											"end": 7002,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 6939,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6845,
											"end": 7012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7098,
											"end": 7102,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7091,
											"end": 7096,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7103,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7081,
											"end": 7104,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7117,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 7174,
											"end": 7178,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7169,
											"end": 7172,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7179,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7151,
											"end": 7163,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7117,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 7117,
											"end": 7180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7117,
											"end": 7180,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 7117,
											"end": 7180,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7022,
											"end": 7190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7280,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7269,
											"end": 7274,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7281,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7259,
											"end": 7282,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7347,
											"end": 7350,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7343,
											"end": 7357,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7329,
											"end": 7341,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 7295,
											"end": 7358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7358,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 7295,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7200,
											"end": 7368,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7449,
											"end": 7453,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7442,
											"end": 7447,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7438,
											"end": 7454,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7432,
											"end": 7455,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7468,
											"end": 7529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 7523,
											"end": 7527,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7518,
											"end": 7521,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7514,
											"end": 7528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7500,
											"end": 7512,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7468,
											"end": 7529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 7468,
											"end": 7529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7468,
											"end": 7529,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 7468,
											"end": 7529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7378,
											"end": 7539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7634,
											"end": 7638,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 7627,
											"end": 7632,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7623,
											"end": 7639,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7617,
											"end": 7640,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 7710,
											"end": 7714,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 7705,
											"end": 7708,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7701,
											"end": 7715,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7687,
											"end": 7699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 7653,
											"end": 7716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 7716,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 7653,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7549,
											"end": 7726,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 7733,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6645,
											"end": 7733,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6645,
											"end": 7733,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6645,
											"end": 7733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7739,
											"end": 8138,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 7739,
											"end": 8138,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7920,
											"end": 7924,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 7961,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 7947,
											"end": 7956,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7943,
											"end": 7962,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7935,
											"end": 7962,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7935,
											"end": 7962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7972,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 8128,
											"end": 8129,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8117,
											"end": 8126,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8130,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8104,
											"end": 8110,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7972,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 7972,
											"end": 8131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7972,
											"end": 8131,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 7972,
											"end": 8131,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7739,
											"end": 8138,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7739,
											"end": 8138,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7739,
											"end": 8138,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7739,
											"end": 8138,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7739,
											"end": 8138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8144,
											"end": 8287,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 8144,
											"end": 8287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8201,
											"end": 8206,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8238,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8226,
											"end": 8239,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8217,
											"end": 8239,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8217,
											"end": 8239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8248,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 8275,
											"end": 8280,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8248,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 8248,
											"end": 8281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8248,
											"end": 8281,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 8248,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8144,
											"end": 8287,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8144,
											"end": 8287,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8144,
											"end": 8287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8144,
											"end": 8287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8144,
											"end": 8287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8293,
											"end": 8415,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 8293,
											"end": 8415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8366,
											"end": 8390,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 8384,
											"end": 8389,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8366,
											"end": 8390,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 8366,
											"end": 8390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8366,
											"end": 8390,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 8366,
											"end": 8390,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8359,
											"end": 8364,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8356,
											"end": 8391,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8346,
											"end": 8409,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 8346,
											"end": 8409,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8405,
											"end": 8406,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8402,
											"end": 8403,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8395,
											"end": 8407,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8346,
											"end": 8409,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 8346,
											"end": 8409,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8293,
											"end": 8415,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8293,
											"end": 8415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8421,
											"end": 8564,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 8421,
											"end": 8564,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8478,
											"end": 8483,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8509,
											"end": 8515,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8503,
											"end": 8516,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8494,
											"end": 8516,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8494,
											"end": 8516,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8525,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 8552,
											"end": 8557,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8525,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 8525,
											"end": 8558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8525,
											"end": 8558,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 8525,
											"end": 8558,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8421,
											"end": 8564,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8421,
											"end": 8564,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8421,
											"end": 8564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8421,
											"end": 8564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8421,
											"end": 8564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8570,
											"end": 8663,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 8570,
											"end": 8663,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8606,
											"end": 8613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8646,
											"end": 8656,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8639,
											"end": 8644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8635,
											"end": 8657,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8624,
											"end": 8657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8624,
											"end": 8657,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8570,
											"end": 8663,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8570,
											"end": 8663,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8570,
											"end": 8663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8570,
											"end": 8663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8669,
											"end": 8789,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 8669,
											"end": 8789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8741,
											"end": 8764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 8758,
											"end": 8763,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8741,
											"end": 8764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 8741,
											"end": 8764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8741,
											"end": 8764,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 8741,
											"end": 8764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8734,
											"end": 8739,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8731,
											"end": 8765,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8721,
											"end": 8783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 8721,
											"end": 8783,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8779,
											"end": 8780,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8776,
											"end": 8777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8769,
											"end": 8781,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8721,
											"end": 8783,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 8721,
											"end": 8783,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8669,
											"end": 8789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8669,
											"end": 8789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8795,
											"end": 8936,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 8795,
											"end": 8936,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8851,
											"end": 8856,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8882,
											"end": 8888,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8876,
											"end": 8889,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8867,
											"end": 8889,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8867,
											"end": 8889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8898,
											"end": 8930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 8924,
											"end": 8929,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8898,
											"end": 8930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 8898,
											"end": 8930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8898,
											"end": 8930,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 8898,
											"end": 8930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8795,
											"end": 8936,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8795,
											"end": 8936,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8795,
											"end": 8936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8795,
											"end": 8936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8795,
											"end": 8936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9760,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 8942,
											"end": 9760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9038,
											"end": 9044,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9046,
											"end": 9052,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9062,
											"end": 9068,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9111,
											"end": 9114,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 9099,
											"end": 9108,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9090,
											"end": 9097,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 9086,
											"end": 9109,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9082,
											"end": 9115,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 9079,
											"end": 9199,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9079,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 9079,
											"end": 9199,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9118,
											"end": 9197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 9118,
											"end": 9197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9118,
											"end": 9197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9118,
											"end": 9197,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 9118,
											"end": 9197,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9079,
											"end": 9199,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 9079,
											"end": 9199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9238,
											"end": 9239,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9263,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 9319,
											"end": 9326,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 9310,
											"end": 9316,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9299,
											"end": 9308,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 9295,
											"end": 9317,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9263,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 9263,
											"end": 9327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9263,
											"end": 9327,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 9263,
											"end": 9327,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9253,
											"end": 9327,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 9253,
											"end": 9327,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9209,
											"end": 9337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9376,
											"end": 9378,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9402,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 9458,
											"end": 9465,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9455,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9438,
											"end": 9447,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 9434,
											"end": 9456,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9402,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 9402,
											"end": 9466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9402,
											"end": 9466,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 9402,
											"end": 9466,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9392,
											"end": 9466,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9392,
											"end": 9466,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9347,
											"end": 9476,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9515,
											"end": 9517,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9541,
											"end": 9604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 9587,
											"end": 9593,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9576,
											"end": 9585,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 9572,
											"end": 9594,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9541,
											"end": 9604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 9541,
											"end": 9604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9541,
											"end": 9604,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 9541,
											"end": 9604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9531,
											"end": 9604,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9531,
											"end": 9604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9486,
											"end": 9614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9653,
											"end": 9655,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9679,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 9735,
											"end": 9742,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 9732,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9715,
											"end": 9724,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 9711,
											"end": 9733,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9679,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 9679,
											"end": 9743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9679,
											"end": 9743,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 9679,
											"end": 9743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9669,
											"end": 9743,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9669,
											"end": 9743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9624,
											"end": 9753,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9760,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9760,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9760,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9760,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9760,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9760,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9760,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/IUniswapPool.sol",
								"contracts/SwapUniswap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DAI()": "e0bab4c4",
							"USDC()": "89a30271",
							"USDT()": "c54e44eb",
							"WETH()": "ad5c4648",
							"feeTiers(uint256)": "230ed44a",
							"getAmountOutMinimum(address,address,uint256,uint24)": "9a90f2ec",
							"quoterV2()": "e20dccb2",
							"swapRouter()": "c31c9c07",
							"uniswapV3Factory()": "5b549182"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"_swapRouter\",\"type\":\"address\"},{\"internalType\":\"contract IQuoterV2\",\"name\":\"_quoterv2\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV3Factory\",\"name\":\"_uniswapV3Factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dai\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NoAvalibleFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"feeTiers\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"poolFee\",\"type\":\"uint24\"}],\"name\":\"getAmountOutMinimum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96After\",\"type\":\"uint160\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoterV2\",\"outputs\":[{\"internalType\":\"contract IQuoterV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV3Factory\",\"outputs\":[{\"internalType\":\"contract IUniswapV3Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SwapUniswap.sol\":\"SwapUniswap\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol\":{\"keccak256\":\"0x7e931f0cd34811851031c4f1318f59b4a4b427a2d2e2968b8e5ed87a9f7f89d6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://63a8d7dcdd081004356b39e1b8e19ee56b02b3abd3e4165781bde1a100a35bed\",\"dweb:/ipfs/QmdfpYkMxoaeEd646aSioLZcPodnCnpZy9Ny4j98uAba2J\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"contracts/IUniswapPool.sol\":{\"keccak256\":\"0x8c0ad54272b9eb95f208708f0e74d7952c4f5e508e110576d8cafdcc192345a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41bf13f35eb6268ce67273537b54b03a28e6999f8b4b44a25426e99ff851b359\",\"dweb:/ipfs/Qmes8QGUSiK5cnTh5vbnAHdvnrCgrVCFw2aFGUbjPFyuju\"]},\"contracts/SwapUniswap.sol\":{\"keccak256\":\"0x75eabd993429302f851c1d669bdfaa7be9023fc202483b95879073ee231105dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1257a8b9fd8cc0e8c660cb6ae8828669f042f0208ec5f4efa0b3beb24a1bf55d\",\"dweb:/ipfs/QmenW4NKRKdKxmnme7g8HapVwsQTLWJXkiL4SRZ8uhSrKZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 498,
								"contract": "contracts/SwapUniswap.sol:SwapUniswap",
								"label": "feeTiers",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_uint24)dyn_storage"
							}
						],
						"types": {
							"t_array(t_uint24)dyn_storage": {
								"base": "t_uint24",
								"encoding": "dynamic_array",
								"label": "uint24[]",
								"numberOfBytes": "32"
							},
							"t_uint24": {
								"encoding": "inplace",
								"label": "uint24",
								"numberOfBytes": "3"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 92,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:1",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 91,
							"linearizedBaseContracts": [
								91
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:1",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1197:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 82,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1226:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 84,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1255:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 86,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:1"
									},
									"scope": 91,
									"src": "1157:133:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 92,
							"src": "215:1077:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1248:1"
				},
				"id": 1
			},
			"@uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol",
					"exportedSymbols": {
						"IQuoterV2": [
							184
						]
					},
					"id": 185,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 93,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"id": 94,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IQuoterV2",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 95,
								"nodeType": "StructuredDocumentation",
								"src": "91:451:2",
								"text": "@title QuoterV2 Interface\n @notice Supports quoting the calculated amounts from exact input or exact output swaps.\n @notice For each pool also tells you the number of initialized ticks crossed and the sqrt price of the pool after the swap.\n @dev These functions are not marked view because they rely on calling non-view functions and reverting\n to compute the result. They are also not gas efficient and should not be called on-chain."
							},
							"fullyImplemented": false,
							"id": 184,
							"linearizedBaseContracts": [
								184
							],
							"name": "IQuoterV2",
							"nameLocation": "552:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "568:618:2",
										"text": "@notice Returns the amount out received for a given exact input swap without executing the swap\n @param path The path of the swap, i.e. each token pair and the pool fee\n @param amountIn The amount of the first token to swap\n @return amountOut The amount of the last token that would be received\n @return sqrtPriceX96AfterList List of the sqrt price after the swap for each pool in the path\n @return initializedTicksCrossedList List of the initialized ticks that the swap crossed for each pool in the path\n @return gasEstimate The estimate of the gas that the swap consumes"
									},
									"functionSelector": "cdca1753",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactInput",
									"nameLocation": "1200:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1229:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1216:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 97,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1216:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1243:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1235:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1215:37:2"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1308:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1300:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1300:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "sqrtPriceX96AfterList",
												"nameLocation": "1348:21:2",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1331:38:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 104,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1331:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 105,
													"nodeType": "ArrayTypeName",
													"src": "1331:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "initializedTicksCrossedList",
												"nameLocation": "1399:27:2",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1383:43:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 107,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1383:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 108,
													"nodeType": "ArrayTypeName",
													"src": "1383:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nameLocation": "1448:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1440:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1440:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1286:183:2"
									},
									"scope": 184,
									"src": "1191:279:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IQuoterV2.QuoteExactInputSingleParams",
									"id": 124,
									"members": [
										{
											"constant": false,
											"id": 115,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1529:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 124,
											"src": "1521:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 114,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1521:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 117,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1554:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 124,
											"src": "1546:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 116,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1546:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 119,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1580:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 124,
											"src": "1572:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 118,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1572:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 121,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1605:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 124,
											"src": "1598:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 120,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1598:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 123,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1626:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 124,
											"src": "1618:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 122,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1618:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "QuoteExactInputSingleParams",
									"nameLocation": "1483:27:2",
									"nodeType": "StructDefinition",
									"scope": 184,
									"src": "1476:174:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "1656:790:2",
										"text": "@notice Returns the amount out received for a given exact input but for a swap of a single pool\n @param params The params for the quote, encoded as `QuoteExactInputSingleParams`\n tokenIn The token being swapped in\n tokenOut The token being swapped out\n fee The fee of the token pool to consider for the pair\n amountIn The desired input amount\n sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n @return amountOut The amount of `tokenOut` that would be received\n @return sqrtPriceX96After The sqrt price of the pool after the swap\n @return initializedTicksCrossed The number of initialized ticks that the swap crossed\n @return gasEstimate The estimate of the gas that the swap consumes"
									},
									"functionSelector": "c6a5026a",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactInputSingle",
									"nameLocation": "2460:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2517:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "2482:41:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$124_memory_ptr",
													"typeString": "struct IQuoterV2.QuoteExactInputSingleParams"
												},
												"typeName": {
													"id": 127,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 126,
														"name": "QuoteExactInputSingleParams",
														"nameLocations": [
															"2482:27:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 124,
														"src": "2482:27:2"
													},
													"referencedDeclaration": 124,
													"src": "2482:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$124_storage_ptr",
														"typeString": "struct IQuoterV2.QuoteExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2481:43:2"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2580:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "2572:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "sqrtPriceX96After",
												"nameLocation": "2611:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "2603:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 132,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "initializedTicksCrossed",
												"nameLocation": "2649:23:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "2642:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 134,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2642:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nameLocation": "2694:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "2686:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:157:2"
									},
									"scope": 184,
									"src": "2451:265:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "2722:654:2",
										"text": "@notice Returns the amount in required for a given exact output swap without executing the swap\n @param path The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\n @param amountOut The amount of the last token to receive\n @return amountIn The amount of first token required to be paid\n @return sqrtPriceX96AfterList List of the sqrt price after the swap for each pool in the path\n @return initializedTicksCrossedList List of the initialized ticks that the swap crossed for each pool in the path\n @return gasEstimate The estimate of the gas that the swap consumes"
									},
									"functionSelector": "2f80bb1d",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactOutput",
									"nameLocation": "3390:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3407:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 141,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3407:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3434:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3426:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3426:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3406:38:2"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3500:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3492:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "sqrtPriceX96AfterList",
												"nameLocation": "3539:21:2",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3522:38:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 148,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "3522:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 149,
													"nodeType": "ArrayTypeName",
													"src": "3522:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "initializedTicksCrossedList",
												"nameLocation": "3590:27:2",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3574:43:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 151,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "3574:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 152,
													"nodeType": "ArrayTypeName",
													"src": "3574:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nameLocation": "3639:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3631:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3478:182:2"
									},
									"scope": 184,
									"src": "3381:280:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IQuoterV2.QuoteExactOutputSingleParams",
									"id": 168,
									"members": [
										{
											"constant": false,
											"id": 159,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "3721:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 168,
											"src": "3713:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 158,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3713:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 161,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "3746:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 168,
											"src": "3738:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 160,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3738:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 163,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "3772:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 168,
											"src": "3764:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3764:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 165,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "3795:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 168,
											"src": "3788:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 164,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "3788:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 167,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "3816:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 168,
											"src": "3808:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 166,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "3808:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "QuoteExactOutputSingleParams",
									"nameLocation": "3674:28:2",
									"nodeType": "StructDefinition",
									"scope": 184,
									"src": "3667:173:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "3846:838:2",
										"text": "@notice Returns the amount in required to receive the given exact output amount but for a swap of a single pool\n @param params The params for the quote, encoded as `QuoteExactOutputSingleParams`\n tokenIn The token being swapped in\n tokenOut The token being swapped out\n fee The fee of the token pool to consider for the pair\n amountOut The desired output amount\n sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n @return amountIn The amount required as the input for the swap in order to receive `amountOut`\n @return sqrtPriceX96After The sqrt price of the pool after the swap\n @return initializedTicksCrossed The number of initialized ticks that the swap crossed\n @return gasEstimate The estimate of the gas that the swap consumes"
									},
									"functionSelector": "bd21704a",
									"id": 183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactOutputSingle",
									"nameLocation": "4698:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "4757:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "4721:42:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$168_memory_ptr",
													"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams"
												},
												"typeName": {
													"id": 171,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 170,
														"name": "QuoteExactOutputSingleParams",
														"nameLocations": [
															"4721:28:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 168,
														"src": "4721:28:2"
													},
													"referencedDeclaration": 168,
													"src": "4721:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$168_storage_ptr",
														"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4720:44:2"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "4820:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "4812:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "sqrtPriceX96After",
												"nameLocation": "4850:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "4842:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 176,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4842:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "initializedTicksCrossed",
												"nameLocation": "4888:23:2",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "4881:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 178,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4881:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nameLocation": "4933:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "4925:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4925:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4798:156:2"
									},
									"scope": 184,
									"src": "4689:266:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 185,
							"src": "542:4415:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:4913:2"
				},
				"id": 2
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							284
						],
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 285,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 186,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"id": 187,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:3"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 188,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 285,
							"sourceUnit": 92,
							"src": "91:83:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 190,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"305:22:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 91,
										"src": "305:22:3"
									},
									"id": 191,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:3"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 189,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:3",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 284,
							"linearizedBaseContracts": [
								284,
								91
							],
							"name": "ISwapRouter",
							"nameLocation": "290:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 208,
									"members": [
										{
											"constant": false,
											"id": 193,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "382:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 208,
											"src": "374:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 192,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 195,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "407:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 208,
											"src": "399:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 194,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 197,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "432:3:3",
											"nodeType": "VariableDeclaration",
											"scope": 208,
											"src": "425:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 196,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 199,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "453:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 208,
											"src": "445:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 198,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "480:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 208,
											"src": "472:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 200,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 203,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "506:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 208,
											"src": "498:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 202,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 205,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "532:16:3",
											"nodeType": "VariableDeclaration",
											"scope": 208,
											"src": "524:24:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 204,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 207,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "566:17:3",
											"nodeType": "VariableDeclaration",
											"scope": 208,
											"src": "558:25:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 206,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "341:22:3",
									"nodeType": "StructDefinition",
									"scope": 284,
									"src": "334:256:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:3",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "860:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "909:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "877:38:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$208_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 211,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 210,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"877:22:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 208,
														"src": "877:22:3"
													},
													"referencedDeclaration": 208,
													"src": "877:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$208_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:3"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "951:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "943:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:3"
									},
									"scope": 284,
									"src": "851:111:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 228,
									"members": [
										{
											"constant": false,
											"id": 219,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1008:4:3",
											"nodeType": "VariableDeclaration",
											"scope": 228,
											"src": "1002:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 218,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 221,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1030:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 228,
											"src": "1022:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 220,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 223,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1057:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 228,
											"src": "1049:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 222,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 225,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1083:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 228,
											"src": "1075:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 224,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 227,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1109:16:3",
											"nodeType": "VariableDeclaration",
											"scope": 228,
											"src": "1101:24:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 226,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "975:16:3",
									"nodeType": "StructDefinition",
									"scope": 284,
									"src": "968:164:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:3",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1425:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1462:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1436:32:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$228_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 231,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 230,
														"name": "ExactInputParams",
														"nameLocations": [
															"1436:16:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 228,
														"src": "1436:16:3"
													},
													"referencedDeclaration": 228,
													"src": "1436:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$228_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:3"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1504:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1496:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:3"
									},
									"scope": 284,
									"src": "1416:99:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 254,
									"members": [
										{
											"constant": false,
											"id": 239,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1570:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 254,
											"src": "1562:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 238,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 241,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1595:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 254,
											"src": "1587:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 240,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 243,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1620:3:3",
											"nodeType": "VariableDeclaration",
											"scope": 254,
											"src": "1613:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 242,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 245,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1641:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 254,
											"src": "1633:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 244,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 247,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1668:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 254,
											"src": "1660:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 246,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 249,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1694:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 254,
											"src": "1686:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 248,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 251,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1721:15:3",
											"nodeType": "VariableDeclaration",
											"scope": 254,
											"src": "1713:23:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 250,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 253,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1754:17:3",
											"nodeType": "VariableDeclaration",
											"scope": 254,
											"src": "1746:25:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 252,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1528:23:3",
									"nodeType": "StructDefinition",
									"scope": 284,
									"src": "1521:257:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:3",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2048:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2099:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "2066:39:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$254_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 257,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 256,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2066:23:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 254,
														"src": "2066:23:3"
													},
													"referencedDeclaration": 254,
													"src": "2066:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$254_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:3"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2141:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "2133:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:3"
									},
									"scope": 284,
									"src": "2039:112:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 274,
									"members": [
										{
											"constant": false,
											"id": 265,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2198:4:3",
											"nodeType": "VariableDeclaration",
											"scope": 274,
											"src": "2192:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 264,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 267,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2220:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 274,
											"src": "2212:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 266,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 269,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2247:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 274,
											"src": "2239:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 268,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 271,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2273:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 274,
											"src": "2265:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 270,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 273,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2300:15:3",
											"nodeType": "VariableDeclaration",
											"scope": 274,
											"src": "2292:23:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 272,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2164:17:3",
									"nodeType": "StructDefinition",
									"scope": 284,
									"src": "2157:165:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:3",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 283,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2626:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2665:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "2638:33:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$274_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 277,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 276,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2638:17:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 274,
														"src": "2638:17:3"
													},
													"referencedDeclaration": 274,
													"src": "2638:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$274_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:3"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2707:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "2699:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:3"
									},
									"scope": 284,
									"src": "2617:100:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 285,
							"src": "280:2439:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2675:3"
				},
				"id": 3
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"TransferHelper": [
							455
						]
					},
					"id": 456,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 456,
							"sourceUnit": 78,
							"src": "71:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 455,
							"linearizedBaseContracts": [
								455
							],
							"name": "TransferHelper",
							"nameLocation": "137:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "690:229:4",
										"statements": [
											{
												"assignments": [
													300,
													302
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "706:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 335,
														"src": "701:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 299,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "701:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "728:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 335,
														"src": "715:17:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 301,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "715:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 307,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "782:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "789:12:4",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "782:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "802:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "782:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 310,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "812:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 311,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "818:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 312,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "822:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 305,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "759:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "763:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "759:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "759:69:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 303,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "748:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "754:4:4",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "748:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "748:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "700:129:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 317,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "847:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 318,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "859:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "864:6:4",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "859:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 320,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "874:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "859:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 324,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "890:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 326,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "897:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 325,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "897:4:4",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 327,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "896:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 322,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "879:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 323,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "883:6:4",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "879:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "879:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "859:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 330,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "858:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "847:57:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535446",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "906:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															},
															"value": "STF"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "839:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "839:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "839:73:4"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "158:398:4",
										"text": "@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "570:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "604:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "596:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "627:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "619:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "649:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "641:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "669:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "661:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:94:4"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "690:0:4"
									},
									"scope": 455,
									"src": "561:358:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "1314:206:4",
										"statements": [
											{
												"assignments": [
													347,
													349
												],
												"declarations": [
													{
														"constant": false,
														"id": 347,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1330:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "1325:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 346,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1325:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 349,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1352:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "1339:17:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 348,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1339:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 361,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 354,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "1394:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1401:8:4",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "1394:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1410:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1394:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 357,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "1420:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 358,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "1424:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 352,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1371:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1375:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1371:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1371:59:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 350,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "1360:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1366:4:4",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1360:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1324:107:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 363,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "1449:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 364,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 349,
																					"src": "1461:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1466:6:4",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1461:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 366,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1476:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1461:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 370,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 349,
																					"src": "1492:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 372,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1499:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 371,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1499:4:4",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 373,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1498:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 368,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1481:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 369,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1485:6:4",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1481:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1481:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1461:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 376,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1460:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1449:57:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5354",
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1508:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															},
															"value": "ST"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															}
														],
														"id": 362,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1441:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1441:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1441:72:4"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "925:281:4",
										"text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
									},
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1220:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1250:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1242:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1273:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1265:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1293:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1285:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:72:4"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1314:0:4"
									},
									"scope": 455,
									"src": "1211:309:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "1975:205:4",
										"statements": [
											{
												"assignments": [
													393,
													395
												],
												"declarations": [
													{
														"constant": false,
														"id": 393,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1991:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 427,
														"src": "1986:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 392,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1986:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 395,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "2013:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 427,
														"src": "2000:17:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 394,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2000:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 407,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 400,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "2055:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2062:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2055:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.approve(address,uint256) returns (bool)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2070:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2055:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 403,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "2080:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 404,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "2084:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 398,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2032:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2036:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2032:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2032:58:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 396,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "2021:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2027:4:4",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "2021:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2021:70:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1985:106:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 409,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "2109:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 410,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 395,
																					"src": "2121:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 411,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2126:6:4",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2121:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 412,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2136:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2121:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 416,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 395,
																					"src": "2152:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 418,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2159:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 417,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "2159:4:4",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 419,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2158:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 414,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2141:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 415,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2145:6:4",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "2141:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2141:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2121:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 422,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2120:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2109:57:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5341",
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2168:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															},
															"value": "SA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															}
														],
														"id": 408,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2101:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2101:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "2101:72:4"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "1526:342:4",
										"text": "@notice Approves the stipulated contract to spend the given allowance in the given token\n @dev Errors with 'SA' if transfer fails\n @param token The contract address of the token to be approved\n @param to The target of the approval\n @param value The amount of the given token the target will be allowed to spend"
									},
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1882:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "1903:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1934:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "1926:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1954:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "1946:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:72:4"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1975:0:4"
									},
									"scope": 455,
									"src": "1873:307:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "2431:104:4",
										"statements": [
											{
												"assignments": [
													437,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2447:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "2442:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 436,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2442:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 447,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2492:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "2482:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 442,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2486:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2482:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 438,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "2460:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2463:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2460:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 440,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "2475:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2460:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2441:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 449,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "2513:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535445",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2522:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															},
															"value": "STE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															}
														],
														"id": 448,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2505:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "2505:23:4"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "2186:179:4",
										"text": "@notice Transfers ETH to the recipient address\n @dev Fails with `STE`\n @param to The destination of the transfer\n @param value The value to be transferred"
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "2379:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2403:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "2395:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2415:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "2407:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:27:4"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2431:0:4"
									},
									"scope": 455,
									"src": "2370:165:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 456,
							"src": "129:2408:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2493:4"
				},
				"id": 4
			},
			"contracts/IUniswapPool.sol": {
				"ast": {
					"absolutePath": "contracts/IUniswapPool.sol",
					"exportedSymbols": {
						"IUniswapV3Factory": [
							469
						],
						"IUniswapV3Pool": [
							475
						]
					},
					"id": 476,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 457,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3Factory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 469,
							"linearizedBaseContracts": [
								469
							],
							"name": "IUniswapV3Factory",
							"nameLocation": "71:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "1698ee82",
									"id": 468,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nameLocation": "105:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "131:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "123:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "123:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "156:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "148:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "148:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "180:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "173:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 462,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "173:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "112:78:5"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "222:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "214:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "214:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "213:14:5"
									},
									"scope": 469,
									"src": "96:132:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 476,
							"src": "61:170:5",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 475,
							"linearizedBaseContracts": [
								475
							],
							"name": "IUniswapV3Pool",
							"nameLocation": "245:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "ddca3f43",
									"id": 474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "276:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "279:2:5"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "305:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 471,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "305:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "304:8:5"
									},
									"scope": 475,
									"src": "267:46:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 476,
							"src": "235:81:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:285:5"
				},
				"id": 5
			},
			"contracts/SwapUniswap.sol": {
				"ast": {
					"absolutePath": "contracts/SwapUniswap.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IQuoterV2": [
							184
						],
						"ISwapRouter": [
							284
						],
						"IUniswapV3Factory": [
							469
						],
						"IUniswapV3Pool": [
							475
						],
						"IUniswapV3SwapCallback": [
							91
						],
						"SwapUniswap": [
							917
						],
						"TransferHelper": [
							455
						]
					},
					"id": 918,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 477,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"id": 478,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "59:19:6"
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"id": 479,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 918,
							"sourceUnit": 456,
							"src": "82:70:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 480,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 918,
							"sourceUnit": 285,
							"src": "154:68:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol",
							"id": 481,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 918,
							"sourceUnit": 185,
							"src": "224:66:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IUniswapPool.sol",
							"file": "./IUniswapPool.sol",
							"id": 482,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 918,
							"sourceUnit": 476,
							"src": "292:28:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SwapUniswap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 917,
							"linearizedBaseContracts": [
								917
							],
							"name": "SwapUniswap",
							"nameLocation": "333:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 485,
									"mutability": "immutable",
									"name": "swapRouter",
									"nameLocation": "381:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "352:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISwapRouter_$284",
										"typeString": "contract ISwapRouter"
									},
									"typeName": {
										"id": 484,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 483,
											"name": "ISwapRouter",
											"nameLocations": [
												"352:11:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 284,
											"src": "352:11:6"
										},
										"referencedDeclaration": 284,
										"src": "352:11:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$284",
											"typeString": "contract ISwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e20dccb2",
									"id": 488,
									"mutability": "immutable",
									"name": "quoterV2",
									"nameLocation": "425:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "398:35:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IQuoterV2_$184",
										"typeString": "contract IQuoterV2"
									},
									"typeName": {
										"id": 487,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 486,
											"name": "IQuoterV2",
											"nameLocations": [
												"398:9:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 184,
											"src": "398:9:6"
										},
										"referencedDeclaration": 184,
										"src": "398:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IQuoterV2_$184",
											"typeString": "contract IQuoterV2"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5b549182",
									"id": 491,
									"mutability": "immutable",
									"name": "uniswapV3Factory",
									"nameLocation": "475:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "440:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV3Factory_$469",
										"typeString": "contract IUniswapV3Factory"
									},
									"typeName": {
										"id": 490,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 489,
											"name": "IUniswapV3Factory",
											"nameLocations": [
												"440:17:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 469,
											"src": "440:17:6"
										},
										"referencedDeclaration": 469,
										"src": "440:17:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3Factory_$469",
											"typeString": "contract IUniswapV3Factory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "230ed44a",
									"id": 498,
									"mutability": "mutable",
									"name": "feeTiers",
									"nameLocation": "516:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "500:45:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint24_$dyn_storage",
										"typeString": "uint24[]"
									},
									"typeName": {
										"baseType": {
											"id": 492,
											"name": "uint24",
											"nodeType": "ElementaryTypeName",
											"src": "500:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											}
										},
										"id": 493,
										"nodeType": "ArrayTypeName",
										"src": "500:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint24_$dyn_storage_ptr",
											"typeString": "uint24[]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "353030",
												"id": 494,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "528:3:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_500_by_1",
													"typeString": "int_const 500"
												},
												"value": "500"
											},
											{
												"hexValue": "33303030",
												"id": 495,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "533:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3000_by_1",
													"typeString": "int_const 3000"
												},
												"value": "3000"
											},
											{
												"hexValue": "3130303030",
												"id": 496,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "539:5:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10000_by_1",
													"typeString": "int_const 10000"
												},
												"value": "10000"
											}
										],
										"id": 497,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "527:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint16_$3_memory_ptr",
											"typeString": "uint16[3] memory"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "SwapUniswap.StableType",
									"id": 502,
									"members": [
										{
											"id": 499,
											"name": "DAI",
											"nameLocation": "581:3:6",
											"nodeType": "EnumValue",
											"src": "581:3:6"
										},
										{
											"id": 500,
											"name": "USDT",
											"nameLocation": "595:4:6",
											"nodeType": "EnumValue",
											"src": "595:4:6"
										},
										{
											"id": 501,
											"name": "USDC",
											"nameLocation": "610:4:6",
											"nodeType": "EnumValue",
											"src": "610:4:6"
										}
									],
									"name": "StableType",
									"nameLocation": "559:10:6",
									"nodeType": "EnumDefinition",
									"src": "554:67:6"
								},
								{
									"constant": false,
									"functionSelector": "e0bab4c4",
									"id": 504,
									"mutability": "immutable",
									"name": "DAI",
									"nameLocation": "654:3:6",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "629:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 503,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "629:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c54e44eb",
									"id": 506,
									"mutability": "immutable",
									"name": "USDT",
									"nameLocation": "689:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "664:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 505,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "664:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "89a30271",
									"id": 508,
									"mutability": "immutable",
									"name": "USDC",
									"nameLocation": "725:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "700:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 507,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "700:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ad5c4648",
									"id": 510,
									"mutability": "immutable",
									"name": "WETH",
									"nameLocation": "761:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "736:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 509,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "736:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"errorSelector": "69164ea2",
									"id": 512,
									"name": "NoAvalibleFee",
									"nameLocation": "780:13:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "793:2:6"
									},
									"src": "774:22:6"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "1028:211:6",
										"statements": [
											{
												"expression": {
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 532,
														"name": "swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "1039:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$284",
															"typeString": "contract ISwapRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 533,
														"name": "_swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "1052:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$284",
															"typeString": "contract ISwapRouter"
														}
													},
													"src": "1039:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$284",
														"typeString": "contract ISwapRouter"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "1039:24:6"
											},
											{
												"expression": {
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 536,
														"name": "quoterV2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "1074:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IQuoterV2_$184",
															"typeString": "contract IQuoterV2"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 537,
														"name": "_quoterv2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "1085:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IQuoterV2_$184",
															"typeString": "contract IQuoterV2"
														}
													},
													"src": "1074:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IQuoterV2_$184",
														"typeString": "contract IQuoterV2"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "1074:20:6"
											},
											{
												"expression": {
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 540,
														"name": "uniswapV3Factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "1105:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Factory_$469",
															"typeString": "contract IUniswapV3Factory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 541,
														"name": "_uniswapV3Factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "1124:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Factory_$469",
															"typeString": "contract IUniswapV3Factory"
														}
													},
													"src": "1105:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Factory_$469",
														"typeString": "contract IUniswapV3Factory"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "1105:36:6"
											},
											{
												"expression": {
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 544,
														"name": "DAI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "1152:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 545,
														"name": "_dai",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "1158:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1152:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "1152:10:6"
											},
											{
												"expression": {
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 548,
														"name": "USDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "1173:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 549,
														"name": "_usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "1180:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1173:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "1173:12:6"
											},
											{
												"expression": {
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 552,
														"name": "USDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "1196:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 553,
														"name": "_usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "1203:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1196:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "1196:12:6"
											},
											{
												"expression": {
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 556,
														"name": "WETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "1219:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 557,
														"name": "_weth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "1226:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1219:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "1219:12:6"
											}
										]
									},
									"id": 561,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "_swapRouter",
												"nameLocation": "838:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "826:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISwapRouter_$284",
													"typeString": "contract ISwapRouter"
												},
												"typeName": {
													"id": 514,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 513,
														"name": "ISwapRouter",
														"nameLocations": [
															"826:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 284,
														"src": "826:11:6"
													},
													"referencedDeclaration": 284,
													"src": "826:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$284",
														"typeString": "contract ISwapRouter"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "_quoterv2",
												"nameLocation": "870:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "860:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IQuoterV2_$184",
													"typeString": "contract IQuoterV2"
												},
												"typeName": {
													"id": 517,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 516,
														"name": "IQuoterV2",
														"nameLocations": [
															"860:9:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 184,
														"src": "860:9:6"
													},
													"referencedDeclaration": 184,
													"src": "860:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IQuoterV2_$184",
														"typeString": "contract IQuoterV2"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "_uniswapV3Factory",
												"nameLocation": "908:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "890:35:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV3Factory_$469",
													"typeString": "contract IUniswapV3Factory"
												},
												"typeName": {
													"id": 520,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 519,
														"name": "IUniswapV3Factory",
														"nameLocations": [
															"890:17:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 469,
														"src": "890:17:6"
													},
													"referencedDeclaration": 469,
													"src": "890:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Factory_$469",
														"typeString": "contract IUniswapV3Factory"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "_dai",
												"nameLocation": "944:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "936:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "_usdt",
												"nameLocation": "967:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "959:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "_usdc",
												"nameLocation": "991:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "983:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "983:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "_weth",
												"nameLocation": "1015:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "1007:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1007:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "815:212:6"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1028:0:6"
									},
									"scope": 917,
									"src": "804:435:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "1457:429:6",
										"statements": [
											{
												"assignments": [
													580
												],
												"declarations": [
													{
														"constant": false,
														"id": 580,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "1513:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 599,
														"src": "1468:51:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$124_memory_ptr",
															"typeString": "struct IQuoterV2.QuoteExactInputSingleParams"
														},
														"typeName": {
															"id": 579,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 578,
																"name": "IQuoterV2.QuoteExactInputSingleParams",
																"nameLocations": [
																	"1468:9:6",
																	"1478:27:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 124,
																"src": "1468:37:6"
															},
															"referencedDeclaration": 124,
															"src": "1468:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$124_storage_ptr",
																"typeString": "struct IQuoterV2.QuoteExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 589,
												"initialValue": {
													"arguments": [
														{
															"id": 583,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "1602:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "1638:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 585,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "1675:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 586,
															"name": "poolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "1707:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"hexValue": "30",
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 581,
															"name": "IQuoterV2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "1522:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IQuoterV2_$184_$",
																"typeString": "type(contract IQuoterV2)"
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1546:27:6",
														"memberName": "QuoteExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 124,
														"src": "1522:51:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_QuoteExactInputSingleParams_$124_storage_ptr_$",
															"typeString": "type(struct IQuoterV2.QuoteExactInputSingleParams storage pointer)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1593:7:6",
														"1628:8:6",
														"1665:8:6",
														"1702:3:6",
														"1733:17:6"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"amountIn",
														"fee",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "1522:247:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$124_memory_ptr",
														"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1468:301:6"
											},
											{
												"expression": {
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 590,
																"name": "amountOutMinimum",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "1783:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 591,
																"name": "sqrtPriceX96After",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 574,
																"src": "1801:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															null,
															null
														],
														"id": 592,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "1782:41:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$__$__$",
															"typeString": "tuple(uint256,uint160,,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 595,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "1871:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$124_memory_ptr",
																	"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$124_memory_ptr",
																	"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 593,
																"name": "quoterV2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 488,
																"src": "1826:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IQuoterV2_$184",
																	"typeString": "contract IQuoterV2"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1849:21:6",
															"memberName": "quoteExactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 139,
															"src": "1826:44:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_struct$_QuoteExactInputSingleParams_$124_memory_ptr_$returns$_t_uint256_$_t_uint160_$_t_uint32_$_t_uint256_$",
																"typeString": "function (struct IQuoterV2.QuoteExactInputSingleParams memory) external returns (uint256,uint160,uint32,uint256)"
															}
														},
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1826:52:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$_t_uint32_$_t_uint256_$",
															"typeString": "tuple(uint256,uint160,uint32,uint256)"
														}
													},
													"src": "1782:96:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "1782:96:6"
											}
										]
									},
									"functionSelector": "9a90f2ec",
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOutMinimum",
									"nameLocation": "1256:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "1294:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "1286:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "1320:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "1312:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1312:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1347:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "1339:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "poolFee",
												"nameLocation": "1373:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "1366:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 568,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1366:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1275:112:6"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "amountOutMinimum",
												"nameLocation": "1412:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "1404:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1404:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "sqrtPriceX96After",
												"nameLocation": "1438:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "1430:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 573,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1430:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1403:53:6"
									},
									"scope": 917,
									"src": "1247:639:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "2513:973:6",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "poolFee",
														"nameLocation": "2531:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 680,
														"src": "2524:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 612,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "2524:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "2560:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "stable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "2567:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "findMinimumFeeTier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "2541:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint24_$",
															"typeString": "function (address,address) view returns (uint24)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2541:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2524:50:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 622,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "2633:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 623,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2653:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2657:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2653:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 627,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2686:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapUniswap_$917",
																		"typeString": "contract SwapUniswap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapUniswap_$917",
																		"typeString": "contract SwapUniswap"
																	}
																],
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2678:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 625,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2678:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2678:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 629,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "2706:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 619,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "2587:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$455_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2602:16:6",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 336,
														"src": "2587:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2587:138:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "2587:138:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "2765:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 638,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "2780:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$284",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$284",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2772:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2772:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "2793:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 632,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "2738:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$455_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2753:11:6",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 428,
														"src": "2738:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2738:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "2738:64:6"
											},
											{
												"assignments": [
													644,
													646
												],
												"declarations": [
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "amountOutMinimum",
														"nameLocation": "2838:16:6",
														"nodeType": "VariableDeclaration",
														"scope": 680,
														"src": "2830:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 643,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2830:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 646,
														"mutability": "mutable",
														"name": "sqrtPriceX96After",
														"nameLocation": "2877:17:6",
														"nodeType": "VariableDeclaration",
														"scope": 680,
														"src": "2869:25:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 645,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "2869:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 653,
												"initialValue": {
													"arguments": [
														{
															"id": 648,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "2928:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "stable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "2935:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 650,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "2943:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 651,
															"name": "poolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "2953:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"id": 647,
														"name": "getAmountOutMinimum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "2908:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint24_$returns$_t_uint256_$_t_uint160_$",
															"typeString": "function (address,address,uint256,uint24) returns (uint256,uint160)"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2908:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$",
														"typeString": "tuple(uint256,uint160)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2815:146:6"
											},
											{
												"assignments": [
													658
												],
												"declarations": [
													{
														"constant": false,
														"id": 658,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "3016:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 680,
														"src": "2974:48:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$208_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 657,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 656,
																"name": "ISwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"2974:11:6",
																	"2986:22:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 208,
																"src": "2974:34:6"
															},
															"referencedDeclaration": 208,
															"src": "2974:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$208_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 672,
												"initialValue": {
													"arguments": [
														{
															"id": 661,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "3102:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 662,
															"name": "stable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "3136:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 663,
															"name": "poolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "3166:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"expression": {
																"id": 664,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3203:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3207:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3203:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 666,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3242:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3248:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3242:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 668,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "3286:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 669,
															"name": "amountOutMinimum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "3331:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 670,
															"name": "sqrtPriceX96After",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "3385:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"expression": {
															"id": 659,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "3025:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$284_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3051:22:6",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "3025:48:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$208_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"3093:7:6",
														"3126:8:6",
														"3161:3:6",
														"3192:9:6",
														"3232:8:6",
														"3276:8:6",
														"3313:16:6",
														"3366:17:6"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "3025:393:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$208_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2974:444:6"
											},
											{
												"expression": {
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 673,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "3431:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 676,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "3471:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$208_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$208_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 674,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "3443:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$284",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3454:16:6",
															"memberName": "exactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 217,
															"src": "3443:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$208_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3443:35:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3431:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "3431:47:6"
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "1894:463:6",
										"text": "@notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\n using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\n @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n @param amountIn The exact amount of DAI that will be swapped for WETH9.\n @return amountOut The amount of WETH9 received."
									},
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactInputSingle",
									"nameLocation": "2372:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2411:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "2403:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2403:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2438:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "2430:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2430:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "stable",
												"nameLocation": "2462:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "2454:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2392:83:6"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2502:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "2494:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2494:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2493:19:6"
									},
									"scope": 917,
									"src": "2363:1123:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "4153:707:6",
										"statements": [
											{
												"assignments": [
													694
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "poolFee",
														"nameLocation": "4171:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 754,
														"src": "4164:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 693,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "4164:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 699,
												"initialValue": {
													"arguments": [
														{
															"id": 696,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "4200:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 697,
															"name": "stable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "4207:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 695,
														"name": "findMinimumFeeTier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "4181:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint24_$",
															"typeString": "function (address,address) view returns (uint24)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4181:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4164:50:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 703,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "4273:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 704,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4293:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4297:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4293:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 708,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4326:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapUniswap_$917",
																		"typeString": "contract SwapUniswap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapUniswap_$917",
																		"typeString": "contract SwapUniswap"
																	}
																],
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4318:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 706,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4318:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4318:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 710,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "4346:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 700,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4227:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$455_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4242:16:6",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 336,
														"src": "4227:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4227:138:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "4227:138:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 716,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "4405:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 719,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "4420:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$284",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$284",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4412:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 717,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4412:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4412:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 721,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "4433:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 713,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4378:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$455_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4393:11:6",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 428,
														"src": "4378:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4378:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "4378:64:6"
											},
											{
												"assignments": [
													728
												],
												"declarations": [
													{
														"constant": false,
														"id": 728,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "4491:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 754,
														"src": "4455:42:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputParams_$228_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputParams"
														},
														"typeName": {
															"id": 727,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 726,
																"name": "ISwapRouter.ExactInputParams",
																"nameLocations": [
																	"4455:11:6",
																	"4467:16:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 228,
																"src": "4455:28:6"
															},
															"referencedDeclaration": 228,
															"src": "4455:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputParams_$228_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 746,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 733,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "4585:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 734,
																	"name": "poolFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 694,
																	"src": "4592:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																{
																	"id": 735,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "4601:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 736,
																	"name": "poolFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 694,
																	"src": "4607:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																{
																	"id": 737,
																	"name": "stable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 688,
																	"src": "4616:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 731,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4568:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4572:12:6",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "4568:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4568:55:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"expression": {
																"id": 739,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4653:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4657:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4653:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 741,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4692:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4698:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4692:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 743,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "4736:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4781:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 729,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "4500:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$284_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4526:16:6",
														"memberName": "ExactInputParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 228,
														"src": "4500:42:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputParams_$228_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputParams storage pointer)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"4562:4:6",
														"4642:9:6",
														"4682:8:6",
														"4726:8:6",
														"4763:16:6"
													],
													"names": [
														"path",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum"
													],
													"nodeType": "FunctionCall",
													"src": "4500:298:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$228_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4455:343:6"
											},
											{
												"expression": {
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 747,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "4811:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 750,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "4845:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputParams_$228_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputParams_$228_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputParams memory"
																}
															],
															"expression": {
																"id": 748,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "4823:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$284",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4834:10:6",
															"memberName": "exactInput",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 237,
															"src": "4823:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputParams_$228_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactInputParams memory) payable external returns (uint256)"
															}
														},
														"id": 751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4823:29:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4811:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "4811:41:6"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "3494:501:6",
										"text": "@notice swapInputMultiplePools swaps a fixed amount of DAI for a maximum possible amount of WETH9 through an intermediary pool.\n For this example, we will swap DAI to USDC, then USDC to WETH9 to achieve our desired output.\n @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n @param amountIn The amount of DAI to be swapped.\n @return amountOut The amount of WETH9 received after the swap."
									},
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactInputMultihop",
									"nameLocation": "4010:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "4051:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "4043:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4043:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4078:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "4070:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4070:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "stable",
												"nameLocation": "4102:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "4094:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4094:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4032:83:6"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "4142:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "4134:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4134:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4133:19:6"
									},
									"scope": 917,
									"src": "4001:859:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "5014:624:6",
										"statements": [
											{
												"assignments": [
													769
												],
												"declarations": [
													{
														"constant": false,
														"id": 769,
														"mutability": "mutable",
														"name": "availableFees",
														"nameLocation": "5041:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 852,
														"src": "5025:29:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint24_$dyn_memory_ptr",
															"typeString": "uint24[]"
														},
														"typeName": {
															"baseType": {
																"id": 767,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "5025:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															},
															"id": 768,
															"nodeType": "ArrayTypeName",
															"src": "5025:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint24_$dyn_storage_ptr",
																"typeString": "uint24[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 776,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 773,
																"name": "feeTiers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 498,
																"src": "5070:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint24_$dyn_storage",
																	"typeString": "uint24[] storage ref"
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5079:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5070:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "5057:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint24_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint24[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 770,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "5061:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															},
															"id": 771,
															"nodeType": "ArrayTypeName",
															"src": "5061:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint24_$dyn_storage_ptr",
																"typeString": "uint24[]"
															}
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5057:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint24_$dyn_memory_ptr",
														"typeString": "uint24[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5025:61:6"
											},
											{
												"assignments": [
													778
												],
												"declarations": [
													{
														"constant": false,
														"id": 778,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "5105:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 852,
														"src": "5097:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 777,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5097:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 780,
												"initialValue": {
													"hexValue": "30",
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5113:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5097:17:6"
											},
											{
												"body": {
													"id": 822,
													"nodeType": "Block",
													"src": "5173:294:6",
													"statements": [
														{
															"assignments": [
																793
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 793,
																	"mutability": "mutable",
																	"name": "pool",
																	"nameLocation": "5196:4:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 822,
																	"src": "5188:12:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 792,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5188:7:6",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 802,
															"initialValue": {
																"arguments": [
																	{
																		"id": 796,
																		"name": "tokenA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 757,
																		"src": "5246:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 797,
																		"name": "tokenB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "5271:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 798,
																			"name": "feeTiers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 498,
																			"src": "5296:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint24_$dyn_storage",
																				"typeString": "uint24[] storage ref"
																			}
																		},
																		"id": 800,
																		"indexExpression": {
																			"id": 799,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "5305:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5296:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"expression": {
																		"id": 794,
																		"name": "uniswapV3Factory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 491,
																		"src": "5203:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV3Factory_$469",
																			"typeString": "contract IUniswapV3Factory"
																		}
																	},
																	"id": 795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5220:7:6",
																	"memberName": "getPool",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 468,
																	"src": "5203:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
																		"typeString": "function (address,address,uint24) view external returns (address)"
																	}
																},
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5203:119:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5188:134:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 803,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "5341:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5357:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5349:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 804,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5349:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5349:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5341:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 821,
															"nodeType": "IfStatement",
															"src": "5337:119:6",
															"trueBody": {
																"id": 820,
																"nodeType": "Block",
																"src": "5361:95:6",
																"statements": [
																	{
																		"expression": {
																			"id": 815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 809,
																					"name": "availableFees",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 769,
																					"src": "5380:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint24_$dyn_memory_ptr",
																						"typeString": "uint24[] memory"
																					}
																				},
																				"id": 811,
																				"indexExpression": {
																					"id": 810,
																					"name": "count",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 778,
																					"src": "5394:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5380:20:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint24",
																					"typeString": "uint24"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 812,
																					"name": "feeTiers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 498,
																					"src": "5403:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint24_$dyn_storage",
																						"typeString": "uint24[] storage ref"
																					}
																				},
																				"id": 814,
																				"indexExpression": {
																					"id": 813,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 782,
																					"src": "5412:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5403:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint24",
																					"typeString": "uint24"
																				}
																			},
																			"src": "5380:34:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			}
																		},
																		"id": 816,
																		"nodeType": "ExpressionStatement",
																		"src": "5380:34:6"
																	},
																	{
																		"expression": {
																			"id": 818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "5433:7:6",
																			"subExpression": {
																				"id": 817,
																				"name": "count",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 778,
																				"src": "5433:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 819,
																		"nodeType": "ExpressionStatement",
																		"src": "5433:7:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 785,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "5147:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 786,
															"name": "feeTiers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "5151:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint24_$dyn_storage",
																"typeString": "uint24[] storage ref"
															}
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5160:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5151:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5147:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 823,
												"initializationExpression": {
													"assignments": [
														782
													],
													"declarations": [
														{
															"constant": false,
															"id": 782,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5140:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 823,
															"src": "5132:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 781,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5132:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 784,
													"initialValue": {
														"hexValue": "30",
														"id": 783,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5144:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5132:13:6"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5168:3:6",
														"subExpression": {
															"id": 789,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "5168:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 791,
													"nodeType": "ExpressionStatement",
													"src": "5168:3:6"
												},
												"nodeType": "ForStatement",
												"src": "5127:340:6"
											},
											{
												"expression": {
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 824,
														"name": "availableFeeTiers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "5479:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint24_$dyn_memory_ptr",
															"typeString": "uint24[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 828,
																"name": "count",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 778,
																"src": "5512:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "5499:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint24_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint24[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 825,
																	"name": "uint24",
																	"nodeType": "ElementaryTypeName",
																	"src": "5503:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																"id": 826,
																"nodeType": "ArrayTypeName",
																"src": "5503:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint24_$dyn_storage_ptr",
																	"typeString": "uint24[]"
																}
															}
														},
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5499:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint24_$dyn_memory_ptr",
															"typeString": "uint24[] memory"
														}
													},
													"src": "5479:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint24_$dyn_memory_ptr",
														"typeString": "uint24[] memory"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "5479:39:6"
											},
											{
												"body": {
													"id": 850,
													"nodeType": "Block",
													"src": "5565:66:6",
													"statements": [
														{
															"expression": {
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 842,
																		"name": "availableFeeTiers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 763,
																		"src": "5580:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint24_$dyn_memory_ptr",
																			"typeString": "uint24[] memory"
																		}
																	},
																	"id": 844,
																	"indexExpression": {
																		"id": 843,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 833,
																		"src": "5598:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5580:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 845,
																		"name": "availableFees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 769,
																		"src": "5603:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint24_$dyn_memory_ptr",
																			"typeString": "uint24[] memory"
																		}
																	},
																	"id": 847,
																	"indexExpression": {
																		"id": 846,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 833,
																		"src": "5617:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5603:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																"src": "5580:39:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															},
															"id": 849,
															"nodeType": "ExpressionStatement",
															"src": "5580:39:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 836,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "5549:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 837,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "5553:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5549:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"initializationExpression": {
													"assignments": [
														833
													],
													"declarations": [
														{
															"constant": false,
															"id": 833,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5542:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 851,
															"src": "5534:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 832,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5534:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 835,
													"initialValue": {
														"hexValue": "30",
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5546:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5534:13:6"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5560:3:6",
														"subExpression": {
															"id": 839,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "5560:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 841,
													"nodeType": "ExpressionStatement",
													"src": "5560:3:6"
												},
												"nodeType": "ForStatement",
												"src": "5529:102:6"
											}
										]
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findAvailableFeeTiers",
									"nameLocation": "4877:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "4917:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "4909:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "4942:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "4934:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4934:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4898:57:6"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "availableFeeTiers",
												"nameLocation": "4995:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "4979:33:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint24_$dyn_memory_ptr",
													"typeString": "uint24[]"
												},
												"typeName": {
													"baseType": {
														"id": 761,
														"name": "uint24",
														"nodeType": "ElementaryTypeName",
														"src": "4979:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"id": 762,
													"nodeType": "ArrayTypeName",
													"src": "4979:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint24_$dyn_storage_ptr",
														"typeString": "uint24[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:35:6"
									},
									"scope": 917,
									"src": "4868:770:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "5762:490:6",
										"statements": [
											{
												"assignments": [
													866
												],
												"declarations": [
													{
														"constant": false,
														"id": 866,
														"mutability": "mutable",
														"name": "availableFeeTiers",
														"nameLocation": "5789:17:6",
														"nodeType": "VariableDeclaration",
														"scope": 915,
														"src": "5773:33:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint24_$dyn_memory_ptr",
															"typeString": "uint24[]"
														},
														"typeName": {
															"baseType": {
																"id": 864,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "5773:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															},
															"id": 865,
															"nodeType": "ArrayTypeName",
															"src": "5773:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint24_$dyn_storage_ptr",
																"typeString": "uint24[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 871,
												"initialValue": {
													"arguments": [
														{
															"id": 868,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "5845:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 869,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "5866:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 867,
														"name": "findAvailableFeeTiers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "5809:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_array$_t_uint24_$dyn_memory_ptr_$",
															"typeString": "function (address,address) view returns (uint24[] memory)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:74:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint24_$dyn_memory_ptr",
														"typeString": "uint24[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5773:110:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 872,
															"name": "availableFeeTiers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "5900:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint24_$dyn_memory_ptr",
																"typeString": "uint24[] memory"
															}
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5918:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5900:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5928:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5900:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 880,
												"nodeType": "IfStatement",
												"src": "5896:84:6",
												"trueBody": {
													"id": 879,
													"nodeType": "Block",
													"src": "5931:49:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 876,
																	"name": "NoAvalibleFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "5953:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5953:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 878,
															"nodeType": "RevertStatement",
															"src": "5946:22:6"
														}
													]
												}
											},
											{
												"assignments": [
													882
												],
												"declarations": [
													{
														"constant": false,
														"id": 882,
														"mutability": "mutable",
														"name": "minFee",
														"nameLocation": "5999:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 915,
														"src": "5992:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 881,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "5992:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 886,
												"initialValue": {
													"baseExpression": {
														"id": 883,
														"name": "availableFeeTiers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "6008:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint24_$dyn_memory_ptr",
															"typeString": "uint24[] memory"
														}
													},
													"id": 885,
													"indexExpression": {
														"hexValue": "30",
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6026:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6008:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5992:36:6"
											},
											{
												"body": {
													"id": 911,
													"nodeType": "Block",
													"src": "6094:125:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 898,
																		"name": "availableFeeTiers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 866,
																		"src": "6113:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint24_$dyn_memory_ptr",
																			"typeString": "uint24[] memory"
																		}
																	},
																	"id": 900,
																	"indexExpression": {
																		"id": 899,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 888,
																		"src": "6131:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6113:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 901,
																	"name": "minFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "6136:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																"src": "6113:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 910,
															"nodeType": "IfStatement",
															"src": "6109:99:6",
															"trueBody": {
																"id": 909,
																"nodeType": "Block",
																"src": "6144:64:6",
																"statements": [
																	{
																		"expression": {
																			"id": 907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 903,
																				"name": "minFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 882,
																				"src": "6163:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint24",
																					"typeString": "uint24"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 904,
																					"name": "availableFeeTiers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 866,
																					"src": "6172:17:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint24_$dyn_memory_ptr",
																						"typeString": "uint24[] memory"
																					}
																				},
																				"id": 906,
																				"indexExpression": {
																					"id": 905,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 888,
																					"src": "6190:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6172:20:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint24",
																					"typeString": "uint24"
																				}
																			},
																			"src": "6163:29:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			}
																		},
																		"id": 908,
																		"nodeType": "ExpressionStatement",
																		"src": "6163:29:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 891,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "6059:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 892,
															"name": "availableFeeTiers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "6063:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint24_$dyn_memory_ptr",
																"typeString": "uint24[] memory"
															}
														},
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6081:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6063:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6059:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 912,
												"initializationExpression": {
													"assignments": [
														888
													],
													"declarations": [
														{
															"constant": false,
															"id": 888,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6052:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 912,
															"src": "6044:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 887,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6044:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 890,
													"initialValue": {
														"hexValue": "31",
														"id": 889,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6056:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6044:13:6"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6089:3:6",
														"subExpression": {
															"id": 895,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "6089:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 897,
													"nodeType": "ExpressionStatement",
													"src": "6089:3:6"
												},
												"nodeType": "ForStatement",
												"src": "6039:180:6"
											},
											{
												"expression": {
													"id": 913,
													"name": "minFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 882,
													"src": "6238:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"functionReturnParameters": 861,
												"id": 914,
												"nodeType": "Return",
												"src": "6231:13:6"
											}
										]
									},
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findMinimumFeeTier",
									"nameLocation": "5655:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "5692:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "5684:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5684:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "5717:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "5709:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5673:57:6"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "5754:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 859,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "5754:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5753:8:6"
									},
									"scope": 917,
									"src": "5646:606:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 918,
							"src": "324:5931:6",
							"usedErrors": [
								512
							],
							"usedEvents": []
						}
					],
					"src": "33:6224:6"
				},
				"id": 6
			}
		}
	}
}