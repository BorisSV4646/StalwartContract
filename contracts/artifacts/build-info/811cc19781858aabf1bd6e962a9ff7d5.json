{
	"id": "811cc19781858aabf1bd6e962a9ff7d5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SwapUniswap.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.26;\r\n\r\nimport \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\";\r\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\r\n\r\ncontract SwapUniswap {\r\n    ISwapRouter public immutable swapRouter;\r\n\r\n    enum StableType {\r\n        DAI,\r\n        USDT,\r\n        USDC\r\n    }\r\n\r\n    address public immutable DAI;\r\n    address public immutable USDT;\r\n    address public immutable USDC;\r\n    address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n\r\n    uint24 public constant poolFee = 3000;\r\n\r\n    constructor(\r\n        ISwapRouter _swapRouter,\r\n        address _dai,\r\n        address _usdt,\r\n        address _usdc\r\n    ) {\r\n        swapRouter = _swapRouter;\r\n        DAI = _dai;\r\n        USDT = _usdt;\r\n        USDC = _usdc;\r\n    }\r\n\r\n    /// @notice swapInputMultiplePools swaps a fixed amount of DAI for a maximum possible amount of WETH9 through an intermediary pool.\r\n    /// For this example, we will swap DAI to USDC, then USDC to WETH9 to achieve our desired output.\r\n    /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\r\n    /// @param amountIn The amount of DAI to be swapped.\r\n    /// @return amountOut The amount of WETH9 received after the swap.\r\n    function swapExactInputMultihop(\r\n        uint256 amountIn\r\n    ) external returns (uint256 amountOut) {\r\n        TransferHelper.safeTransferFrom(\r\n            DAI,\r\n            msg.sender,\r\n            address(this),\r\n            amountIn\r\n        );\r\n\r\n        TransferHelper.safeApprove(DAI, address(swapRouter), amountIn);\r\n\r\n        ISwapRouter.ExactInputParams memory params = ISwapRouter\r\n            .ExactInputParams({\r\n                path: abi.encodePacked(DAI, poolFee, USDC, poolFee, WETH9),\r\n                recipient: msg.sender,\r\n                deadline: block.timestamp,\r\n                amountIn: amountIn,\r\n                amountOutMinimum: 0\r\n            });\r\n\r\n        amountOut = swapRouter.exactInput(params);\r\n    }\r\n\r\n    /// @notice swapExactOutputMultihop swaps a minimum possible amount of DAI for a fixed amount of WETH through an intermediary pool.\r\n    /// For this example, we want to swap DAI for WETH9 through a USDC pool but we specify the desired amountOut of WETH9. Notice how the path encoding is slightly different in for exact output swaps.\r\n    /// @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\r\n    /// the calling address will need to approve for a slightly higher amount, anticipating some variance.\r\n    /// @param amountOut The desired amount of WETH9.\r\n    /// @param amountInMaximum The maximum amount of DAI willing to be swapped for the specified amountOut of WETH9.\r\n    /// @return amountIn The amountIn of DAI actually spent to receive the desired amountOut.\r\n    function swapExactOutputMultihop(\r\n        uint256 amountOut,\r\n        uint256 amountInMaximum\r\n    ) external returns (uint256 amountIn) {\r\n        TransferHelper.safeTransferFrom(\r\n            DAI,\r\n            msg.sender,\r\n            address(this),\r\n            amountInMaximum\r\n        );\r\n        TransferHelper.safeApprove(DAI, address(swapRouter), amountInMaximum);\r\n\r\n        ISwapRouter.ExactOutputParams memory params = ISwapRouter\r\n            .ExactOutputParams({\r\n                path: abi.encodePacked(WETH9, poolFee, USDC, poolFee, DAI),\r\n                recipient: msg.sender,\r\n                deadline: block.timestamp,\r\n                amountOut: amountOut,\r\n                amountInMaximum: amountInMaximum\r\n            });\r\n\r\n        amountIn = swapRouter.exactOutput(params);\r\n\r\n        if (amountIn < amountInMaximum) {\r\n            TransferHelper.safeApprove(DAI, address(swapRouter), 0);\r\n            TransferHelper.safeTransferFrom(\r\n                DAI,\r\n                address(this),\r\n                msg.sender,\r\n                amountInMaximum - amountIn\r\n            );\r\n        }\r\n    }\r\n\r\n    /// @notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\r\n    /// using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\r\n    /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\r\n    /// @param amountIn The exact amount of DAI that will be swapped for WETH9.\r\n    /// @return amountOut The amount of WETH9 received.\r\n    function swapExactInputSingle(\r\n        uint256 amountIn\r\n    ) external returns (uint256 amountOut) {\r\n        // msg.sender must approve this contract\r\n\r\n        // Transfer the specified amount of DAI to this contract.\r\n        TransferHelper.safeTransferFrom(\r\n            DAI,\r\n            msg.sender,\r\n            address(this),\r\n            amountIn\r\n        );\r\n\r\n        // Approve the router to spend DAI.\r\n        TransferHelper.safeApprove(DAI, address(swapRouter), amountIn);\r\n\r\n        // Naively set amountOutMinimum to 0. In production, use an oracle or other data source to choose a safer value for amountOutMinimum.\r\n        // We also set the sqrtPriceLimitx96 to be 0 to ensure we swap our exact input amount.\r\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter\r\n            .ExactInputSingleParams({\r\n                tokenIn: DAI,\r\n                tokenOut: WETH9,\r\n                fee: poolFee,\r\n                recipient: msg.sender,\r\n                deadline: block.timestamp,\r\n                amountIn: amountIn,\r\n                amountOutMinimum: 0,\r\n                sqrtPriceLimitX96: 0\r\n            });\r\n\r\n        // The call to `exactInputSingle` executes the swap.\r\n        amountOut = swapRouter.exactInputSingle(params);\r\n    }\r\n\r\n    /// @notice swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\r\n    /// @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\r\n    /// the calling address will need to approve for a slightly higher amount, anticipating some variance.\r\n    /// @param amountOut The exact amount of WETH9 to receive from the swap.\r\n    /// @param amountInMaximum The amount of DAI we are willing to spend to receive the specified amount of WETH9.\r\n    /// @return amountIn The amount of DAI actually spent in the swap.\r\n    function swapExactOutputSingle(\r\n        uint256 amountOut,\r\n        uint256 amountInMaximum\r\n    ) external returns (uint256 amountIn) {\r\n        // Transfer the specified amount of DAI to this contract.\r\n        TransferHelper.safeTransferFrom(\r\n            DAI,\r\n            msg.sender,\r\n            address(this),\r\n            amountInMaximum\r\n        );\r\n\r\n        // Approve the router to spend the specifed `amountInMaximum` of DAI.\r\n        // In production, you should choose the maximum amount to spend based on oracles or other data sources to acheive a better swap.\r\n        TransferHelper.safeApprove(DAI, address(swapRouter), amountInMaximum);\r\n\r\n        ISwapRouter.ExactOutputSingleParams memory params = ISwapRouter\r\n            .ExactOutputSingleParams({\r\n                tokenIn: DAI,\r\n                tokenOut: WETH9,\r\n                fee: poolFee,\r\n                recipient: msg.sender,\r\n                deadline: block.timestamp,\r\n                amountOut: amountOut,\r\n                amountInMaximum: amountInMaximum,\r\n                sqrtPriceLimitX96: 0\r\n            });\r\n\r\n        // Executes the swap returning the amountIn needed to spend to receive the desired amountOut.\r\n        amountIn = swapRouter.exactOutputSingle(params);\r\n\r\n        // For exact output swaps, the amountInMaximum may not have all been spent.\r\n        // If the actual amount spent (amountIn) is less than the specified maximum amount, we must refund the msg.sender and approve the swapRouter to spend 0.\r\n        if (amountIn < amountInMaximum) {\r\n            TransferHelper.safeApprove(DAI, address(swapRouter), 0);\r\n            TransferHelper.safeTransfer(\r\n                DAI,\r\n                msg.sender,\r\n                amountInMaximum - amountIn\r\n            );\r\n        }\r\n    }\r\n}\r\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\nlibrary TransferHelper {\n    /// @notice Transfers tokens from the targeted address to the given destination\n    /// @notice Errors with 'STF' if transfer fails\n    /// @param token The contract address of the token to be transferred\n    /// @param from The originating address from which the tokens will be transferred\n    /// @param to The destination address of the transfer\n    /// @param value The amount to be transferred\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\n    }\n\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Errors with ST if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\n    }\n\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\n    /// @dev Errors with 'SA' if transfer fails\n    /// @param token The contract address of the token to be approved\n    /// @param to The target of the approval\n    /// @param value The amount of the given token the target will be allowed to spend\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\n    }\n\n    /// @notice Transfers ETH to the recipient address\n    /// @dev Fails with `STE`\n    /// @param to The destination of the transfer\n    /// @param value The value to be transferred\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'STE');\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cafe8c5c3d58302551867c1bf162f0055aec99ac03bebaa27e50a78387ea9b9664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cafe8c5c3d58302551867c1bf162f0055aec99ac03bebaa27e50a78387ea9b9664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA INVALID DUP13 TLOAD RETURNDATASIZE PC ADDRESS 0x25 MLOAD DUP7 PUSH29 0x1BF162F0055AEC99AC03BEBAA27E50A78387EA9B9664736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "129:2408:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cafe8c5c3d58302551867c1bf162f0055aec99ac03bebaa27e50a78387ea9b9664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA INVALID DUP13 TLOAD RETURNDATASIZE PC ADDRESS 0x25 MLOAD DUP7 PUSH29 0x1BF162F0055AEC99AC03BEBAA27E50A78387EA9B9664736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "129:2408:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cafe8c5c3d58302551867c1bf162f0055aec99ac03bebaa27e50a78387ea9b9664736f6c634300081a0033",
									".code": [
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/SwapUniswap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SwapUniswap.sol": {
				"SwapUniswap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "_swapRouter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_dai",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdt",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdc",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "DAI",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDC",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDT",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolFee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "swapExactInputMultihop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "swapExactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMaximum",
									"type": "uint256"
								}
							],
							"name": "swapExactOutputMultihop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMaximum",
									"type": "uint256"
								}
							],
							"name": "swapExactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"swapExactInputMultihop(uint256)": {
								"details": "The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.",
								"params": {
									"amountIn": "The amount of DAI to be swapped."
								},
								"returns": {
									"amountOut": "The amount of WETH9 received after the swap."
								}
							},
							"swapExactInputSingle(uint256)": {
								"details": "The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.",
								"params": {
									"amountIn": "The exact amount of DAI that will be swapped for WETH9."
								},
								"returns": {
									"amountOut": "The amount of WETH9 received."
								}
							},
							"swapExactOutputMultihop(uint256,uint256)": {
								"details": "The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable, the calling address will need to approve for a slightly higher amount, anticipating some variance.",
								"params": {
									"amountInMaximum": "The maximum amount of DAI willing to be swapped for the specified amountOut of WETH9.",
									"amountOut": "The desired amount of WETH9."
								},
								"returns": {
									"amountIn": "The amountIn of DAI actually spent to receive the desired amountOut."
								}
							},
							"swapExactOutputSingle(uint256,uint256)": {
								"details": "The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable, the calling address will need to approve for a slightly higher amount, anticipating some variance.",
								"params": {
									"amountInMaximum": "The amount of DAI we are willing to spend to receive the specified amount of WETH9.",
									"amountOut": "The exact amount of WETH9 to receive from the swap."
								},
								"returns": {
									"amountIn": "The amount of DAI actually spent in the swap."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SwapUniswap.sol\":205:8259  contract SwapUniswap {... */\n  mstore(0x40, 0x0100)\n    /* \"contracts/SwapUniswap.sol\":592:826  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/SwapUniswap.sol\":740:751  _swapRouter */\n  dup4\n    /* \"contracts/SwapUniswap.sol\":727:751  swapRouter = _swapRouter */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/SwapUniswap.sol\":768:772  _dai */\n  dup3\n    /* \"contracts/SwapUniswap.sol\":762:772  DAI = _dai */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/SwapUniswap.sol\":790:795  _usdt */\n  dup2\n    /* \"contracts/SwapUniswap.sol\":783:795  USDT = _usdt */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/SwapUniswap.sol\":813:818  _usdc */\n  dup1\n    /* \"contracts/SwapUniswap.sol\":806:818  USDC = _usdc */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xe0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/SwapUniswap.sol\":592:826  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/SwapUniswap.sol\":205:8259  contract SwapUniswap {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_23\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:683   */\ntag_12:\n    /* \"#utility.yul\":624:631   */\n  0x00\n    /* \"#utility.yul\":653:677   */\n  tag_25\n    /* \"#utility.yul\":671:676   */\n  dup3\n    /* \"#utility.yul\":653:677   */\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":642:677   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:683   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":689:849   */\ntag_13:\n    /* \"#utility.yul\":781:824   */\n  tag_27\n    /* \"#utility.yul\":818:823   */\n  dup2\n    /* \"#utility.yul\":781:824   */\n  tag_12\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":774:779   */\n  dup2\n    /* \"#utility.yul\":771:825   */\n  eq\n    /* \"#utility.yul\":761:843   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":839:840   */\n  0x00\n    /* \"#utility.yul\":836:837   */\n  dup1\n    /* \"#utility.yul\":829:841   */\n  revert\n    /* \"#utility.yul\":761:843   */\ntag_28:\n    /* \"#utility.yul\":689:849   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":855:1036   */\ntag_14:\n    /* \"#utility.yul\":931:936   */\n  0x00\n    /* \"#utility.yul\":962:968   */\n  dup2\n    /* \"#utility.yul\":956:969   */\n  mload\n    /* \"#utility.yul\":947:969   */\n  swap1\n  pop\n    /* \"#utility.yul\":978:1030   */\n  tag_30\n    /* \"#utility.yul\":1024:1029   */\n  dup2\n    /* \"#utility.yul\":978:1030   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":855:1036   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1042:1164   */\ntag_15:\n    /* \"#utility.yul\":1115:1139   */\n  tag_32\n    /* \"#utility.yul\":1133:1138   */\n  dup2\n    /* \"#utility.yul\":1115:1139   */\n  tag_11\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1108:1113   */\n  dup2\n    /* \"#utility.yul\":1105:1140   */\n  eq\n    /* \"#utility.yul\":1095:1158   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1154:1155   */\n  0x00\n    /* \"#utility.yul\":1151:1152   */\n  dup1\n    /* \"#utility.yul\":1144:1156   */\n  revert\n    /* \"#utility.yul\":1095:1158   */\ntag_33:\n    /* \"#utility.yul\":1042:1164   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1170:1313   */\ntag_16:\n    /* \"#utility.yul\":1227:1232   */\n  0x00\n    /* \"#utility.yul\":1258:1264   */\n  dup2\n    /* \"#utility.yul\":1252:1265   */\n  mload\n    /* \"#utility.yul\":1243:1265   */\n  swap1\n  pop\n    /* \"#utility.yul\":1274:1307   */\n  tag_35\n    /* \"#utility.yul\":1301:1306   */\n  dup2\n    /* \"#utility.yul\":1274:1307   */\n  tag_15\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1170:1313   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1319:2177   */\ntag_3:\n    /* \"#utility.yul\":1435:1441   */\n  0x00\n    /* \"#utility.yul\":1443:1449   */\n  dup1\n    /* \"#utility.yul\":1451:1457   */\n  0x00\n    /* \"#utility.yul\":1459:1465   */\n  dup1\n    /* \"#utility.yul\":1508:1511   */\n  0x80\n    /* \"#utility.yul\":1496:1505   */\n  dup6\n    /* \"#utility.yul\":1487:1494   */\n  dup8\n    /* \"#utility.yul\":1483:1506   */\n  sub\n    /* \"#utility.yul\":1479:1512   */\n  slt\n    /* \"#utility.yul\":1476:1596   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1515:1594   */\n  tag_38\n  tag_8\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1476:1596   */\ntag_37:\n    /* \"#utility.yul\":1635:1636   */\n  0x00\n    /* \"#utility.yul\":1660:1743   */\n  tag_39\n    /* \"#utility.yul\":1735:1742   */\n  dup8\n    /* \"#utility.yul\":1726:1732   */\n  dup3\n    /* \"#utility.yul\":1715:1724   */\n  dup9\n    /* \"#utility.yul\":1711:1733   */\n  add\n    /* \"#utility.yul\":1660:1743   */\n  tag_14\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1650:1743   */\n  swap5\n  pop\n    /* \"#utility.yul\":1606:1753   */\n  pop\n    /* \"#utility.yul\":1792:1794   */\n  0x20\n    /* \"#utility.yul\":1818:1882   */\n  tag_40\n    /* \"#utility.yul\":1874:1881   */\n  dup8\n    /* \"#utility.yul\":1865:1871   */\n  dup3\n    /* \"#utility.yul\":1854:1863   */\n  dup9\n    /* \"#utility.yul\":1850:1872   */\n  add\n    /* \"#utility.yul\":1818:1882   */\n  tag_16\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1808:1882   */\n  swap4\n  pop\n    /* \"#utility.yul\":1763:1892   */\n  pop\n    /* \"#utility.yul\":1931:1933   */\n  0x40\n    /* \"#utility.yul\":1957:2021   */\n  tag_41\n    /* \"#utility.yul\":2013:2020   */\n  dup8\n    /* \"#utility.yul\":2004:2010   */\n  dup3\n    /* \"#utility.yul\":1993:2002   */\n  dup9\n    /* \"#utility.yul\":1989:2011   */\n  add\n    /* \"#utility.yul\":1957:2021   */\n  tag_16\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1947:2021   */\n  swap3\n  pop\n    /* \"#utility.yul\":1902:2031   */\n  pop\n    /* \"#utility.yul\":2070:2072   */\n  0x60\n    /* \"#utility.yul\":2096:2160   */\n  tag_42\n    /* \"#utility.yul\":2152:2159   */\n  dup8\n    /* \"#utility.yul\":2143:2149   */\n  dup3\n    /* \"#utility.yul\":2132:2141   */\n  dup9\n    /* \"#utility.yul\":2128:2150   */\n  add\n    /* \"#utility.yul\":2096:2160   */\n  tag_16\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":2086:2160   */\n  swap2\n  pop\n    /* \"#utility.yul\":2041:2170   */\n  pop\n    /* \"#utility.yul\":1319:2177   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"contracts/SwapUniswap.sol\":205:8259  contract SwapUniswap {... */\ntag_6:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x571dd8aeb083ba31171345d7ed78dcdb2e0ef1ded5d63247b288b600c1eb6c39\")\n  0x00\n  assignImmutable(\"0x278a4539603a9bc8a72d7a368fe14ebf88ae5f0870def96c5eca03adb0b084ba\")\n  0x00\n  assignImmutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n  0x00\n  assignImmutable(\"0x747491254fc29a61c3f0f8ca603d468b83f8d0af60d3a86e8b935f39643493bc\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/SwapUniswap.sol\":205:8259  contract SwapUniswap {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc31c9c07\n      gt\n      tag_13\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xc4b69a18\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc54e44eb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe0bab4c4\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xedd83557\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x089fe6aa\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3b85cf6a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4aa4a4fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x73bd43ad\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x89a30271\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SwapUniswap.sol\":546:583  uint24 public constant poolFee = 3000 */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":2952:4071  function swapExactOutputMultihop(... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":463:537  address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":4548:5827  function swapExactInputSingle(... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":427:456  address public immutable USDC */\n    tag_7:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":233:272  ISwapRouter public immutable swapRouter */\n    tag_8:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":6463:8256  function swapExactOutputSingle(... */\n    tag_9:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":391:420  address public immutable USDT */\n    tag_10:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":356:384  address public immutable DAI */\n    tag_11:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":1341:2081  function swapExactInputMultihop(... */\n    tag_12:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapUniswap.sol\":546:583  uint24 public constant poolFee = 3000 */\n    tag_15:\n        /* \"contracts/SwapUniswap.sol\":579:583  3000 */\n      0x0bb8\n        /* \"contracts/SwapUniswap.sol\":546:583  uint24 public constant poolFee = 3000 */\n      dup2\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":2952:4071  function swapExactOutputMultihop(... */\n    tag_21:\n        /* \"contracts/SwapUniswap.sol\":3072:3088  uint256 amountIn */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":3101:3244  TransferHelper.safeTransferFrom(... */\n      tag_55\n        /* \"contracts/SwapUniswap.sol\":3147:3150  DAI */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/SwapUniswap.sol\":3165:3175  msg.sender */\n      caller\n        /* \"contracts/SwapUniswap.sol\":3198:3202  this */\n      address\n        /* \"contracts/SwapUniswap.sol\":3218:3233  amountInMaximum */\n      dup6\n        /* \"contracts/SwapUniswap.sol\":3101:3132  TransferHelper.safeTransferFrom */\n      tag_56\n        /* \"contracts/SwapUniswap.sol\":3101:3244  TransferHelper.safeTransferFrom(... */\n      jump\t// in\n    tag_55:\n        /* \"contracts/SwapUniswap.sol\":3255:3324  TransferHelper.safeApprove(DAI, address(swapRouter), amountInMaximum) */\n      tag_57\n        /* \"contracts/SwapUniswap.sol\":3282:3285  DAI */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/SwapUniswap.sol\":3295:3305  swapRouter */\n      immutable(\"0x747491254fc29a61c3f0f8ca603d468b83f8d0af60d3a86e8b935f39643493bc\")\n        /* \"contracts/SwapUniswap.sol\":3308:3323  amountInMaximum */\n      dup5\n        /* \"contracts/SwapUniswap.sol\":3255:3281  TransferHelper.safeApprove */\n      tag_58\n        /* \"contracts/SwapUniswap.sol\":3255:3324  TransferHelper.safeApprove(DAI, address(swapRouter), amountInMaximum) */\n      jump\t// in\n    tag_57:\n        /* \"contracts/SwapUniswap.sol\":3337:3380  ISwapRouter.ExactOutputParams memory params */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":3383:3694  ISwapRouter... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/SwapUniswap.sol\":495:537  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"contracts/SwapUniswap.sol\":579:583  3000 */\n      0x0bb8\n        /* \"contracts/SwapUniswap.sol\":3485:3489  USDC */\n      immutable(\"0x571dd8aeb083ba31171345d7ed78dcdb2e0ef1ded5d63247b288b600c1eb6c39\")\n        /* \"contracts/SwapUniswap.sol\":579:583  3000 */\n      0x0bb8\n        /* \"contracts/SwapUniswap.sol\":3500:3503  DAI */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/SwapUniswap.sol\":3452:3504  abi.encodePacked(WETH9, poolFee, USDC, poolFee, DAI) */\n      add(0x20, mload(0x40))\n      tag_59\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/SwapUniswap.sol\":3383:3694  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":3534:3544  msg.sender */\n      caller\n        /* \"contracts/SwapUniswap.sol\":3383:3694  ISwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":3573:3588  block.timestamp */\n      timestamp\n        /* \"contracts/SwapUniswap.sol\":3383:3694  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":3618:3627  amountOut */\n      dup6\n        /* \"contracts/SwapUniswap.sol\":3383:3694  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":3663:3678  amountInMaximum */\n      dup5\n        /* \"contracts/SwapUniswap.sol\":3383:3694  ISwapRouter... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/SwapUniswap.sol\":3337:3694  ISwapRouter.ExactOutputParams memory params = ISwapRouter... */\n      swap1\n      pop\n        /* \"contracts/SwapUniswap.sol\":3718:3728  swapRouter */\n      immutable(\"0x747491254fc29a61c3f0f8ca603d468b83f8d0af60d3a86e8b935f39643493bc\")\n        /* \"contracts/SwapUniswap.sol\":3718:3740  swapRouter.exactOutput */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf28c0498\n        /* \"contracts/SwapUniswap.sol\":3741:3747  params */\n      dup3\n        /* \"contracts/SwapUniswap.sol\":3718:3748  swapRouter.exactOutput(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"contracts/SwapUniswap.sol\":3707:3748  amountIn = swapRouter.exactOutput(params) */\n      swap2\n      pop\n        /* \"contracts/SwapUniswap.sol\":3776:3791  amountInMaximum */\n      dup3\n        /* \"contracts/SwapUniswap.sol\":3765:3773  amountIn */\n      dup3\n        /* \"contracts/SwapUniswap.sol\":3765:3791  amountIn < amountInMaximum */\n      lt\n        /* \"contracts/SwapUniswap.sol\":3761:4064  if (amountIn < amountInMaximum) {... */\n      iszero\n      tag_67\n      jumpi\n        /* \"contracts/SwapUniswap.sol\":3808:3863  TransferHelper.safeApprove(DAI, address(swapRouter), 0) */\n      tag_68\n        /* \"contracts/SwapUniswap.sol\":3835:3838  DAI */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/SwapUniswap.sol\":3848:3858  swapRouter */\n      immutable(\"0x747491254fc29a61c3f0f8ca603d468b83f8d0af60d3a86e8b935f39643493bc\")\n        /* \"contracts/SwapUniswap.sol\":3861:3862  0 */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":3808:3834  TransferHelper.safeApprove */\n      tag_58\n        /* \"contracts/SwapUniswap.sol\":3808:3863  TransferHelper.safeApprove(DAI, address(swapRouter), 0) */\n      jump\t// in\n    tag_68:\n        /* \"contracts/SwapUniswap.sol\":3878:4052  TransferHelper.safeTransferFrom(... */\n      tag_69\n        /* \"contracts/SwapUniswap.sol\":3928:3931  DAI */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/SwapUniswap.sol\":3958:3962  this */\n      address\n        /* \"contracts/SwapUniswap.sol\":3982:3992  msg.sender */\n      caller\n        /* \"contracts/SwapUniswap.sol\":4029:4037  amountIn */\n      dup6\n        /* \"contracts/SwapUniswap.sol\":4011:4026  amountInMaximum */\n      dup8\n        /* \"contracts/SwapUniswap.sol\":4011:4037  amountInMaximum - amountIn */\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"contracts/SwapUniswap.sol\":3878:3909  TransferHelper.safeTransferFrom */\n      tag_56\n        /* \"contracts/SwapUniswap.sol\":3878:4052  TransferHelper.safeTransferFrom(... */\n      jump\t// in\n    tag_69:\n        /* \"contracts/SwapUniswap.sol\":3761:4064  if (amountIn < amountInMaximum) {... */\n    tag_67:\n        /* \"contracts/SwapUniswap.sol\":3090:4071  {... */\n      pop\n        /* \"contracts/SwapUniswap.sol\":2952:4071  function swapExactOutputMultihop(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":463:537  address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n    tag_25:\n        /* \"contracts/SwapUniswap.sol\":495:537  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"contracts/SwapUniswap.sol\":463:537  address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      dup2\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":4548:5827  function swapExactInputSingle(... */\n    tag_31:\n        /* \"contracts/SwapUniswap.sol\":4630:4647  uint256 amountOut */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":4779:4915  TransferHelper.safeTransferFrom(... */\n      tag_73\n        /* \"contracts/SwapUniswap.sol\":4825:4828  DAI */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/SwapUniswap.sol\":4843:4853  msg.sender */\n      caller\n        /* \"contracts/SwapUniswap.sol\":4876:4880  this */\n      address\n        /* \"contracts/SwapUniswap.sol\":4896:4904  amountIn */\n      dup6\n        /* \"contracts/SwapUniswap.sol\":4779:4810  TransferHelper.safeTransferFrom */\n      tag_56\n        /* \"contracts/SwapUniswap.sol\":4779:4915  TransferHelper.safeTransferFrom(... */\n      jump\t// in\n    tag_73:\n        /* \"contracts/SwapUniswap.sol\":4973:5035  TransferHelper.safeApprove(DAI, address(swapRouter), amountIn) */\n      tag_74\n        /* \"contracts/SwapUniswap.sol\":5000:5003  DAI */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/SwapUniswap.sol\":5013:5023  swapRouter */\n      immutable(\"0x747491254fc29a61c3f0f8ca603d468b83f8d0af60d3a86e8b935f39643493bc\")\n        /* \"contracts/SwapUniswap.sol\":5026:5034  amountIn */\n      dup5\n        /* \"contracts/SwapUniswap.sol\":4973:4999  TransferHelper.safeApprove */\n      tag_58\n        /* \"contracts/SwapUniswap.sol\":4973:5035  TransferHelper.safeApprove(DAI, address(swapRouter), amountIn) */\n      jump\t// in\n    tag_74:\n        /* \"contracts/SwapUniswap.sol\":5287:5335  ISwapRouter.ExactInputSingleParams memory params */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":5338:5697  ISwapRouter... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/SwapUniswap.sol\":5415:5418  DAI */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/SwapUniswap.sol\":5338:5697  ISwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":495:537  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"contracts/SwapUniswap.sol\":5338:5697  ISwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":579:583  3000 */\n      0x0bb8\n        /* \"contracts/SwapUniswap.sol\":5338:5697  ISwapRouter... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":5513:5523  msg.sender */\n      caller\n        /* \"contracts/SwapUniswap.sol\":5338:5697  ISwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":5552:5567  block.timestamp */\n      timestamp\n        /* \"contracts/SwapUniswap.sol\":5338:5697  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":5596:5604  amountIn */\n      dup5\n        /* \"contracts/SwapUniswap.sol\":5338:5697  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":5641:5642  0 */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":5338:5697  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":5680:5681  0 */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":5338:5697  ISwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/SwapUniswap.sol\":5287:5697  ISwapRouter.ExactInputSingleParams memory params = ISwapRouter... */\n      swap1\n      pop\n        /* \"contracts/SwapUniswap.sol\":5784:5794  swapRouter */\n      immutable(\"0x747491254fc29a61c3f0f8ca603d468b83f8d0af60d3a86e8b935f39643493bc\")\n        /* \"contracts/SwapUniswap.sol\":5784:5811  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x414bf389\n        /* \"contracts/SwapUniswap.sol\":5812:5818  params */\n      dup3\n        /* \"contracts/SwapUniswap.sol\":5784:5819  swapRouter.exactInputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_79:\n        /* \"contracts/SwapUniswap.sol\":5772:5819  amountOut = swapRouter.exactInputSingle(params) */\n      swap2\n      pop\n        /* \"contracts/SwapUniswap.sol\":4649:5827  {... */\n      pop\n        /* \"contracts/SwapUniswap.sol\":4548:5827  function swapExactInputSingle(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":427:456  address public immutable USDC */\n    tag_34:\n      immutable(\"0x571dd8aeb083ba31171345d7ed78dcdb2e0ef1ded5d63247b288b600c1eb6c39\")\n      dup2\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":233:272  ISwapRouter public immutable swapRouter */\n    tag_37:\n      immutable(\"0x747491254fc29a61c3f0f8ca603d468b83f8d0af60d3a86e8b935f39643493bc\")\n      dup2\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":6463:8256  function swapExactOutputSingle(... */\n    tag_42:\n        /* \"contracts/SwapUniswap.sol\":6581:6597  uint256 amountIn */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":6677:6820  TransferHelper.safeTransferFrom(... */\n      tag_81\n        /* \"contracts/SwapUniswap.sol\":6723:6726  DAI */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/SwapUniswap.sol\":6741:6751  msg.sender */\n      caller\n        /* \"contracts/SwapUniswap.sol\":6774:6778  this */\n      address\n        /* \"contracts/SwapUniswap.sol\":6794:6809  amountInMaximum */\n      dup6\n        /* \"contracts/SwapUniswap.sol\":6677:6708  TransferHelper.safeTransferFrom */\n      tag_56\n        /* \"contracts/SwapUniswap.sol\":6677:6820  TransferHelper.safeTransferFrom(... */\n      jump\t// in\n    tag_81:\n        /* \"contracts/SwapUniswap.sol\":7050:7119  TransferHelper.safeApprove(DAI, address(swapRouter), amountInMaximum) */\n      tag_82\n        /* \"contracts/SwapUniswap.sol\":7077:7080  DAI */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/SwapUniswap.sol\":7090:7100  swapRouter */\n      immutable(\"0x747491254fc29a61c3f0f8ca603d468b83f8d0af60d3a86e8b935f39643493bc\")\n        /* \"contracts/SwapUniswap.sol\":7103:7118  amountInMaximum */\n      dup5\n        /* \"contracts/SwapUniswap.sol\":7050:7076  TransferHelper.safeApprove */\n      tag_58\n        /* \"contracts/SwapUniswap.sol\":7050:7119  TransferHelper.safeApprove(DAI, address(swapRouter), amountInMaximum) */\n      jump\t// in\n    tag_82:\n        /* \"contracts/SwapUniswap.sol\":7132:7181  ISwapRouter.ExactOutputSingleParams memory params */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":7184:7559  ISwapRouter... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/SwapUniswap.sol\":7262:7265  DAI */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/SwapUniswap.sol\":7184:7559  ISwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":495:537  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"contracts/SwapUniswap.sol\":7184:7559  ISwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":579:583  3000 */\n      0x0bb8\n        /* \"contracts/SwapUniswap.sol\":7184:7559  ISwapRouter... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":7360:7370  msg.sender */\n      caller\n        /* \"contracts/SwapUniswap.sol\":7184:7559  ISwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":7399:7414  block.timestamp */\n      timestamp\n        /* \"contracts/SwapUniswap.sol\":7184:7559  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":7444:7453  amountOut */\n      dup6\n        /* \"contracts/SwapUniswap.sol\":7184:7559  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":7489:7504  amountInMaximum */\n      dup5\n        /* \"contracts/SwapUniswap.sol\":7184:7559  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":7542:7543  0 */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":7184:7559  ISwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/SwapUniswap.sol\":7132:7559  ISwapRouter.ExactOutputSingleParams memory params = ISwapRouter... */\n      swap1\n      pop\n        /* \"contracts/SwapUniswap.sol\":7686:7696  swapRouter */\n      immutable(\"0x747491254fc29a61c3f0f8ca603d468b83f8d0af60d3a86e8b935f39643493bc\")\n        /* \"contracts/SwapUniswap.sol\":7686:7714  swapRouter.exactOutputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdb3e2198\n        /* \"contracts/SwapUniswap.sol\":7715:7721  params */\n      dup3\n        /* \"contracts/SwapUniswap.sol\":7686:7722  swapRouter.exactOutputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_87:\n        /* \"contracts/SwapUniswap.sol\":7675:7722  amountIn = swapRouter.exactOutputSingle(params) */\n      swap2\n      pop\n        /* \"contracts/SwapUniswap.sol\":7997:8012  amountInMaximum */\n      dup3\n        /* \"contracts/SwapUniswap.sol\":7986:7994  amountIn */\n      dup3\n        /* \"contracts/SwapUniswap.sol\":7986:8012  amountIn < amountInMaximum */\n      lt\n        /* \"contracts/SwapUniswap.sol\":7982:8249  if (amountIn < amountInMaximum) {... */\n      iszero\n      tag_88\n      jumpi\n        /* \"contracts/SwapUniswap.sol\":8029:8084  TransferHelper.safeApprove(DAI, address(swapRouter), 0) */\n      tag_89\n        /* \"contracts/SwapUniswap.sol\":8056:8059  DAI */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/SwapUniswap.sol\":8069:8079  swapRouter */\n      immutable(\"0x747491254fc29a61c3f0f8ca603d468b83f8d0af60d3a86e8b935f39643493bc\")\n        /* \"contracts/SwapUniswap.sol\":8082:8083  0 */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":8029:8055  TransferHelper.safeApprove */\n      tag_58\n        /* \"contracts/SwapUniswap.sol\":8029:8084  TransferHelper.safeApprove(DAI, address(swapRouter), 0) */\n      jump\t// in\n    tag_89:\n        /* \"contracts/SwapUniswap.sol\":8099:8237  TransferHelper.safeTransfer(... */\n      tag_90\n        /* \"contracts/SwapUniswap.sol\":8145:8148  DAI */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/SwapUniswap.sol\":8167:8177  msg.sender */\n      caller\n        /* \"contracts/SwapUniswap.sol\":8214:8222  amountIn */\n      dup5\n        /* \"contracts/SwapUniswap.sol\":8196:8211  amountInMaximum */\n      dup7\n        /* \"contracts/SwapUniswap.sol\":8196:8222  amountInMaximum - amountIn */\n      tag_91\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_91:\n        /* \"contracts/SwapUniswap.sol\":8099:8126  TransferHelper.safeTransfer */\n      tag_92\n        /* \"contracts/SwapUniswap.sol\":8099:8237  TransferHelper.safeTransfer(... */\n      jump\t// in\n    tag_90:\n        /* \"contracts/SwapUniswap.sol\":7982:8249  if (amountIn < amountInMaximum) {... */\n    tag_88:\n        /* \"contracts/SwapUniswap.sol\":6599:8256  {... */\n      pop\n        /* \"contracts/SwapUniswap.sol\":6463:8256  function swapExactOutputSingle(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":391:420  address public immutable USDT */\n    tag_45:\n      immutable(\"0x278a4539603a9bc8a72d7a368fe14ebf88ae5f0870def96c5eca03adb0b084ba\")\n      dup2\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":356:384  address public immutable DAI */\n    tag_48:\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n      dup2\n      jump\t// out\n        /* \"contracts/SwapUniswap.sol\":1341:2081  function swapExactInputMultihop(... */\n    tag_52:\n        /* \"contracts/SwapUniswap.sol\":1425:1442  uint256 amountOut */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":1455:1591  TransferHelper.safeTransferFrom(... */\n      tag_94\n        /* \"contracts/SwapUniswap.sol\":1501:1504  DAI */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/SwapUniswap.sol\":1519:1529  msg.sender */\n      caller\n        /* \"contracts/SwapUniswap.sol\":1552:1556  this */\n      address\n        /* \"contracts/SwapUniswap.sol\":1572:1580  amountIn */\n      dup6\n        /* \"contracts/SwapUniswap.sol\":1455:1486  TransferHelper.safeTransferFrom */\n      tag_56\n        /* \"contracts/SwapUniswap.sol\":1455:1591  TransferHelper.safeTransferFrom(... */\n      jump\t// in\n    tag_94:\n        /* \"contracts/SwapUniswap.sol\":1604:1666  TransferHelper.safeApprove(DAI, address(swapRouter), amountIn) */\n      tag_95\n        /* \"contracts/SwapUniswap.sol\":1631:1634  DAI */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/SwapUniswap.sol\":1644:1654  swapRouter */\n      immutable(\"0x747491254fc29a61c3f0f8ca603d468b83f8d0af60d3a86e8b935f39643493bc\")\n        /* \"contracts/SwapUniswap.sol\":1657:1665  amountIn */\n      dup5\n        /* \"contracts/SwapUniswap.sol\":1604:1630  TransferHelper.safeApprove */\n      tag_58\n        /* \"contracts/SwapUniswap.sol\":1604:1666  TransferHelper.safeApprove(DAI, address(swapRouter), amountIn) */\n      jump\t// in\n    tag_95:\n        /* \"contracts/SwapUniswap.sol\":1679:1721  ISwapRouter.ExactInputParams memory params */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":1724:2019  ISwapRouter... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/SwapUniswap.sol\":1809:1812  DAI */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/SwapUniswap.sol\":579:583  3000 */\n      0x0bb8\n        /* \"contracts/SwapUniswap.sol\":1823:1827  USDC */\n      immutable(\"0x571dd8aeb083ba31171345d7ed78dcdb2e0ef1ded5d63247b288b600c1eb6c39\")\n        /* \"contracts/SwapUniswap.sol\":579:583  3000 */\n      0x0bb8\n        /* \"contracts/SwapUniswap.sol\":495:537  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"contracts/SwapUniswap.sol\":1792:1844  abi.encodePacked(DAI, poolFee, USDC, poolFee, WETH9) */\n      add(0x20, mload(0x40))\n      tag_96\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/SwapUniswap.sol\":1724:2019  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":1874:1884  msg.sender */\n      caller\n        /* \"contracts/SwapUniswap.sol\":1724:2019  ISwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":1913:1928  block.timestamp */\n      timestamp\n        /* \"contracts/SwapUniswap.sol\":1724:2019  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":1957:1965  amountIn */\n      dup5\n        /* \"contracts/SwapUniswap.sol\":1724:2019  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapUniswap.sol\":2002:2003  0 */\n      0x00\n        /* \"contracts/SwapUniswap.sol\":1724:2019  ISwapRouter... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/SwapUniswap.sol\":1679:2019  ISwapRouter.ExactInputParams memory params = ISwapRouter... */\n      swap1\n      pop\n        /* \"contracts/SwapUniswap.sol\":2044:2054  swapRouter */\n      immutable(\"0x747491254fc29a61c3f0f8ca603d468b83f8d0af60d3a86e8b935f39643493bc\")\n        /* \"contracts/SwapUniswap.sol\":2044:2065  swapRouter.exactInput */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc04b8d59\n        /* \"contracts/SwapUniswap.sol\":2066:2072  params */\n      dup3\n        /* \"contracts/SwapUniswap.sol\":2044:2073  swapRouter.exactInput(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_101:\n        /* \"contracts/SwapUniswap.sol\":2032:2073  amountOut = swapRouter.exactInput(params) */\n      swap2\n      pop\n        /* \"contracts/SwapUniswap.sol\":1444:2081  {... */\n      pop\n        /* \"contracts/SwapUniswap.sol\":1341:2081  function swapExactInputMultihop(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n    tag_56:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":701:713  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":715:732  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:753  token */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:758  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":782:810  IERC20.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":812:816  from */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":818:820  to */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":822:827  value */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_103\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:829  token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value)) */\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_109\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_108)\n    tag_109:\n      0x60\n      swap2\n      pop\n    tag_108:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":700:829  (bool success, bytes memory data) =... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:854  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:904  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_110\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":874:875  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:863  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:870  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:875  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:903  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_111\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":890:894  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":879:903  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:903  data.length == 0 || abi.decode(data, (bool)) */\n    tag_111:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:904  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_110:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":839:912  require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF') */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":690:919  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n    tag_58:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1986:1998  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2000:2017  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2026  token */\n      dup5\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2031  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2055:2078  IERC20.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2080:2082  to */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2084:2089  value */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_118\n      swap3\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2091  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_120:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_123\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_122)\n    tag_123:\n      0x60\n      swap2\n      pop\n    tag_122:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1985:2091  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2116  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_124\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2136:2137  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2125  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2132  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2137  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_125\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2152:2156  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2141:2165  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_126:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n    tag_125:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_124:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2101:2173  require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA') */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1975:2180  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1211:1520  function safeTransfer(... */\n    tag_92:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1325:1337  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1339:1356  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1365  token */\n      dup5\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1370  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1394:1418  IERC20.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1420:1422  to */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1424:1429  value */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1371:1430  abi.encodeWithSelector(IERC20.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_131\n      swap3\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1431  token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_132:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_135\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_134)\n    tag_135:\n      0x60\n      swap2\n      pop\n    tag_134:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1324:1431  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1449:1456  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1449:1506  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_136\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1476:1477  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1465  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1472  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1477  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1505  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_137\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1492:1496  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1481:1505  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_138\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_138:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1505  data.length == 0 || abi.decode(data, (bool)) */\n    tag_137:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1449:1506  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_136:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1441:1513  require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST') */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1314:1520  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1211:1520  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:98   */\n    tag_142:\n        /* \"#utility.yul\":43:50   */\n      0x00\n        /* \"#utility.yul\":83:91   */\n      0xffffff\n        /* \"#utility.yul\":76:81   */\n      dup3\n        /* \"#utility.yul\":72:92   */\n      and\n        /* \"#utility.yul\":61:92   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:98   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":104:219   */\n    tag_143:\n        /* \"#utility.yul\":189:212   */\n      tag_196\n        /* \"#utility.yul\":206:211   */\n      dup2\n        /* \"#utility.yul\":189:212   */\n      tag_142\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":184:187   */\n      dup3\n        /* \"#utility.yul\":177:213   */\n      mstore\n        /* \"#utility.yul\":104:219   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":225:443   */\n    tag_17:\n        /* \"#utility.yul\":316:320   */\n      0x00\n        /* \"#utility.yul\":354:356   */\n      0x20\n        /* \"#utility.yul\":343:352   */\n      dup3\n        /* \"#utility.yul\":339:357   */\n      add\n        /* \"#utility.yul\":331:357   */\n      swap1\n      pop\n        /* \"#utility.yul\":367:436   */\n      tag_198\n        /* \"#utility.yul\":433:434   */\n      0x00\n        /* \"#utility.yul\":422:431   */\n      dup4\n        /* \"#utility.yul\":418:435   */\n      add\n        /* \"#utility.yul\":409:415   */\n      dup5\n        /* \"#utility.yul\":367:436   */\n      tag_143\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":225:443   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":530:647   */\n    tag_145:\n        /* \"#utility.yul\":639:640   */\n      0x00\n        /* \"#utility.yul\":636:637   */\n      dup1\n        /* \"#utility.yul\":629:641   */\n      revert\n        /* \"#utility.yul\":776:853   */\n    tag_147:\n        /* \"#utility.yul\":813:820   */\n      0x00\n        /* \"#utility.yul\":842:847   */\n      dup2\n        /* \"#utility.yul\":831:847   */\n      swap1\n      pop\n        /* \"#utility.yul\":776:853   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":859:981   */\n    tag_148:\n        /* \"#utility.yul\":932:956   */\n      tag_204\n        /* \"#utility.yul\":950:955   */\n      dup2\n        /* \"#utility.yul\":932:956   */\n      tag_147\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":925:930   */\n      dup2\n        /* \"#utility.yul\":922:957   */\n      eq\n        /* \"#utility.yul\":912:975   */\n      tag_205\n      jumpi\n        /* \"#utility.yul\":971:972   */\n      0x00\n        /* \"#utility.yul\":968:969   */\n      dup1\n        /* \"#utility.yul\":961:973   */\n      revert\n        /* \"#utility.yul\":912:975   */\n    tag_205:\n        /* \"#utility.yul\":859:981   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":987:1126   */\n    tag_149:\n        /* \"#utility.yul\":1033:1038   */\n      0x00\n        /* \"#utility.yul\":1071:1077   */\n      dup2\n        /* \"#utility.yul\":1058:1078   */\n      calldataload\n        /* \"#utility.yul\":1049:1078   */\n      swap1\n      pop\n        /* \"#utility.yul\":1087:1120   */\n      tag_207\n        /* \"#utility.yul\":1114:1119   */\n      dup2\n        /* \"#utility.yul\":1087:1120   */\n      tag_148\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":987:1126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1132:1606   */\n    tag_20:\n        /* \"#utility.yul\":1200:1206   */\n      0x00\n        /* \"#utility.yul\":1208:1214   */\n      dup1\n        /* \"#utility.yul\":1257:1259   */\n      0x40\n        /* \"#utility.yul\":1245:1254   */\n      dup4\n        /* \"#utility.yul\":1236:1243   */\n      dup6\n        /* \"#utility.yul\":1232:1255   */\n      sub\n        /* \"#utility.yul\":1228:1260   */\n      slt\n        /* \"#utility.yul\":1225:1344   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":1263:1342   */\n      tag_210\n      tag_145\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1225:1344   */\n    tag_209:\n        /* \"#utility.yul\":1383:1384   */\n      0x00\n        /* \"#utility.yul\":1408:1461   */\n      tag_211\n        /* \"#utility.yul\":1453:1460   */\n      dup6\n        /* \"#utility.yul\":1444:1450   */\n      dup3\n        /* \"#utility.yul\":1433:1442   */\n      dup7\n        /* \"#utility.yul\":1429:1451   */\n      add\n        /* \"#utility.yul\":1408:1461   */\n      tag_149\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":1398:1461   */\n      swap3\n      pop\n        /* \"#utility.yul\":1354:1471   */\n      pop\n        /* \"#utility.yul\":1510:1512   */\n      0x20\n        /* \"#utility.yul\":1536:1589   */\n      tag_212\n        /* \"#utility.yul\":1581:1588   */\n      dup6\n        /* \"#utility.yul\":1572:1578   */\n      dup3\n        /* \"#utility.yul\":1561:1570   */\n      dup7\n        /* \"#utility.yul\":1557:1579   */\n      add\n        /* \"#utility.yul\":1536:1589   */\n      tag_149\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":1526:1589   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1599   */\n      pop\n        /* \"#utility.yul\":1132:1606   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1612:1730   */\n    tag_150:\n        /* \"#utility.yul\":1699:1723   */\n      tag_214\n        /* \"#utility.yul\":1717:1722   */\n      dup2\n        /* \"#utility.yul\":1699:1723   */\n      tag_147\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":1694:1697   */\n      dup3\n        /* \"#utility.yul\":1687:1724   */\n      mstore\n        /* \"#utility.yul\":1612:1730   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1736:1958   */\n    tag_23:\n        /* \"#utility.yul\":1829:1833   */\n      0x00\n        /* \"#utility.yul\":1867:1869   */\n      0x20\n        /* \"#utility.yul\":1856:1865   */\n      dup3\n        /* \"#utility.yul\":1852:1870   */\n      add\n        /* \"#utility.yul\":1844:1870   */\n      swap1\n      pop\n        /* \"#utility.yul\":1880:1951   */\n      tag_216\n        /* \"#utility.yul\":1948:1949   */\n      0x00\n        /* \"#utility.yul\":1937:1946   */\n      dup4\n        /* \"#utility.yul\":1933:1950   */\n      add\n        /* \"#utility.yul\":1924:1930   */\n      dup5\n        /* \"#utility.yul\":1880:1951   */\n      tag_150\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":1736:1958   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1964:2090   */\n    tag_151:\n        /* \"#utility.yul\":2001:2008   */\n      0x00\n        /* \"#utility.yul\":2041:2083   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2034:2039   */\n      dup3\n        /* \"#utility.yul\":2030:2084   */\n      and\n        /* \"#utility.yul\":2019:2084   */\n      swap1\n      pop\n        /* \"#utility.yul\":1964:2090   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2096:2192   */\n    tag_152:\n        /* \"#utility.yul\":2133:2140   */\n      0x00\n        /* \"#utility.yul\":2162:2186   */\n      tag_219\n        /* \"#utility.yul\":2180:2185   */\n      dup3\n        /* \"#utility.yul\":2162:2186   */\n      tag_151\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":2151:2186   */\n      swap1\n      pop\n        /* \"#utility.yul\":2096:2192   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2198:2316   */\n    tag_153:\n        /* \"#utility.yul\":2285:2309   */\n      tag_221\n        /* \"#utility.yul\":2303:2308   */\n      dup2\n        /* \"#utility.yul\":2285:2309   */\n      tag_152\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":2280:2283   */\n      dup3\n        /* \"#utility.yul\":2273:2310   */\n      mstore\n        /* \"#utility.yul\":2198:2316   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2322:2544   */\n    tag_27:\n        /* \"#utility.yul\":2415:2419   */\n      0x00\n        /* \"#utility.yul\":2453:2455   */\n      0x20\n        /* \"#utility.yul\":2442:2451   */\n      dup3\n        /* \"#utility.yul\":2438:2456   */\n      add\n        /* \"#utility.yul\":2430:2456   */\n      swap1\n      pop\n        /* \"#utility.yul\":2466:2537   */\n      tag_223\n        /* \"#utility.yul\":2534:2535   */\n      0x00\n        /* \"#utility.yul\":2523:2532   */\n      dup4\n        /* \"#utility.yul\":2519:2536   */\n      add\n        /* \"#utility.yul\":2510:2516   */\n      dup5\n        /* \"#utility.yul\":2466:2537   */\n      tag_153\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":2322:2544   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2550:2879   */\n    tag_30:\n        /* \"#utility.yul\":2609:2615   */\n      0x00\n        /* \"#utility.yul\":2658:2660   */\n      0x20\n        /* \"#utility.yul\":2646:2655   */\n      dup3\n        /* \"#utility.yul\":2637:2644   */\n      dup5\n        /* \"#utility.yul\":2633:2656   */\n      sub\n        /* \"#utility.yul\":2629:2661   */\n      slt\n        /* \"#utility.yul\":2626:2745   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":2664:2743   */\n      tag_226\n      tag_145\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":2626:2745   */\n    tag_225:\n        /* \"#utility.yul\":2784:2785   */\n      0x00\n        /* \"#utility.yul\":2809:2862   */\n      tag_227\n        /* \"#utility.yul\":2854:2861   */\n      dup5\n        /* \"#utility.yul\":2845:2851   */\n      dup3\n        /* \"#utility.yul\":2834:2843   */\n      dup6\n        /* \"#utility.yul\":2830:2852   */\n      add\n        /* \"#utility.yul\":2809:2862   */\n      tag_149\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":2799:2862   */\n      swap2\n      pop\n        /* \"#utility.yul\":2755:2872   */\n      pop\n        /* \"#utility.yul\":2550:2879   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2885:2945   */\n    tag_154:\n        /* \"#utility.yul\":2913:2916   */\n      0x00\n        /* \"#utility.yul\":2934:2939   */\n      dup2\n        /* \"#utility.yul\":2927:2939   */\n      swap1\n      pop\n        /* \"#utility.yul\":2885:2945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2951:3093   */\n    tag_155:\n        /* \"#utility.yul\":3001:3010   */\n      0x00\n        /* \"#utility.yul\":3034:3087   */\n      tag_230\n        /* \"#utility.yul\":3052:3086   */\n      tag_231\n        /* \"#utility.yul\":3061:3085   */\n      tag_232\n        /* \"#utility.yul\":3079:3084   */\n      dup5\n        /* \"#utility.yul\":3061:3085   */\n      tag_151\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":3052:3086   */\n      tag_154\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":3034:3087   */\n      tag_151\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":3021:3087   */\n      swap1\n      pop\n        /* \"#utility.yul\":2951:3093   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3099:3225   */\n    tag_156:\n        /* \"#utility.yul\":3149:3158   */\n      0x00\n        /* \"#utility.yul\":3182:3219   */\n      tag_234\n        /* \"#utility.yul\":3213:3218   */\n      dup3\n        /* \"#utility.yul\":3182:3219   */\n      tag_155\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":3169:3219   */\n      swap1\n      pop\n        /* \"#utility.yul\":3099:3225   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3231:3376   */\n    tag_157:\n        /* \"#utility.yul\":3300:3309   */\n      0x00\n        /* \"#utility.yul\":3333:3370   */\n      tag_236\n        /* \"#utility.yul\":3364:3369   */\n      dup3\n        /* \"#utility.yul\":3333:3370   */\n      tag_156\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":3320:3370   */\n      swap1\n      pop\n        /* \"#utility.yul\":3231:3376   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3382:3551   */\n    tag_158:\n        /* \"#utility.yul\":3488:3544   */\n      tag_238\n        /* \"#utility.yul\":3538:3543   */\n      dup2\n        /* \"#utility.yul\":3488:3544   */\n      tag_157\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":3483:3486   */\n      dup3\n        /* \"#utility.yul\":3476:3545   */\n      mstore\n        /* \"#utility.yul\":3382:3551   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3557:3817   */\n    tag_39:\n        /* \"#utility.yul\":3669:3673   */\n      0x00\n        /* \"#utility.yul\":3707:3709   */\n      0x20\n        /* \"#utility.yul\":3696:3705   */\n      dup3\n        /* \"#utility.yul\":3692:3710   */\n      add\n        /* \"#utility.yul\":3684:3710   */\n      swap1\n      pop\n        /* \"#utility.yul\":3720:3810   */\n      tag_240\n        /* \"#utility.yul\":3807:3808   */\n      0x00\n        /* \"#utility.yul\":3796:3805   */\n      dup4\n        /* \"#utility.yul\":3792:3809   */\n      add\n        /* \"#utility.yul\":3783:3789   */\n      dup5\n        /* \"#utility.yul\":3720:3810   */\n      tag_158\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":3557:3817   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3823:3917   */\n    tag_159:\n        /* \"#utility.yul\":3856:3864   */\n      0x00\n        /* \"#utility.yul\":3904:3909   */\n      dup2\n        /* \"#utility.yul\":3900:3902   */\n      0x60\n        /* \"#utility.yul\":3896:3910   */\n      shl\n        /* \"#utility.yul\":3875:3910   */\n      swap1\n      pop\n        /* \"#utility.yul\":3823:3917   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3923:4017   */\n    tag_160:\n        /* \"#utility.yul\":3962:3969   */\n      0x00\n        /* \"#utility.yul\":3991:4011   */\n      tag_243\n        /* \"#utility.yul\":4005:4010   */\n      dup3\n        /* \"#utility.yul\":3991:4011   */\n      tag_159\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":3980:4011   */\n      swap1\n      pop\n        /* \"#utility.yul\":3923:4017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4023:4123   */\n    tag_161:\n        /* \"#utility.yul\":4062:4069   */\n      0x00\n        /* \"#utility.yul\":4091:4117   */\n      tag_245\n        /* \"#utility.yul\":4111:4116   */\n      dup3\n        /* \"#utility.yul\":4091:4117   */\n      tag_160\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":4080:4117   */\n      swap1\n      pop\n        /* \"#utility.yul\":4023:4123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4129:4286   */\n    tag_162:\n        /* \"#utility.yul\":4234:4279   */\n      tag_247\n        /* \"#utility.yul\":4254:4278   */\n      tag_248\n        /* \"#utility.yul\":4272:4277   */\n      dup3\n        /* \"#utility.yul\":4254:4278   */\n      tag_152\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":4234:4279   */\n      tag_161\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":4229:4232   */\n      dup3\n        /* \"#utility.yul\":4222:4280   */\n      mstore\n        /* \"#utility.yul\":4129:4286   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4292:4388   */\n    tag_163:\n        /* \"#utility.yul\":4326:4334   */\n      0x00\n        /* \"#utility.yul\":4375:4380   */\n      dup2\n        /* \"#utility.yul\":4370:4373   */\n      0xe8\n        /* \"#utility.yul\":4366:4381   */\n      shl\n        /* \"#utility.yul\":4345:4381   */\n      swap1\n      pop\n        /* \"#utility.yul\":4292:4388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4394:4488   */\n    tag_164:\n        /* \"#utility.yul\":4432:4439   */\n      0x00\n        /* \"#utility.yul\":4461:4482   */\n      tag_251\n        /* \"#utility.yul\":4476:4481   */\n      dup3\n        /* \"#utility.yul\":4461:4482   */\n      tag_163\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":4450:4482   */\n      swap1\n      pop\n        /* \"#utility.yul\":4394:4488   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4494:4647   */\n    tag_165:\n        /* \"#utility.yul\":4597:4640   */\n      tag_253\n        /* \"#utility.yul\":4616:4639   */\n      tag_254\n        /* \"#utility.yul\":4633:4638   */\n      dup3\n        /* \"#utility.yul\":4616:4639   */\n      tag_142\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":4597:4640   */\n      tag_164\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":4592:4595   */\n      dup3\n        /* \"#utility.yul\":4585:4641   */\n      mstore\n        /* \"#utility.yul\":4494:4647   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4653:5463   */\n    tag_60:\n        /* \"#utility.yul\":4873:4876   */\n      0x00\n        /* \"#utility.yul\":4888:4963   */\n      tag_256\n        /* \"#utility.yul\":4959:4962   */\n      dup3\n        /* \"#utility.yul\":4950:4956   */\n      dup9\n        /* \"#utility.yul\":4888:4963   */\n      tag_162\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":4988:4990   */\n      0x14\n        /* \"#utility.yul\":4983:4986   */\n      dup3\n        /* \"#utility.yul\":4979:4991   */\n      add\n        /* \"#utility.yul\":4972:4991   */\n      swap2\n      pop\n        /* \"#utility.yul\":5001:5074   */\n      tag_257\n        /* \"#utility.yul\":5070:5073   */\n      dup3\n        /* \"#utility.yul\":5061:5067   */\n      dup8\n        /* \"#utility.yul\":5001:5074   */\n      tag_165\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":5099:5100   */\n      0x03\n        /* \"#utility.yul\":5094:5097   */\n      dup3\n        /* \"#utility.yul\":5090:5101   */\n      add\n        /* \"#utility.yul\":5083:5101   */\n      swap2\n      pop\n        /* \"#utility.yul\":5111:5186   */\n      tag_258\n        /* \"#utility.yul\":5182:5185   */\n      dup3\n        /* \"#utility.yul\":5173:5179   */\n      dup7\n        /* \"#utility.yul\":5111:5186   */\n      tag_162\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":5211:5213   */\n      0x14\n        /* \"#utility.yul\":5206:5209   */\n      dup3\n        /* \"#utility.yul\":5202:5214   */\n      add\n        /* \"#utility.yul\":5195:5214   */\n      swap2\n      pop\n        /* \"#utility.yul\":5224:5297   */\n      tag_259\n        /* \"#utility.yul\":5293:5296   */\n      dup3\n        /* \"#utility.yul\":5284:5290   */\n      dup6\n        /* \"#utility.yul\":5224:5297   */\n      tag_165\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":5322:5323   */\n      0x03\n        /* \"#utility.yul\":5317:5320   */\n      dup3\n        /* \"#utility.yul\":5313:5324   */\n      add\n        /* \"#utility.yul\":5306:5324   */\n      swap2\n      pop\n        /* \"#utility.yul\":5334:5409   */\n      tag_260\n        /* \"#utility.yul\":5405:5408   */\n      dup3\n        /* \"#utility.yul\":5396:5402   */\n      dup5\n        /* \"#utility.yul\":5334:5409   */\n      tag_162\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":5434:5436   */\n      0x14\n        /* \"#utility.yul\":5429:5432   */\n      dup3\n        /* \"#utility.yul\":5425:5437   */\n      add\n        /* \"#utility.yul\":5418:5437   */\n      swap2\n      pop\n        /* \"#utility.yul\":5454:5457   */\n      dup2\n        /* \"#utility.yul\":5447:5457   */\n      swap1\n      pop\n        /* \"#utility.yul\":4653:5463   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5469:5567   */\n    tag_166:\n        /* \"#utility.yul\":5520:5526   */\n      0x00\n        /* \"#utility.yul\":5554:5559   */\n      dup2\n        /* \"#utility.yul\":5548:5560   */\n      mload\n        /* \"#utility.yul\":5538:5560   */\n      swap1\n      pop\n        /* \"#utility.yul\":5469:5567   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5573:5731   */\n    tag_167:\n        /* \"#utility.yul\":5646:5657   */\n      0x00\n        /* \"#utility.yul\":5680:5686   */\n      dup3\n        /* \"#utility.yul\":5675:5678   */\n      dup3\n        /* \"#utility.yul\":5668:5687   */\n      mstore\n        /* \"#utility.yul\":5720:5724   */\n      0x20\n        /* \"#utility.yul\":5715:5718   */\n      dup3\n        /* \"#utility.yul\":5711:5725   */\n      add\n        /* \"#utility.yul\":5696:5725   */\n      swap1\n      pop\n        /* \"#utility.yul\":5573:5731   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5737:5876   */\n    tag_168:\n        /* \"#utility.yul\":5826:5832   */\n      dup3\n        /* \"#utility.yul\":5821:5824   */\n      dup2\n        /* \"#utility.yul\":5816:5819   */\n      dup4\n        /* \"#utility.yul\":5810:5833   */\n      mcopy\n        /* \"#utility.yul\":5867:5868   */\n      0x00\n        /* \"#utility.yul\":5858:5864   */\n      dup4\n        /* \"#utility.yul\":5853:5856   */\n      dup4\n        /* \"#utility.yul\":5849:5865   */\n      add\n        /* \"#utility.yul\":5842:5869   */\n      mstore\n        /* \"#utility.yul\":5737:5876   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5882:5984   */\n    tag_169:\n        /* \"#utility.yul\":5923:5929   */\n      0x00\n        /* \"#utility.yul\":5974:5976   */\n      0x1f\n        /* \"#utility.yul\":5970:5977   */\n      not\n        /* \"#utility.yul\":5965:5967   */\n      0x1f\n        /* \"#utility.yul\":5958:5963   */\n      dup4\n        /* \"#utility.yul\":5954:5968   */\n      add\n        /* \"#utility.yul\":5950:5978   */\n      and\n        /* \"#utility.yul\":5940:5978   */\n      swap1\n      pop\n        /* \"#utility.yul\":5882:5984   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5990:6343   */\n    tag_170:\n        /* \"#utility.yul\":6066:6069   */\n      0x00\n        /* \"#utility.yul\":6094:6132   */\n      tag_266\n        /* \"#utility.yul\":6126:6131   */\n      dup3\n        /* \"#utility.yul\":6094:6132   */\n      tag_166\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":6148:6208   */\n      tag_267\n        /* \"#utility.yul\":6201:6207   */\n      dup2\n        /* \"#utility.yul\":6196:6199   */\n      dup6\n        /* \"#utility.yul\":6148:6208   */\n      tag_167\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":6141:6208   */\n      swap4\n      pop\n        /* \"#utility.yul\":6217:6282   */\n      tag_268\n        /* \"#utility.yul\":6275:6281   */\n      dup2\n        /* \"#utility.yul\":6270:6273   */\n      dup6\n        /* \"#utility.yul\":6263:6267   */\n      0x20\n        /* \"#utility.yul\":6256:6261   */\n      dup7\n        /* \"#utility.yul\":6252:6268   */\n      add\n        /* \"#utility.yul\":6217:6282   */\n      tag_168\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":6307:6336   */\n      tag_269\n        /* \"#utility.yul\":6329:6335   */\n      dup2\n        /* \"#utility.yul\":6307:6336   */\n      tag_169\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":6302:6305   */\n      dup5\n        /* \"#utility.yul\":6298:6337   */\n      add\n        /* \"#utility.yul\":6291:6337   */\n      swap2\n      pop\n        /* \"#utility.yul\":6070:6343   */\n      pop\n        /* \"#utility.yul\":5990:6343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6349:6457   */\n    tag_171:\n        /* \"#utility.yul\":6426:6450   */\n      tag_271\n        /* \"#utility.yul\":6444:6449   */\n      dup2\n        /* \"#utility.yul\":6426:6450   */\n      tag_152\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":6421:6424   */\n      dup3\n        /* \"#utility.yul\":6414:6451   */\n      mstore\n        /* \"#utility.yul\":6349:6457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6571   */\n    tag_172:\n        /* \"#utility.yul\":6540:6564   */\n      tag_273\n        /* \"#utility.yul\":6558:6563   */\n      dup2\n        /* \"#utility.yul\":6540:6564   */\n      tag_147\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":6535:6538   */\n      dup3\n        /* \"#utility.yul\":6528:6565   */\n      mstore\n        /* \"#utility.yul\":6463:6571   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6661:7830   */\n    tag_173:\n        /* \"#utility.yul\":6798:6801   */\n      0x00\n        /* \"#utility.yul\":6834:6838   */\n      0xa0\n        /* \"#utility.yul\":6829:6832   */\n      dup4\n        /* \"#utility.yul\":6825:6839   */\n      add\n        /* \"#utility.yul\":6921:6925   */\n      0x00\n        /* \"#utility.yul\":6914:6919   */\n      dup4\n        /* \"#utility.yul\":6910:6926   */\n      add\n        /* \"#utility.yul\":6904:6927   */\n      mload\n        /* \"#utility.yul\":6974:6977   */\n      dup5\n        /* \"#utility.yul\":6968:6972   */\n      dup3\n        /* \"#utility.yul\":6964:6978   */\n      sub\n        /* \"#utility.yul\":6957:6961   */\n      0x00\n        /* \"#utility.yul\":6952:6955   */\n      dup7\n        /* \"#utility.yul\":6948:6962   */\n      add\n        /* \"#utility.yul\":6941:6979   */\n      mstore\n        /* \"#utility.yul\":7000:7071   */\n      tag_275\n        /* \"#utility.yul\":7066:7070   */\n      dup3\n        /* \"#utility.yul\":7052:7064   */\n      dup3\n        /* \"#utility.yul\":7000:7071   */\n      tag_170\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":6992:7071   */\n      swap2\n      pop\n        /* \"#utility.yul\":6849:7082   */\n      pop\n        /* \"#utility.yul\":7169:7173   */\n      0x20\n        /* \"#utility.yul\":7162:7167   */\n      dup4\n        /* \"#utility.yul\":7158:7174   */\n      add\n        /* \"#utility.yul\":7152:7175   */\n      mload\n        /* \"#utility.yul\":7188:7251   */\n      tag_276\n        /* \"#utility.yul\":7245:7249   */\n      0x20\n        /* \"#utility.yul\":7240:7243   */\n      dup7\n        /* \"#utility.yul\":7236:7250   */\n      add\n        /* \"#utility.yul\":7222:7234   */\n      dup3\n        /* \"#utility.yul\":7188:7251   */\n      tag_171\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":7092:7261   */\n      pop\n        /* \"#utility.yul\":7347:7351   */\n      0x40\n        /* \"#utility.yul\":7340:7345   */\n      dup4\n        /* \"#utility.yul\":7336:7352   */\n      add\n        /* \"#utility.yul\":7330:7353   */\n      mload\n        /* \"#utility.yul\":7366:7429   */\n      tag_277\n        /* \"#utility.yul\":7423:7427   */\n      0x40\n        /* \"#utility.yul\":7418:7421   */\n      dup7\n        /* \"#utility.yul\":7414:7428   */\n      add\n        /* \"#utility.yul\":7400:7412   */\n      dup3\n        /* \"#utility.yul\":7366:7429   */\n      tag_172\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":7271:7439   */\n      pop\n        /* \"#utility.yul\":7526:7530   */\n      0x60\n        /* \"#utility.yul\":7519:7524   */\n      dup4\n        /* \"#utility.yul\":7515:7531   */\n      add\n        /* \"#utility.yul\":7509:7532   */\n      mload\n        /* \"#utility.yul\":7545:7608   */\n      tag_278\n        /* \"#utility.yul\":7602:7606   */\n      0x60\n        /* \"#utility.yul\":7597:7600   */\n      dup7\n        /* \"#utility.yul\":7593:7607   */\n      add\n        /* \"#utility.yul\":7579:7591   */\n      dup3\n        /* \"#utility.yul\":7545:7608   */\n      tag_172\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":7449:7618   */\n      pop\n        /* \"#utility.yul\":7711:7715   */\n      0x80\n        /* \"#utility.yul\":7704:7709   */\n      dup4\n        /* \"#utility.yul\":7700:7716   */\n      add\n        /* \"#utility.yul\":7694:7717   */\n      mload\n        /* \"#utility.yul\":7730:7793   */\n      tag_279\n        /* \"#utility.yul\":7787:7791   */\n      0x80\n        /* \"#utility.yul\":7782:7785   */\n      dup7\n        /* \"#utility.yul\":7778:7792   */\n      add\n        /* \"#utility.yul\":7764:7776   */\n      dup3\n        /* \"#utility.yul\":7730:7793   */\n      tag_172\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":7628:7803   */\n      pop\n        /* \"#utility.yul\":7820:7824   */\n      dup1\n        /* \"#utility.yul\":7813:7824   */\n      swap2\n      pop\n        /* \"#utility.yul\":6803:7830   */\n      pop\n        /* \"#utility.yul\":6661:7830   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7836:8245   */\n    tag_62:\n        /* \"#utility.yul\":7997:8001   */\n      0x00\n        /* \"#utility.yul\":8035:8037   */\n      0x20\n        /* \"#utility.yul\":8024:8033   */\n      dup3\n        /* \"#utility.yul\":8020:8038   */\n      add\n        /* \"#utility.yul\":8012:8038   */\n      swap1\n      pop\n        /* \"#utility.yul\":8084:8093   */\n      dup2\n        /* \"#utility.yul\":8078:8082   */\n      dup2\n        /* \"#utility.yul\":8074:8094   */\n      sub\n        /* \"#utility.yul\":8070:8071   */\n      0x00\n        /* \"#utility.yul\":8059:8068   */\n      dup4\n        /* \"#utility.yul\":8055:8072   */\n      add\n        /* \"#utility.yul\":8048:8095   */\n      mstore\n        /* \"#utility.yul\":8112:8238   */\n      tag_281\n        /* \"#utility.yul\":8233:8237   */\n      dup2\n        /* \"#utility.yul\":8224:8230   */\n      dup5\n        /* \"#utility.yul\":8112:8238   */\n      tag_173\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":8104:8238   */\n      swap1\n      pop\n        /* \"#utility.yul\":7836:8245   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8251:8394   */\n    tag_174:\n        /* \"#utility.yul\":8308:8313   */\n      0x00\n        /* \"#utility.yul\":8339:8345   */\n      dup2\n        /* \"#utility.yul\":8333:8346   */\n      mload\n        /* \"#utility.yul\":8324:8346   */\n      swap1\n      pop\n        /* \"#utility.yul\":8355:8388   */\n      tag_283\n        /* \"#utility.yul\":8382:8387   */\n      dup2\n        /* \"#utility.yul\":8355:8388   */\n      tag_148\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":8251:8394   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8400:8751   */\n    tag_66:\n        /* \"#utility.yul\":8470:8476   */\n      0x00\n        /* \"#utility.yul\":8519:8521   */\n      0x20\n        /* \"#utility.yul\":8507:8516   */\n      dup3\n        /* \"#utility.yul\":8498:8505   */\n      dup5\n        /* \"#utility.yul\":8494:8517   */\n      sub\n        /* \"#utility.yul\":8490:8522   */\n      slt\n        /* \"#utility.yul\":8487:8606   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":8525:8604   */\n      tag_286\n      tag_145\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":8487:8606   */\n    tag_285:\n        /* \"#utility.yul\":8645:8646   */\n      0x00\n        /* \"#utility.yul\":8670:8734   */\n      tag_287\n        /* \"#utility.yul\":8726:8733   */\n      dup5\n        /* \"#utility.yul\":8717:8723   */\n      dup3\n        /* \"#utility.yul\":8706:8715   */\n      dup6\n        /* \"#utility.yul\":8702:8724   */\n      add\n        /* \"#utility.yul\":8670:8734   */\n      tag_174\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":8660:8734   */\n      swap2\n      pop\n        /* \"#utility.yul\":8616:8744   */\n      pop\n        /* \"#utility.yul\":8400:8751   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8757:8937   */\n    tag_175:\n        /* \"#utility.yul\":8805:8882   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8802:8803   */\n      0x00\n        /* \"#utility.yul\":8795:8883   */\n      mstore\n        /* \"#utility.yul\":8902:8906   */\n      0x11\n        /* \"#utility.yul\":8899:8900   */\n      0x04\n        /* \"#utility.yul\":8892:8907   */\n      mstore\n        /* \"#utility.yul\":8926:8930   */\n      0x24\n        /* \"#utility.yul\":8923:8924   */\n      0x00\n        /* \"#utility.yul\":8916:8931   */\n      revert\n        /* \"#utility.yul\":8943:9137   */\n    tag_71:\n        /* \"#utility.yul\":8983:8987   */\n      0x00\n        /* \"#utility.yul\":9003:9023   */\n      tag_290\n        /* \"#utility.yul\":9021:9022   */\n      dup3\n        /* \"#utility.yul\":9003:9023   */\n      tag_147\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":8998:9023   */\n      swap2\n      pop\n        /* \"#utility.yul\":9037:9057   */\n      tag_291\n        /* \"#utility.yul\":9055:9056   */\n      dup4\n        /* \"#utility.yul\":9037:9057   */\n      tag_147\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":9032:9057   */\n      swap3\n      pop\n        /* \"#utility.yul\":9081:9082   */\n      dup3\n        /* \"#utility.yul\":9078:9079   */\n      dup3\n        /* \"#utility.yul\":9074:9083   */\n      sub\n        /* \"#utility.yul\":9066:9083   */\n      swap1\n      pop\n        /* \"#utility.yul\":9105:9106   */\n      dup2\n        /* \"#utility.yul\":9099:9103   */\n      dup2\n        /* \"#utility.yul\":9096:9107   */\n      gt\n        /* \"#utility.yul\":9093:9130   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":9110:9128   */\n      tag_293\n      tag_175\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":9093:9130   */\n    tag_292:\n        /* \"#utility.yul\":8943:9137   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9143:9248   */\n    tag_176:\n        /* \"#utility.yul\":9218:9241   */\n      tag_295\n        /* \"#utility.yul\":9235:9240   */\n      dup2\n        /* \"#utility.yul\":9218:9241   */\n      tag_142\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":9213:9216   */\n      dup3\n        /* \"#utility.yul\":9206:9242   */\n      mstore\n        /* \"#utility.yul\":9143:9248   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9254:9362   */\n    tag_177:\n        /* \"#utility.yul\":9331:9355   */\n      tag_297\n        /* \"#utility.yul\":9349:9354   */\n      dup2\n        /* \"#utility.yul\":9331:9355   */\n      tag_151\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":9326:9329   */\n      dup3\n        /* \"#utility.yul\":9319:9356   */\n      mstore\n        /* \"#utility.yul\":9254:9362   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9462:11085   */\n    tag_178:\n        /* \"#utility.yul\":9637:9643   */\n      0x0100\n        /* \"#utility.yul\":9632:9635   */\n      dup3\n        /* \"#utility.yul\":9628:9644   */\n      add\n        /* \"#utility.yul\":9729:9733   */\n      0x00\n        /* \"#utility.yul\":9722:9727   */\n      dup3\n        /* \"#utility.yul\":9718:9734   */\n      add\n        /* \"#utility.yul\":9712:9735   */\n      mload\n        /* \"#utility.yul\":9748:9811   */\n      tag_299\n        /* \"#utility.yul\":9805:9809   */\n      0x00\n        /* \"#utility.yul\":9800:9803   */\n      dup6\n        /* \"#utility.yul\":9796:9810   */\n      add\n        /* \"#utility.yul\":9782:9794   */\n      dup3\n        /* \"#utility.yul\":9748:9811   */\n      tag_171\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":9654:9821   */\n      pop\n        /* \"#utility.yul\":9907:9911   */\n      0x20\n        /* \"#utility.yul\":9900:9905   */\n      dup3\n        /* \"#utility.yul\":9896:9912   */\n      add\n        /* \"#utility.yul\":9890:9913   */\n      mload\n        /* \"#utility.yul\":9926:9989   */\n      tag_300\n        /* \"#utility.yul\":9983:9987   */\n      0x20\n        /* \"#utility.yul\":9978:9981   */\n      dup6\n        /* \"#utility.yul\":9974:9988   */\n      add\n        /* \"#utility.yul\":9960:9972   */\n      dup3\n        /* \"#utility.yul\":9926:9989   */\n      tag_171\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":9831:9999   */\n      pop\n        /* \"#utility.yul\":10080:10084   */\n      0x40\n        /* \"#utility.yul\":10073:10078   */\n      dup3\n        /* \"#utility.yul\":10069:10085   */\n      add\n        /* \"#utility.yul\":10063:10086   */\n      mload\n        /* \"#utility.yul\":10099:10160   */\n      tag_301\n        /* \"#utility.yul\":10154:10158   */\n      0x40\n        /* \"#utility.yul\":10149:10152   */\n      dup6\n        /* \"#utility.yul\":10145:10159   */\n      add\n        /* \"#utility.yul\":10131:10143   */\n      dup3\n        /* \"#utility.yul\":10099:10160   */\n      tag_176\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":10009:10170   */\n      pop\n        /* \"#utility.yul\":10257:10261   */\n      0x60\n        /* \"#utility.yul\":10250:10255   */\n      dup3\n        /* \"#utility.yul\":10246:10262   */\n      add\n        /* \"#utility.yul\":10240:10263   */\n      mload\n        /* \"#utility.yul\":10276:10339   */\n      tag_302\n        /* \"#utility.yul\":10333:10337   */\n      0x60\n        /* \"#utility.yul\":10328:10331   */\n      dup6\n        /* \"#utility.yul\":10324:10338   */\n      add\n        /* \"#utility.yul\":10310:10322   */\n      dup3\n        /* \"#utility.yul\":10276:10339   */\n      tag_171\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":10180:10349   */\n      pop\n        /* \"#utility.yul\":10435:10439   */\n      0x80\n        /* \"#utility.yul\":10428:10433   */\n      dup3\n        /* \"#utility.yul\":10424:10440   */\n      add\n        /* \"#utility.yul\":10418:10441   */\n      mload\n        /* \"#utility.yul\":10454:10517   */\n      tag_303\n        /* \"#utility.yul\":10511:10515   */\n      0x80\n        /* \"#utility.yul\":10506:10509   */\n      dup6\n        /* \"#utility.yul\":10502:10516   */\n      add\n        /* \"#utility.yul\":10488:10500   */\n      dup3\n        /* \"#utility.yul\":10454:10517   */\n      tag_172\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":10359:10527   */\n      pop\n        /* \"#utility.yul\":10613:10617   */\n      0xa0\n        /* \"#utility.yul\":10606:10611   */\n      dup3\n        /* \"#utility.yul\":10602:10618   */\n      add\n        /* \"#utility.yul\":10596:10619   */\n      mload\n        /* \"#utility.yul\":10632:10695   */\n      tag_304\n        /* \"#utility.yul\":10689:10693   */\n      0xa0\n        /* \"#utility.yul\":10684:10687   */\n      dup6\n        /* \"#utility.yul\":10680:10694   */\n      add\n        /* \"#utility.yul\":10666:10678   */\n      dup3\n        /* \"#utility.yul\":10632:10695   */\n      tag_172\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":10537:10705   */\n      pop\n        /* \"#utility.yul\":10799:10803   */\n      0xc0\n        /* \"#utility.yul\":10792:10797   */\n      dup3\n        /* \"#utility.yul\":10788:10804   */\n      add\n        /* \"#utility.yul\":10782:10805   */\n      mload\n        /* \"#utility.yul\":10818:10881   */\n      tag_305\n        /* \"#utility.yul\":10875:10879   */\n      0xc0\n        /* \"#utility.yul\":10870:10873   */\n      dup6\n        /* \"#utility.yul\":10866:10880   */\n      add\n        /* \"#utility.yul\":10852:10864   */\n      dup3\n        /* \"#utility.yul\":10818:10881   */\n      tag_172\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":10715:10891   */\n      pop\n        /* \"#utility.yul\":10986:10990   */\n      0xe0\n        /* \"#utility.yul\":10979:10984   */\n      dup3\n        /* \"#utility.yul\":10975:10991   */\n      add\n        /* \"#utility.yul\":10969:10992   */\n      mload\n        /* \"#utility.yul\":11005:11068   */\n      tag_306\n        /* \"#utility.yul\":11062:11066   */\n      0xe0\n        /* \"#utility.yul\":11057:11060   */\n      dup6\n        /* \"#utility.yul\":11053:11067   */\n      add\n        /* \"#utility.yul\":11039:11051   */\n      dup3\n        /* \"#utility.yul\":11005:11068   */\n      tag_177\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":10901:11078   */\n      pop\n        /* \"#utility.yul\":9606:11085   */\n      pop\n        /* \"#utility.yul\":9462:11085   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11091:11470   */\n    tag_76:\n        /* \"#utility.yul\":11262:11266   */\n      0x00\n        /* \"#utility.yul\":11300:11303   */\n      0x0100\n        /* \"#utility.yul\":11289:11298   */\n      dup3\n        /* \"#utility.yul\":11285:11304   */\n      add\n        /* \"#utility.yul\":11277:11304   */\n      swap1\n      pop\n        /* \"#utility.yul\":11314:11463   */\n      tag_308\n        /* \"#utility.yul\":11460:11461   */\n      0x00\n        /* \"#utility.yul\":11449:11458   */\n      dup4\n        /* \"#utility.yul\":11445:11462   */\n      add\n        /* \"#utility.yul\":11436:11442   */\n      dup5\n        /* \"#utility.yul\":11314:11463   */\n      tag_178\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":11091:11470   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11572:13197   */\n    tag_179:\n        /* \"#utility.yul\":11749:11755   */\n      0x0100\n        /* \"#utility.yul\":11744:11747   */\n      dup3\n        /* \"#utility.yul\":11740:11756   */\n      add\n        /* \"#utility.yul\":11841:11845   */\n      0x00\n        /* \"#utility.yul\":11834:11839   */\n      dup3\n        /* \"#utility.yul\":11830:11846   */\n      add\n        /* \"#utility.yul\":11824:11847   */\n      mload\n        /* \"#utility.yul\":11860:11923   */\n      tag_310\n        /* \"#utility.yul\":11917:11921   */\n      0x00\n        /* \"#utility.yul\":11912:11915   */\n      dup6\n        /* \"#utility.yul\":11908:11922   */\n      add\n        /* \"#utility.yul\":11894:11906   */\n      dup3\n        /* \"#utility.yul\":11860:11923   */\n      tag_171\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":11766:11933   */\n      pop\n        /* \"#utility.yul\":12019:12023   */\n      0x20\n        /* \"#utility.yul\":12012:12017   */\n      dup3\n        /* \"#utility.yul\":12008:12024   */\n      add\n        /* \"#utility.yul\":12002:12025   */\n      mload\n        /* \"#utility.yul\":12038:12101   */\n      tag_311\n        /* \"#utility.yul\":12095:12099   */\n      0x20\n        /* \"#utility.yul\":12090:12093   */\n      dup6\n        /* \"#utility.yul\":12086:12100   */\n      add\n        /* \"#utility.yul\":12072:12084   */\n      dup3\n        /* \"#utility.yul\":12038:12101   */\n      tag_171\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":11943:12111   */\n      pop\n        /* \"#utility.yul\":12192:12196   */\n      0x40\n        /* \"#utility.yul\":12185:12190   */\n      dup3\n        /* \"#utility.yul\":12181:12197   */\n      add\n        /* \"#utility.yul\":12175:12198   */\n      mload\n        /* \"#utility.yul\":12211:12272   */\n      tag_312\n        /* \"#utility.yul\":12266:12270   */\n      0x40\n        /* \"#utility.yul\":12261:12264   */\n      dup6\n        /* \"#utility.yul\":12257:12271   */\n      add\n        /* \"#utility.yul\":12243:12255   */\n      dup3\n        /* \"#utility.yul\":12211:12272   */\n      tag_176\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":12121:12282   */\n      pop\n        /* \"#utility.yul\":12369:12373   */\n      0x60\n        /* \"#utility.yul\":12362:12367   */\n      dup3\n        /* \"#utility.yul\":12358:12374   */\n      add\n        /* \"#utility.yul\":12352:12375   */\n      mload\n        /* \"#utility.yul\":12388:12451   */\n      tag_313\n        /* \"#utility.yul\":12445:12449   */\n      0x60\n        /* \"#utility.yul\":12440:12443   */\n      dup6\n        /* \"#utility.yul\":12436:12450   */\n      add\n        /* \"#utility.yul\":12422:12434   */\n      dup3\n        /* \"#utility.yul\":12388:12451   */\n      tag_171\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":12292:12461   */\n      pop\n        /* \"#utility.yul\":12547:12551   */\n      0x80\n        /* \"#utility.yul\":12540:12545   */\n      dup3\n        /* \"#utility.yul\":12536:12552   */\n      add\n        /* \"#utility.yul\":12530:12553   */\n      mload\n        /* \"#utility.yul\":12566:12629   */\n      tag_314\n        /* \"#utility.yul\":12623:12627   */\n      0x80\n        /* \"#utility.yul\":12618:12621   */\n      dup6\n        /* \"#utility.yul\":12614:12628   */\n      add\n        /* \"#utility.yul\":12600:12612   */\n      dup3\n        /* \"#utility.yul\":12566:12629   */\n      tag_172\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":12471:12639   */\n      pop\n        /* \"#utility.yul\":12726:12730   */\n      0xa0\n        /* \"#utility.yul\":12719:12724   */\n      dup3\n        /* \"#utility.yul\":12715:12731   */\n      add\n        /* \"#utility.yul\":12709:12732   */\n      mload\n        /* \"#utility.yul\":12745:12808   */\n      tag_315\n        /* \"#utility.yul\":12802:12806   */\n      0xa0\n        /* \"#utility.yul\":12797:12800   */\n      dup6\n        /* \"#utility.yul\":12793:12807   */\n      add\n        /* \"#utility.yul\":12779:12791   */\n      dup3\n        /* \"#utility.yul\":12745:12808   */\n      tag_172\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":12649:12818   */\n      pop\n        /* \"#utility.yul\":12911:12915   */\n      0xc0\n        /* \"#utility.yul\":12904:12909   */\n      dup3\n        /* \"#utility.yul\":12900:12916   */\n      add\n        /* \"#utility.yul\":12894:12917   */\n      mload\n        /* \"#utility.yul\":12930:12993   */\n      tag_316\n        /* \"#utility.yul\":12987:12991   */\n      0xc0\n        /* \"#utility.yul\":12982:12985   */\n      dup6\n        /* \"#utility.yul\":12978:12992   */\n      add\n        /* \"#utility.yul\":12964:12976   */\n      dup3\n        /* \"#utility.yul\":12930:12993   */\n      tag_172\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":12828:13003   */\n      pop\n        /* \"#utility.yul\":13098:13102   */\n      0xe0\n        /* \"#utility.yul\":13091:13096   */\n      dup3\n        /* \"#utility.yul\":13087:13103   */\n      add\n        /* \"#utility.yul\":13081:13104   */\n      mload\n        /* \"#utility.yul\":13117:13180   */\n      tag_317\n        /* \"#utility.yul\":13174:13178   */\n      0xe0\n        /* \"#utility.yul\":13169:13172   */\n      dup6\n        /* \"#utility.yul\":13165:13179   */\n      add\n        /* \"#utility.yul\":13151:13163   */\n      dup3\n        /* \"#utility.yul\":13117:13180   */\n      tag_177\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":13013:13190   */\n      pop\n        /* \"#utility.yul\":11718:13197   */\n      pop\n        /* \"#utility.yul\":11572:13197   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13203:13586   */\n    tag_84:\n        /* \"#utility.yul\":13376:13380   */\n      0x00\n        /* \"#utility.yul\":13414:13417   */\n      0x0100\n        /* \"#utility.yul\":13403:13412   */\n      dup3\n        /* \"#utility.yul\":13399:13418   */\n      add\n        /* \"#utility.yul\":13391:13418   */\n      swap1\n      pop\n        /* \"#utility.yul\":13428:13579   */\n      tag_319\n        /* \"#utility.yul\":13576:13577   */\n      0x00\n        /* \"#utility.yul\":13565:13574   */\n      dup4\n        /* \"#utility.yul\":13561:13578   */\n      add\n        /* \"#utility.yul\":13552:13558   */\n      dup5\n        /* \"#utility.yul\":13428:13579   */\n      tag_179\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":13203:13586   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13674:14841   */\n    tag_180:\n        /* \"#utility.yul\":13809:13812   */\n      0x00\n        /* \"#utility.yul\":13845:13849   */\n      0xa0\n        /* \"#utility.yul\":13840:13843   */\n      dup4\n        /* \"#utility.yul\":13836:13850   */\n      add\n        /* \"#utility.yul\":13932:13936   */\n      0x00\n        /* \"#utility.yul\":13925:13930   */\n      dup4\n        /* \"#utility.yul\":13921:13937   */\n      add\n        /* \"#utility.yul\":13915:13938   */\n      mload\n        /* \"#utility.yul\":13985:13988   */\n      dup5\n        /* \"#utility.yul\":13979:13983   */\n      dup3\n        /* \"#utility.yul\":13975:13989   */\n      sub\n        /* \"#utility.yul\":13968:13972   */\n      0x00\n        /* \"#utility.yul\":13963:13966   */\n      dup7\n        /* \"#utility.yul\":13959:13973   */\n      add\n        /* \"#utility.yul\":13952:13990   */\n      mstore\n        /* \"#utility.yul\":14011:14082   */\n      tag_321\n        /* \"#utility.yul\":14077:14081   */\n      dup3\n        /* \"#utility.yul\":14063:14075   */\n      dup3\n        /* \"#utility.yul\":14011:14082   */\n      tag_170\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":14003:14082   */\n      swap2\n      pop\n        /* \"#utility.yul\":13860:14093   */\n      pop\n        /* \"#utility.yul\":14180:14184   */\n      0x20\n        /* \"#utility.yul\":14173:14178   */\n      dup4\n        /* \"#utility.yul\":14169:14185   */\n      add\n        /* \"#utility.yul\":14163:14186   */\n      mload\n        /* \"#utility.yul\":14199:14262   */\n      tag_322\n        /* \"#utility.yul\":14256:14260   */\n      0x20\n        /* \"#utility.yul\":14251:14254   */\n      dup7\n        /* \"#utility.yul\":14247:14261   */\n      add\n        /* \"#utility.yul\":14233:14245   */\n      dup3\n        /* \"#utility.yul\":14199:14262   */\n      tag_171\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":14103:14272   */\n      pop\n        /* \"#utility.yul\":14358:14362   */\n      0x40\n        /* \"#utility.yul\":14351:14356   */\n      dup4\n        /* \"#utility.yul\":14347:14363   */\n      add\n        /* \"#utility.yul\":14341:14364   */\n      mload\n        /* \"#utility.yul\":14377:14440   */\n      tag_323\n        /* \"#utility.yul\":14434:14438   */\n      0x40\n        /* \"#utility.yul\":14429:14432   */\n      dup7\n        /* \"#utility.yul\":14425:14439   */\n      add\n        /* \"#utility.yul\":14411:14423   */\n      dup3\n        /* \"#utility.yul\":14377:14440   */\n      tag_172\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":14282:14450   */\n      pop\n        /* \"#utility.yul\":14536:14540   */\n      0x60\n        /* \"#utility.yul\":14529:14534   */\n      dup4\n        /* \"#utility.yul\":14525:14541   */\n      add\n        /* \"#utility.yul\":14519:14542   */\n      mload\n        /* \"#utility.yul\":14555:14618   */\n      tag_324\n        /* \"#utility.yul\":14612:14616   */\n      0x60\n        /* \"#utility.yul\":14607:14610   */\n      dup7\n        /* \"#utility.yul\":14603:14617   */\n      add\n        /* \"#utility.yul\":14589:14601   */\n      dup3\n        /* \"#utility.yul\":14555:14618   */\n      tag_172\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":14460:14628   */\n      pop\n        /* \"#utility.yul\":14722:14726   */\n      0x80\n        /* \"#utility.yul\":14715:14720   */\n      dup4\n        /* \"#utility.yul\":14711:14727   */\n      add\n        /* \"#utility.yul\":14705:14728   */\n      mload\n        /* \"#utility.yul\":14741:14804   */\n      tag_325\n        /* \"#utility.yul\":14798:14802   */\n      0x80\n        /* \"#utility.yul\":14793:14796   */\n      dup7\n        /* \"#utility.yul\":14789:14803   */\n      add\n        /* \"#utility.yul\":14775:14787   */\n      dup3\n        /* \"#utility.yul\":14741:14804   */\n      tag_172\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":14638:14814   */\n      pop\n        /* \"#utility.yul\":14831:14835   */\n      dup1\n        /* \"#utility.yul\":14824:14835   */\n      swap2\n      pop\n        /* \"#utility.yul\":13814:14841   */\n      pop\n        /* \"#utility.yul\":13674:14841   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14847:15252   */\n    tag_98:\n        /* \"#utility.yul\":15006:15010   */\n      0x00\n        /* \"#utility.yul\":15044:15046   */\n      0x20\n        /* \"#utility.yul\":15033:15042   */\n      dup3\n        /* \"#utility.yul\":15029:15047   */\n      add\n        /* \"#utility.yul\":15021:15047   */\n      swap1\n      pop\n        /* \"#utility.yul\":15093:15102   */\n      dup2\n        /* \"#utility.yul\":15087:15091   */\n      dup2\n        /* \"#utility.yul\":15083:15103   */\n      sub\n        /* \"#utility.yul\":15079:15080   */\n      0x00\n        /* \"#utility.yul\":15068:15077   */\n      dup4\n        /* \"#utility.yul\":15064:15081   */\n      add\n        /* \"#utility.yul\":15057:15104   */\n      mstore\n        /* \"#utility.yul\":15121:15245   */\n      tag_327\n        /* \"#utility.yul\":15240:15244   */\n      dup2\n        /* \"#utility.yul\":15231:15237   */\n      dup5\n        /* \"#utility.yul\":15121:15245   */\n      tag_180\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":15113:15245   */\n      swap1\n      pop\n        /* \"#utility.yul\":14847:15252   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15258:15700   */\n    tag_104:\n        /* \"#utility.yul\":15407:15411   */\n      0x00\n        /* \"#utility.yul\":15445:15447   */\n      0x60\n        /* \"#utility.yul\":15434:15443   */\n      dup3\n        /* \"#utility.yul\":15430:15448   */\n      add\n        /* \"#utility.yul\":15422:15448   */\n      swap1\n      pop\n        /* \"#utility.yul\":15458:15529   */\n      tag_329\n        /* \"#utility.yul\":15526:15527   */\n      0x00\n        /* \"#utility.yul\":15515:15524   */\n      dup4\n        /* \"#utility.yul\":15511:15528   */\n      add\n        /* \"#utility.yul\":15502:15508   */\n      dup7\n        /* \"#utility.yul\":15458:15529   */\n      tag_153\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":15539:15611   */\n      tag_330\n        /* \"#utility.yul\":15607:15609   */\n      0x20\n        /* \"#utility.yul\":15596:15605   */\n      dup4\n        /* \"#utility.yul\":15592:15610   */\n      add\n        /* \"#utility.yul\":15583:15589   */\n      dup6\n        /* \"#utility.yul\":15539:15611   */\n      tag_153\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":15621:15693   */\n      tag_331\n        /* \"#utility.yul\":15689:15691   */\n      0x40\n        /* \"#utility.yul\":15678:15687   */\n      dup4\n        /* \"#utility.yul\":15674:15692   */\n      add\n        /* \"#utility.yul\":15665:15671   */\n      dup5\n        /* \"#utility.yul\":15621:15693   */\n      tag_150\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":15258:15700   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15706:15853   */\n    tag_181:\n        /* \"#utility.yul\":15807:15818   */\n      0x00\n        /* \"#utility.yul\":15844:15847   */\n      dup2\n        /* \"#utility.yul\":15829:15847   */\n      swap1\n      pop\n        /* \"#utility.yul\":15706:15853   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15859:16245   */\n    tag_182:\n        /* \"#utility.yul\":15963:15966   */\n      0x00\n        /* \"#utility.yul\":15991:16029   */\n      tag_334\n        /* \"#utility.yul\":16023:16028   */\n      dup3\n        /* \"#utility.yul\":15991:16029   */\n      tag_166\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":16045:16133   */\n      tag_335\n        /* \"#utility.yul\":16126:16132   */\n      dup2\n        /* \"#utility.yul\":16121:16124   */\n      dup6\n        /* \"#utility.yul\":16045:16133   */\n      tag_181\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":16038:16133   */\n      swap4\n      pop\n        /* \"#utility.yul\":16142:16207   */\n      tag_336\n        /* \"#utility.yul\":16200:16206   */\n      dup2\n        /* \"#utility.yul\":16195:16198   */\n      dup6\n        /* \"#utility.yul\":16188:16192   */\n      0x20\n        /* \"#utility.yul\":16181:16186   */\n      dup7\n        /* \"#utility.yul\":16177:16193   */\n      add\n        /* \"#utility.yul\":16142:16207   */\n      tag_168\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":16232:16238   */\n      dup1\n        /* \"#utility.yul\":16227:16230   */\n      dup5\n        /* \"#utility.yul\":16223:16239   */\n      add\n        /* \"#utility.yul\":16216:16239   */\n      swap2\n      pop\n        /* \"#utility.yul\":15967:16245   */\n      pop\n        /* \"#utility.yul\":15859:16245   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16251:16522   */\n    tag_106:\n        /* \"#utility.yul\":16381:16384   */\n      0x00\n        /* \"#utility.yul\":16403:16496   */\n      tag_338\n        /* \"#utility.yul\":16492:16495   */\n      dup3\n        /* \"#utility.yul\":16483:16489   */\n      dup5\n        /* \"#utility.yul\":16403:16496   */\n      tag_182\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":16396:16496   */\n      swap2\n      pop\n        /* \"#utility.yul\":16513:16516   */\n      dup2\n        /* \"#utility.yul\":16506:16516   */\n      swap1\n      pop\n        /* \"#utility.yul\":16251:16522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16528:16618   */\n    tag_183:\n        /* \"#utility.yul\":16562:16569   */\n      0x00\n        /* \"#utility.yul\":16605:16610   */\n      dup2\n        /* \"#utility.yul\":16598:16611   */\n      iszero\n        /* \"#utility.yul\":16591:16612   */\n      iszero\n        /* \"#utility.yul\":16580:16612   */\n      swap1\n      pop\n        /* \"#utility.yul\":16528:16618   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16624:16740   */\n    tag_184:\n        /* \"#utility.yul\":16694:16715   */\n      tag_341\n        /* \"#utility.yul\":16709:16714   */\n      dup2\n        /* \"#utility.yul\":16694:16715   */\n      tag_183\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":16687:16692   */\n      dup2\n        /* \"#utility.yul\":16684:16716   */\n      eq\n        /* \"#utility.yul\":16674:16734   */\n      tag_342\n      jumpi\n        /* \"#utility.yul\":16730:16731   */\n      0x00\n        /* \"#utility.yul\":16727:16728   */\n      dup1\n        /* \"#utility.yul\":16720:16732   */\n      revert\n        /* \"#utility.yul\":16674:16734   */\n    tag_342:\n        /* \"#utility.yul\":16624:16740   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16746:16883   */\n    tag_185:\n        /* \"#utility.yul\":16800:16805   */\n      0x00\n        /* \"#utility.yul\":16831:16837   */\n      dup2\n        /* \"#utility.yul\":16825:16838   */\n      mload\n        /* \"#utility.yul\":16816:16838   */\n      swap1\n      pop\n        /* \"#utility.yul\":16847:16877   */\n      tag_344\n        /* \"#utility.yul\":16871:16876   */\n      dup2\n        /* \"#utility.yul\":16847:16877   */\n      tag_184\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":16746:16883   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16889:17234   */\n    tag_113:\n        /* \"#utility.yul\":16956:16962   */\n      0x00\n        /* \"#utility.yul\":17005:17007   */\n      0x20\n        /* \"#utility.yul\":16993:17002   */\n      dup3\n        /* \"#utility.yul\":16984:16991   */\n      dup5\n        /* \"#utility.yul\":16980:17003   */\n      sub\n        /* \"#utility.yul\":16976:17008   */\n      slt\n        /* \"#utility.yul\":16973:17092   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":17011:17090   */\n      tag_347\n      tag_145\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":16973:17092   */\n    tag_346:\n        /* \"#utility.yul\":17131:17132   */\n      0x00\n        /* \"#utility.yul\":17156:17217   */\n      tag_348\n        /* \"#utility.yul\":17209:17216   */\n      dup5\n        /* \"#utility.yul\":17200:17206   */\n      dup3\n        /* \"#utility.yul\":17189:17198   */\n      dup6\n        /* \"#utility.yul\":17185:17207   */\n      add\n        /* \"#utility.yul\":17156:17217   */\n      tag_185\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":17146:17217   */\n      swap2\n      pop\n        /* \"#utility.yul\":17102:17227   */\n      pop\n        /* \"#utility.yul\":16889:17234   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17240:17409   */\n    tag_186:\n        /* \"#utility.yul\":17324:17335   */\n      0x00\n        /* \"#utility.yul\":17358:17364   */\n      dup3\n        /* \"#utility.yul\":17353:17356   */\n      dup3\n        /* \"#utility.yul\":17346:17365   */\n      mstore\n        /* \"#utility.yul\":17398:17402   */\n      0x20\n        /* \"#utility.yul\":17393:17396   */\n      dup3\n        /* \"#utility.yul\":17389:17403   */\n      add\n        /* \"#utility.yul\":17374:17403   */\n      swap1\n      pop\n        /* \"#utility.yul\":17240:17409   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17415:17568   */\n    tag_187:\n        /* \"#utility.yul\":17555:17560   */\n      0x5354460000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17551:17552   */\n      0x00\n        /* \"#utility.yul\":17543:17549   */\n      dup3\n        /* \"#utility.yul\":17539:17553   */\n      add\n        /* \"#utility.yul\":17532:17561   */\n      mstore\n        /* \"#utility.yul\":17415:17568   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17574:17939   */\n    tag_188:\n        /* \"#utility.yul\":17716:17719   */\n      0x00\n        /* \"#utility.yul\":17737:17803   */\n      tag_352\n        /* \"#utility.yul\":17801:17802   */\n      0x03\n        /* \"#utility.yul\":17796:17799   */\n      dup4\n        /* \"#utility.yul\":17737:17803   */\n      tag_186\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":17730:17803   */\n      swap2\n      pop\n        /* \"#utility.yul\":17812:17905   */\n      tag_353\n        /* \"#utility.yul\":17901:17904   */\n      dup3\n        /* \"#utility.yul\":17812:17905   */\n      tag_187\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":17930:17932   */\n      0x20\n        /* \"#utility.yul\":17925:17928   */\n      dup3\n        /* \"#utility.yul\":17921:17933   */\n      add\n        /* \"#utility.yul\":17914:17933   */\n      swap1\n      pop\n        /* \"#utility.yul\":17574:17939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17945:18364   */\n    tag_116:\n        /* \"#utility.yul\":18111:18115   */\n      0x00\n        /* \"#utility.yul\":18149:18151   */\n      0x20\n        /* \"#utility.yul\":18138:18147   */\n      dup3\n        /* \"#utility.yul\":18134:18152   */\n      add\n        /* \"#utility.yul\":18126:18152   */\n      swap1\n      pop\n        /* \"#utility.yul\":18198:18207   */\n      dup2\n        /* \"#utility.yul\":18192:18196   */\n      dup2\n        /* \"#utility.yul\":18188:18208   */\n      sub\n        /* \"#utility.yul\":18184:18185   */\n      0x00\n        /* \"#utility.yul\":18173:18182   */\n      dup4\n        /* \"#utility.yul\":18169:18186   */\n      add\n        /* \"#utility.yul\":18162:18209   */\n      mstore\n        /* \"#utility.yul\":18226:18357   */\n      tag_355\n        /* \"#utility.yul\":18352:18356   */\n      dup2\n        /* \"#utility.yul\":18226:18357   */\n      tag_188\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":18218:18357   */\n      swap1\n      pop\n        /* \"#utility.yul\":17945:18364   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18370:18702   */\n    tag_119:\n        /* \"#utility.yul\":18491:18495   */\n      0x00\n        /* \"#utility.yul\":18529:18531   */\n      0x40\n        /* \"#utility.yul\":18518:18527   */\n      dup3\n        /* \"#utility.yul\":18514:18532   */\n      add\n        /* \"#utility.yul\":18506:18532   */\n      swap1\n      pop\n        /* \"#utility.yul\":18542:18613   */\n      tag_357\n        /* \"#utility.yul\":18610:18611   */\n      0x00\n        /* \"#utility.yul\":18599:18608   */\n      dup4\n        /* \"#utility.yul\":18595:18612   */\n      add\n        /* \"#utility.yul\":18586:18592   */\n      dup6\n        /* \"#utility.yul\":18542:18613   */\n      tag_153\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":18623:18695   */\n      tag_358\n        /* \"#utility.yul\":18691:18693   */\n      0x20\n        /* \"#utility.yul\":18680:18689   */\n      dup4\n        /* \"#utility.yul\":18676:18694   */\n      add\n        /* \"#utility.yul\":18667:18673   */\n      dup5\n        /* \"#utility.yul\":18623:18695   */\n      tag_150\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":18370:18702   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18708:18860   */\n    tag_189:\n        /* \"#utility.yul\":18848:18852   */\n      0x5341000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18844:18845   */\n      0x00\n        /* \"#utility.yul\":18836:18842   */\n      dup3\n        /* \"#utility.yul\":18832:18846   */\n      add\n        /* \"#utility.yul\":18825:18853   */\n      mstore\n        /* \"#utility.yul\":18708:18860   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18866:19231   */\n    tag_190:\n        /* \"#utility.yul\":19008:19011   */\n      0x00\n        /* \"#utility.yul\":19029:19095   */\n      tag_361\n        /* \"#utility.yul\":19093:19094   */\n      0x02\n        /* \"#utility.yul\":19088:19091   */\n      dup4\n        /* \"#utility.yul\":19029:19095   */\n      tag_186\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":19022:19095   */\n      swap2\n      pop\n        /* \"#utility.yul\":19104:19197   */\n      tag_362\n        /* \"#utility.yul\":19193:19196   */\n      dup3\n        /* \"#utility.yul\":19104:19197   */\n      tag_189\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":19222:19224   */\n      0x20\n        /* \"#utility.yul\":19217:19220   */\n      dup3\n        /* \"#utility.yul\":19213:19225   */\n      add\n        /* \"#utility.yul\":19206:19225   */\n      swap1\n      pop\n        /* \"#utility.yul\":18866:19231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19237:19656   */\n    tag_129:\n        /* \"#utility.yul\":19403:19407   */\n      0x00\n        /* \"#utility.yul\":19441:19443   */\n      0x20\n        /* \"#utility.yul\":19430:19439   */\n      dup3\n        /* \"#utility.yul\":19426:19444   */\n      add\n        /* \"#utility.yul\":19418:19444   */\n      swap1\n      pop\n        /* \"#utility.yul\":19490:19499   */\n      dup2\n        /* \"#utility.yul\":19484:19488   */\n      dup2\n        /* \"#utility.yul\":19480:19500   */\n      sub\n        /* \"#utility.yul\":19476:19477   */\n      0x00\n        /* \"#utility.yul\":19465:19474   */\n      dup4\n        /* \"#utility.yul\":19461:19478   */\n      add\n        /* \"#utility.yul\":19454:19501   */\n      mstore\n        /* \"#utility.yul\":19518:19649   */\n      tag_364\n        /* \"#utility.yul\":19644:19648   */\n      dup2\n        /* \"#utility.yul\":19518:19649   */\n      tag_190\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":19510:19649   */\n      swap1\n      pop\n        /* \"#utility.yul\":19237:19656   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19662:19814   */\n    tag_191:\n        /* \"#utility.yul\":19802:19806   */\n      0x5354000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19798:19799   */\n      0x00\n        /* \"#utility.yul\":19790:19796   */\n      dup3\n        /* \"#utility.yul\":19786:19800   */\n      add\n        /* \"#utility.yul\":19779:19807   */\n      mstore\n        /* \"#utility.yul\":19662:19814   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19820:20185   */\n    tag_192:\n        /* \"#utility.yul\":19962:19965   */\n      0x00\n        /* \"#utility.yul\":19983:20049   */\n      tag_367\n        /* \"#utility.yul\":20047:20048   */\n      0x02\n        /* \"#utility.yul\":20042:20045   */\n      dup4\n        /* \"#utility.yul\":19983:20049   */\n      tag_186\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":19976:20049   */\n      swap2\n      pop\n        /* \"#utility.yul\":20058:20151   */\n      tag_368\n        /* \"#utility.yul\":20147:20150   */\n      dup3\n        /* \"#utility.yul\":20058:20151   */\n      tag_191\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":20176:20178   */\n      0x20\n        /* \"#utility.yul\":20171:20174   */\n      dup3\n        /* \"#utility.yul\":20167:20179   */\n      add\n        /* \"#utility.yul\":20160:20179   */\n      swap1\n      pop\n        /* \"#utility.yul\":19820:20185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20191:20610   */\n    tag_141:\n        /* \"#utility.yul\":20357:20361   */\n      0x00\n        /* \"#utility.yul\":20395:20397   */\n      0x20\n        /* \"#utility.yul\":20384:20393   */\n      dup3\n        /* \"#utility.yul\":20380:20398   */\n      add\n        /* \"#utility.yul\":20372:20398   */\n      swap1\n      pop\n        /* \"#utility.yul\":20444:20453   */\n      dup2\n        /* \"#utility.yul\":20438:20442   */\n      dup2\n        /* \"#utility.yul\":20434:20454   */\n      sub\n        /* \"#utility.yul\":20430:20431   */\n      0x00\n        /* \"#utility.yul\":20419:20428   */\n      dup4\n        /* \"#utility.yul\":20415:20432   */\n      add\n        /* \"#utility.yul\":20408:20455   */\n      mstore\n        /* \"#utility.yul\":20472:20603   */\n      tag_370\n        /* \"#utility.yul\":20598:20602   */\n      dup2\n        /* \"#utility.yul\":20472:20603   */\n      tag_192\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":20464:20603   */\n      swap1\n      pop\n        /* \"#utility.yul\":20191:20610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203f217f4a40acc2b912045fb4f20721d20822bedb201e7b713c002c3943d0141564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_414": {
									"entryPoint": null,
									"id": 414,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_ISwapRouter_$191_fromMemory": {
									"entryPoint": 358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ISwapRouter_$191t_addresst_addresst_address_fromMemory": {
									"entryPoint": 420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ISwapRouter_$191": {
									"entryPoint": 319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 267,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ISwapRouter_$191": {
									"entryPoint": 336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2180:5",
										"nodeType": "YulBlock",
										"src": "0:2180:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "632:51:5",
													"nodeType": "YulBlock",
													"src": "632:51:5",
													"statements": [
														{
															"nativeSrc": "642:35:5",
															"nodeType": "YulAssignment",
															"src": "642:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "671:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "671:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "653:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "653:17:5"
																},
																"nativeSrc": "653:24:5",
																"nodeType": "YulFunctionCall",
																"src": "653:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "642:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "642:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ISwapRouter_$191",
												"nativeSrc": "568:115:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "614:5:5",
														"nodeType": "YulTypedName",
														"src": "614:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "624:7:5",
														"nodeType": "YulTypedName",
														"src": "624:7:5",
														"type": ""
													}
												],
												"src": "568:115:5"
											},
											{
												"body": {
													"nativeSrc": "751:98:5",
													"nodeType": "YulBlock",
													"src": "751:98:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "827:16:5",
																"nodeType": "YulBlock",
																"src": "827:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:5",
																					"nodeType": "YulLiteral",
																					"src": "836:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:1:5",
																					"nodeType": "YulLiteral",
																					"src": "839:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "829:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "829:6:5"
																			},
																			"nativeSrc": "829:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "829:12:5"
																		},
																		"nativeSrc": "829:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "829:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "774:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "774:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "818:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "818:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ISwapRouter_$191",
																					"nativeSrc": "781:36:5",
																					"nodeType": "YulIdentifier",
																					"src": "781:36:5"
																				},
																				"nativeSrc": "781:43:5",
																				"nodeType": "YulFunctionCall",
																				"src": "781:43:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "771:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "771:2:5"
																		},
																		"nativeSrc": "771:54:5",
																		"nodeType": "YulFunctionCall",
																		"src": "771:54:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "764:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "764:6:5"
																},
																"nativeSrc": "764:62:5",
																"nodeType": "YulFunctionCall",
																"src": "764:62:5"
															},
															"nativeSrc": "761:82:5",
															"nodeType": "YulIf",
															"src": "761:82:5"
														}
													]
												},
												"name": "validator_revert_t_contract$_ISwapRouter_$191",
												"nativeSrc": "689:160:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "744:5:5",
														"nodeType": "YulTypedName",
														"src": "744:5:5",
														"type": ""
													}
												],
												"src": "689:160:5"
											},
											{
												"body": {
													"nativeSrc": "937:99:5",
													"nodeType": "YulBlock",
													"src": "937:99:5",
													"statements": [
														{
															"nativeSrc": "947:22:5",
															"nodeType": "YulAssignment",
															"src": "947:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "962:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "956:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "956:5:5"
																},
																"nativeSrc": "956:13:5",
																"nodeType": "YulFunctionCall",
																"src": "956:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "947:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "947:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ISwapRouter_$191",
																	"nativeSrc": "978:45:5",
																	"nodeType": "YulIdentifier",
																	"src": "978:45:5"
																},
																"nativeSrc": "978:52:5",
																"nodeType": "YulFunctionCall",
																"src": "978:52:5"
															},
															"nativeSrc": "978:52:5",
															"nodeType": "YulExpressionStatement",
															"src": "978:52:5"
														}
													]
												},
												"name": "abi_decode_t_contract$_ISwapRouter_$191_fromMemory",
												"nativeSrc": "855:181:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "915:6:5",
														"nodeType": "YulTypedName",
														"src": "915:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "923:3:5",
														"nodeType": "YulTypedName",
														"src": "923:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "931:5:5",
														"nodeType": "YulTypedName",
														"src": "931:5:5",
														"type": ""
													}
												],
												"src": "855:181:5"
											},
											{
												"body": {
													"nativeSrc": "1085:79:5",
													"nodeType": "YulBlock",
													"src": "1085:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1142:16:5",
																"nodeType": "YulBlock",
																"src": "1142:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1151:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1151:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1154:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1154:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1144:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1144:6:5"
																			},
																			"nativeSrc": "1144:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1144:12:5"
																		},
																		"nativeSrc": "1144:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1144:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1108:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1108:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1133:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1133:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1115:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1115:17:5"
																				},
																				"nativeSrc": "1115:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1115:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1105:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1105:2:5"
																		},
																		"nativeSrc": "1105:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1105:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1098:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1098:6:5"
																},
																"nativeSrc": "1098:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1098:43:5"
															},
															"nativeSrc": "1095:63:5",
															"nodeType": "YulIf",
															"src": "1095:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1042:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1078:5:5",
														"nodeType": "YulTypedName",
														"src": "1078:5:5",
														"type": ""
													}
												],
												"src": "1042:122:5"
											},
											{
												"body": {
													"nativeSrc": "1233:80:5",
													"nodeType": "YulBlock",
													"src": "1233:80:5",
													"statements": [
														{
															"nativeSrc": "1243:22:5",
															"nodeType": "YulAssignment",
															"src": "1243:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1258:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1258:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1252:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1252:5:5"
																},
																"nativeSrc": "1252:13:5",
																"nodeType": "YulFunctionCall",
																"src": "1252:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1243:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1243:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1301:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1301:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1274:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1274:26:5"
																},
																"nativeSrc": "1274:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1274:33:5"
															},
															"nativeSrc": "1274:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1274:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1170:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1211:6:5",
														"nodeType": "YulTypedName",
														"src": "1211:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1219:3:5",
														"nodeType": "YulTypedName",
														"src": "1219:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1227:5:5",
														"nodeType": "YulTypedName",
														"src": "1227:5:5",
														"type": ""
													}
												],
												"src": "1170:143:5"
											},
											{
												"body": {
													"nativeSrc": "1466:711:5",
													"nodeType": "YulBlock",
													"src": "1466:711:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1513:83:5",
																"nodeType": "YulBlock",
																"src": "1513:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1515:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1515:77:5"
																			},
																			"nativeSrc": "1515:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1515:79:5"
																		},
																		"nativeSrc": "1515:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1515:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1487:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1487:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1496:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1496:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1483:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1483:3:5"
																		},
																		"nativeSrc": "1483:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1483:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1508:3:5",
																		"nodeType": "YulLiteral",
																		"src": "1508:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1479:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1479:3:5"
																},
																"nativeSrc": "1479:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1479:33:5"
															},
															"nativeSrc": "1476:120:5",
															"nodeType": "YulIf",
															"src": "1476:120:5"
														},
														{
															"nativeSrc": "1606:147:5",
															"nodeType": "YulBlock",
															"src": "1606:147:5",
															"statements": [
																{
																	"nativeSrc": "1621:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1621:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1635:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1625:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1625:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1650:93:5",
																	"nodeType": "YulAssignment",
																	"src": "1650:93:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1715:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1715:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1726:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1726:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1711:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1711:3:5"
																				},
																				"nativeSrc": "1711:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1711:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1735:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1735:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ISwapRouter_$191_fromMemory",
																			"nativeSrc": "1660:50:5",
																			"nodeType": "YulIdentifier",
																			"src": "1660:50:5"
																		},
																		"nativeSrc": "1660:83:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1660:83:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1650:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1650:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1763:129:5",
															"nodeType": "YulBlock",
															"src": "1763:129:5",
															"statements": [
																{
																	"nativeSrc": "1778:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1778:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1792:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1792:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1782:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1782:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1808:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1808:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1854:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1854:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1865:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1865:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1850:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1850:3:5"
																				},
																				"nativeSrc": "1850:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1850:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1874:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1874:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1818:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1818:31:5"
																		},
																		"nativeSrc": "1818:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1808:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1808:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1902:129:5",
															"nodeType": "YulBlock",
															"src": "1902:129:5",
															"statements": [
																{
																	"nativeSrc": "1917:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1917:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1931:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1931:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1921:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1921:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1947:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1947:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1993:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1993:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2004:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2004:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1989:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1989:3:5"
																				},
																				"nativeSrc": "1989:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1989:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2013:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2013:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1957:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1957:31:5"
																		},
																		"nativeSrc": "1957:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1957:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1947:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1947:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2041:129:5",
															"nodeType": "YulBlock",
															"src": "2041:129:5",
															"statements": [
																{
																	"nativeSrc": "2056:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2056:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2070:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2070:2:5",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2060:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2060:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2086:74:5",
																	"nodeType": "YulAssignment",
																	"src": "2086:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2132:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2132:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2143:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2143:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2128:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2128:3:5"
																				},
																				"nativeSrc": "2128:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2128:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2152:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2152:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "2096:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "2096:31:5"
																		},
																		"nativeSrc": "2096:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2096:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "2086:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2086:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ISwapRouter_$191t_addresst_addresst_address_fromMemory",
												"nativeSrc": "1319:858:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1412:9:5",
														"nodeType": "YulTypedName",
														"src": "1412:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1423:7:5",
														"nodeType": "YulTypedName",
														"src": "1423:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1435:6:5",
														"nodeType": "YulTypedName",
														"src": "1435:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1443:6:5",
														"nodeType": "YulTypedName",
														"src": "1443:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1451:6:5",
														"nodeType": "YulTypedName",
														"src": "1451:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1459:6:5",
														"nodeType": "YulTypedName",
														"src": "1459:6:5",
														"type": ""
													}
												],
												"src": "1319:858:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ISwapRouter_$191(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ISwapRouter_$191(value) {\n        if iszero(eq(value, cleanup_t_contract$_ISwapRouter_$191(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ISwapRouter_$191_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ISwapRouter_$191(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ISwapRouter_$191t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ISwapRouter_$191_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH2 0x100 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1B5A CODESIZE SUB DUP1 PUSH2 0x1B5A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x1A4 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP POP PUSH2 0x208 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x138 DUP3 PUSH2 0x10F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x149 DUP3 PUSH2 0x12E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x159 DUP2 PUSH2 0x13F JUMP JUMPDEST DUP2 EQ PUSH2 0x163 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x174 DUP2 PUSH2 0x150 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x183 DUP2 PUSH2 0x12E JUMP JUMPDEST DUP2 EQ PUSH2 0x18D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x19E DUP2 PUSH2 0x17A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BC JUMPI PUSH2 0x1BB PUSH2 0x10B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C9 DUP8 DUP3 DUP9 ADD PUSH2 0x166 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1DA DUP8 DUP3 DUP9 ADD PUSH2 0x190 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1EB DUP8 DUP3 DUP9 ADD PUSH2 0x190 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1FC DUP8 DUP3 DUP9 ADD PUSH2 0x190 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x185B PUSH2 0x2FF PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x2B8 ADD MSTORE DUP2 DUP2 PUSH2 0x681 ADD MSTORE PUSH2 0xA2D ADD MSTORE PUSH0 PUSH2 0x93D ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x220 ADD MSTORE DUP2 DUP2 PUSH2 0x24C ADD MSTORE DUP2 DUP2 PUSH2 0x2DC ADD MSTORE DUP2 DUP2 PUSH2 0x3F9 ADD MSTORE DUP2 DUP2 PUSH2 0x444 ADD MSTORE DUP2 DUP2 PUSH2 0x49C ADD MSTORE DUP2 DUP2 PUSH2 0x4C8 ADD MSTORE DUP2 DUP2 PUSH2 0x51D ADD MSTORE DUP2 DUP2 PUSH2 0x6CD ADD MSTORE DUP2 DUP2 PUSH2 0x6F9 ADD MSTORE DUP2 DUP2 PUSH2 0x74E ADD MSTORE DUP2 DUP2 PUSH2 0x8B7 ADD MSTORE DUP2 DUP2 PUSH2 0x902 ADD MSTORE DUP2 DUP2 PUSH2 0x961 ADD MSTORE DUP2 DUP2 PUSH2 0x989 ADD MSTORE DUP2 DUP2 PUSH2 0x9B5 ADD MSTORE PUSH2 0xA09 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x26D ADD MSTORE DUP2 DUP2 PUSH2 0x353 ADD MSTORE DUP2 DUP2 PUSH2 0x41A ADD MSTORE DUP2 DUP2 PUSH2 0x4E9 ADD MSTORE DUP2 DUP2 PUSH2 0x5E0 ADD MSTORE DUP2 DUP2 PUSH2 0x6A5 ADD MSTORE DUP2 DUP2 PUSH2 0x71A ADD MSTORE DUP2 DUP2 PUSH2 0x811 ADD MSTORE DUP2 DUP2 PUSH2 0x8D8 ADD MSTORE DUP2 DUP2 PUSH2 0x9D6 ADD MSTORE PUSH2 0xABC ADD MSTORE PUSH2 0x185B PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC31C9C07 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xC4B69A18 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xC54E44EB EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xE0BAB4C4 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xEDD83557 EQ PUSH2 0x1E4 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x89FE6AA EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x3B85CF6A EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x73BD43AD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x13C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0x21A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0x105D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x105D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x105D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH2 0x95F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x105D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x247 PUSH32 0x0 CALLER ADDRESS DUP6 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x292 PUSH32 0x0 PUSH32 0x0 DUP5 PUSH2 0xCAD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH2 0xBB8 PUSH32 0x0 PUSH2 0xBB8 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x30F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x118E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF28C0498 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3C6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 LT ISZERO PUSH2 0x477 JUMPI PUSH2 0x43F PUSH32 0x0 PUSH32 0x0 PUSH0 PUSH2 0xCAD JUMP JUMPDEST PUSH2 0x476 PUSH32 0x0 ADDRESS CALLER DUP6 DUP8 PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0xB5B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x4C3 PUSH32 0x0 CALLER ADDRESS DUP6 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x50E PUSH32 0x0 PUSH32 0x0 DUP5 PUSH2 0xCAD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x637 SWAP2 SWAP1 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x653 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x677 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x6F4 PUSH32 0x0 CALLER ADDRESS DUP6 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x73F PUSH32 0x0 PUSH32 0x0 DUP5 PUSH2 0xCAD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDB3E2198 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x868 SWAP2 SWAP1 PUSH2 0x1524 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x884 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A8 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 LT ISZERO PUSH2 0x934 JUMPI PUSH2 0x8FD PUSH32 0x0 PUSH32 0x0 PUSH0 PUSH2 0xCAD JUMP JUMPDEST PUSH2 0x933 PUSH32 0x0 CALLER DUP5 DUP7 PUSH2 0x92E SWAP2 SWAP1 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0xDFC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x9B0 PUSH32 0x0 CALLER ADDRESS DUP6 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x9FB PUSH32 0x0 PUSH32 0x0 DUP5 PUSH2 0xCAD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0x0 PUSH2 0xBB8 PUSH32 0x0 PUSH2 0xBB8 PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA78 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x118E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC04B8D59 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB13 SWAP2 SWAP1 PUSH2 0x15B1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB2F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB53 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB91 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0xBFB SWAP2 SWAP1 PUSH2 0x1640 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xC34 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xC66 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0xC65 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xC64 SWAP2 SWAP1 PUSH2 0x168B JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0xCA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9C SWAP1 PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xCE1 SWAP3 SWAP2 SWAP1 PUSH2 0x172E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0xD4B SWAP2 SWAP1 PUSH2 0x1640 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xD84 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xDB6 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0xDB5 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xDB4 SWAP2 SWAP1 PUSH2 0x168B JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0xDF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDEC SWAP1 PUSH2 0x179F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE30 SWAP3 SWAP2 SWAP1 PUSH2 0x172E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0xE9A SWAP2 SWAP1 PUSH2 0x1640 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xED3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xED8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xF05 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0xF04 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xF03 SWAP2 SWAP1 PUSH2 0x168B JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0xF44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3B SWAP1 PUSH2 0x1807 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF62 DUP2 PUSH2 0xF4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF7B PUSH0 DUP4 ADD DUP5 PUSH2 0xF59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF97 DUP2 PUSH2 0xF85 JUMP JUMPDEST DUP2 EQ PUSH2 0xFA1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFB2 DUP2 PUSH2 0xF8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFCE JUMPI PUSH2 0xFCD PUSH2 0xF81 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFDB DUP6 DUP3 DUP7 ADD PUSH2 0xFA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFEC DUP6 DUP3 DUP7 ADD PUSH2 0xFA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFF DUP2 PUSH2 0xF85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1018 PUSH0 DUP4 ADD DUP5 PUSH2 0xFF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1047 DUP3 PUSH2 0x101E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1057 DUP2 PUSH2 0x103D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1070 PUSH0 DUP4 ADD DUP5 PUSH2 0x104E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108B JUMPI PUSH2 0x108A PUSH2 0xF81 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1098 DUP5 DUP3 DUP6 ADD PUSH2 0xFA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10C4 PUSH2 0x10BF PUSH2 0x10BA DUP5 PUSH2 0x101E JUMP JUMPDEST PUSH2 0x10A1 JUMP JUMPDEST PUSH2 0x101E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10D5 DUP3 PUSH2 0x10AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10E6 DUP3 PUSH2 0x10CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F6 DUP2 PUSH2 0x10DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x110F PUSH0 DUP4 ADD DUP5 PUSH2 0x10ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x112B DUP3 PUSH2 0x1115 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x113C DUP3 PUSH2 0x1121 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1154 PUSH2 0x114F DUP3 PUSH2 0x103D JUMP JUMPDEST PUSH2 0x1132 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xE8 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1170 DUP3 PUSH2 0x115A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1188 PUSH2 0x1183 DUP3 PUSH2 0xF4B JUMP JUMPDEST PUSH2 0x1166 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1199 DUP3 DUP9 PUSH2 0x1143 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x11A9 DUP3 DUP8 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SWAP2 POP PUSH2 0x11B9 DUP3 DUP7 PUSH2 0x1143 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x11C9 DUP3 DUP6 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SWAP2 POP PUSH2 0x11D9 DUP3 DUP5 PUSH2 0x1143 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x122E DUP3 PUSH2 0x11EC JUMP JUMPDEST PUSH2 0x1238 DUP2 DUP6 PUSH2 0x11F6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1248 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x1251 DUP2 PUSH2 0x1214 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1265 DUP2 PUSH2 0x103D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1274 DUP2 PUSH2 0xF85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0x1294 DUP3 DUP3 PUSH2 0x1224 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x12A9 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x125C JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x12BC PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x12CF PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x12E2 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1305 DUP2 DUP5 PUSH2 0x127A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x131B DUP2 PUSH2 0xF8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1336 JUMPI PUSH2 0x1335 PUSH2 0xF81 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1343 DUP5 DUP3 DUP6 ADD PUSH2 0x130D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1383 DUP3 PUSH2 0xF85 JUMP JUMPDEST SWAP2 POP PUSH2 0x138E DUP4 PUSH2 0xF85 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x13A6 JUMPI PUSH2 0x13A5 PUSH2 0x134C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13B5 DUP2 PUSH2 0xF4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x13C4 DUP2 PUSH2 0x101E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x13DF PUSH0 DUP6 ADD DUP3 PUSH2 0x125C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x13F2 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x125C JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1405 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x13AC JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1418 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x125C JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x142B PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x143E PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x1451 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x1464 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x13BB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x147E PUSH0 DUP4 ADD DUP5 PUSH2 0x13CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1499 PUSH0 DUP6 ADD DUP3 PUSH2 0x125C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x14AC PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x125C JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x14BF PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x13AC JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x14D2 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x125C JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x14E5 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x14F8 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x150B PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x151E PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x13BB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x1538 PUSH0 DUP4 ADD DUP5 PUSH2 0x1484 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0x1558 DUP3 DUP3 PUSH2 0x1224 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x156D PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x125C JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1580 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x1593 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x15A6 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15C9 DUP2 DUP5 PUSH2 0x153E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15E4 PUSH0 DUP4 ADD DUP7 PUSH2 0x104E JUMP JUMPDEST PUSH2 0x15F1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x104E JUMP JUMPDEST PUSH2 0x15FE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFF6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x161A DUP3 PUSH2 0x11EC JUMP JUMPDEST PUSH2 0x1624 DUP2 DUP6 PUSH2 0x1606 JUMP JUMPDEST SWAP4 POP PUSH2 0x1634 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1206 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x164B DUP3 DUP5 PUSH2 0x1610 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x166A DUP2 PUSH2 0x1656 JUMP JUMPDEST DUP2 EQ PUSH2 0x1674 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1685 DUP2 PUSH2 0x1661 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A0 JUMPI PUSH2 0x169F PUSH2 0xF81 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16AD DUP5 DUP3 DUP6 ADD PUSH2 0x1677 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354460000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16FA PUSH1 0x3 DUP4 PUSH2 0x16B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1705 DUP3 PUSH2 0x16C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1727 DUP2 PUSH2 0x16EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1741 PUSH0 DUP4 ADD DUP6 PUSH2 0x104E JUMP JUMPDEST PUSH2 0x174E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFF6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1789 PUSH1 0x2 DUP4 PUSH2 0x16B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1794 DUP3 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17B6 DUP2 PUSH2 0x177D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5354000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17F1 PUSH1 0x2 DUP4 PUSH2 0x16B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x17FC DUP3 PUSH2 0x17BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x181E DUP2 PUSH2 0x17E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0x21 PUSH32 0x4A40ACC2B912045FB4F20721D20822BEDB201E7B713C002C3943D0141564736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "205:8054:4:-:0;;;592:234;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;740:11;727:24;;;;;;;;;;768:4;762:10;;;;;;;;;;790:5;783:12;;;;;;;;;;813:5;806:12;;;;;;;;;;592:234;;;;205:8054;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:115::-;624:7;653:24;671:5;653:24;:::i;:::-;642:35;;568:115;;;:::o;689:160::-;781:43;818:5;781:43;:::i;:::-;774:5;771:54;761:82;;839:1;836;829:12;761:82;689:160;:::o;855:181::-;931:5;962:6;956:13;947:22;;978:52;1024:5;978:52;:::i;:::-;855:181;;;;:::o;1042:122::-;1115:24;1133:5;1115:24;:::i;:::-;1108:5;1105:35;1095:63;;1154:1;1151;1144:12;1095:63;1042:122;:::o;1170:143::-;1227:5;1258:6;1252:13;1243:22;;1274:33;1301:5;1274:33;:::i;:::-;1170:143;;;;:::o;1319:858::-;1435:6;1443;1451;1459;1508:3;1496:9;1487:7;1483:23;1479:33;1476:120;;;1515:79;;:::i;:::-;1476:120;1635:1;1660:83;1735:7;1726:6;1715:9;1711:22;1660:83;:::i;:::-;1650:93;;1606:147;1792:2;1818:64;1874:7;1865:6;1854:9;1850:22;1818:64;:::i;:::-;1808:74;;1763:129;1931:2;1957:64;2013:7;2004:6;1993:9;1989:22;1957:64;:::i;:::-;1947:74;;1902:129;2070:2;2096:64;2152:7;2143:6;2132:9;2128:22;2096:64;:::i;:::-;2086:74;;2041:129;1319:858;;;;;;;:::o;205:8054:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DAI_375": {
									"entryPoint": 2399,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USDC_379": {
									"entryPoint": 1663,
									"id": 379,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USDT_377": {
									"entryPoint": 2363,
									"id": 377,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WETH9_382": {
									"entryPoint": 1150,
									"id": 382,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolFee_385": {
									"entryPoint": 532,
									"id": 385,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeApprove_335": {
									"entryPoint": 3245,
									"id": 335,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_243": {
									"entryPoint": 2907,
									"id": 243,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_289": {
									"entryPoint": 3580,
									"id": 289,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@swapExactInputMultihop_477": {
									"entryPoint": 2435,
									"id": 477,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swapExactInputSingle_632": {
									"entryPoint": 1174,
									"id": 632,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swapExactOutputMultihop_573": {
									"entryPoint": 538,
									"id": 573,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@swapExactOutputSingle_720": {
									"entryPoint": 1735,
									"id": 720,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@swapRouter_369": {
									"entryPoint": 1699,
									"id": 369,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 4700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 4419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr": {
									"entryPoint": 4644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack": {
									"entryPoint": 4333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExactInputParams_$135_memory_ptr_to_t_struct$_ExactInputParams_$135_memory_ptr_fromStack": {
									"entryPoint": 5438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack": {
									"entryPoint": 5066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_ExactOutputParams_$181_memory_ptr_to_t_struct$_ExactOutputParams_$181_memory_ptr_fromStack": {
									"entryPoint": 4730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExactOutputSingleParams_$161_memory_ptr_to_t_struct$_ExactOutputSingleParams_$161_memory_ptr_fromStack": {
									"entryPoint": 5252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160": {
									"entryPoint": 5051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 5036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24_fromStack": {
									"entryPoint": 3929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24_nonPadded_inplace_fromStack": {
									"entryPoint": 4471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 4715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_address_t_uint24_t_address_t_uint24_t_address__to_t_address_t_uint24_t_address_t_uint24_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4494,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5585,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5934,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed": {
									"entryPoint": 4348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputParams_$135_memory_ptr__to_t_struct$_ExactInputParams_$135_memory_ptr__fromStack_reversed": {
									"entryPoint": 5553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed": {
									"entryPoint": 5226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactOutputParams_$181_memory_ptr__to_t_struct$_ExactOutputParams_$181_memory_ptr__fromStack_reversed": {
									"entryPoint": 4845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactOutputSingleParams_$161_memory_ptr__to_t_struct$_ExactOutputSingleParams_$161_memory_ptr__fromStack_reversed": {
									"entryPoint": 5412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed": {
									"entryPoint": 3944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 4588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr": {
									"entryPoint": 4598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 3915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ISwapRouter_$191_to_t_address": {
									"entryPoint": 4316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4614,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 4257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 4402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 4385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint24": {
									"entryPoint": 4454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4940,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3969,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_232": {
									"entryPoint": 4442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_96": {
									"entryPoint": 4373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa": {
									"entryPoint": 5973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca": {
									"entryPoint": 6077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86": {
									"entryPoint": 5830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20613:5",
										"nodeType": "YulBlock",
										"src": "0:20613:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:47:5",
													"nodeType": "YulBlock",
													"src": "51:47:5",
													"statements": [
														{
															"nativeSrc": "61:31:5",
															"nodeType": "YulAssignment",
															"src": "61:31:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "76:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "83:8:5",
																		"nodeType": "YulLiteral",
																		"src": "83:8:5",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "72:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:5"
																},
																"nativeSrc": "72:20:5",
																"nodeType": "YulFunctionCall",
																"src": "72:20:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "7:91:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:5",
														"nodeType": "YulTypedName",
														"src": "33:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:5",
														"nodeType": "YulTypedName",
														"src": "43:7:5",
														"type": ""
													}
												],
												"src": "7:91:5"
											},
											{
												"body": {
													"nativeSrc": "167:52:5",
													"nodeType": "YulBlock",
													"src": "167:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "184:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "184:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "206:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "206:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "189:16:5",
																			"nodeType": "YulIdentifier",
																			"src": "189:16:5"
																		},
																		"nativeSrc": "189:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "189:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "177:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "177:6:5"
																},
																"nativeSrc": "177:36:5",
																"nodeType": "YulFunctionCall",
																"src": "177:36:5"
															},
															"nativeSrc": "177:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "177:36:5"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
												"nativeSrc": "104:115:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "155:5:5",
														"nodeType": "YulTypedName",
														"src": "155:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "162:3:5",
														"nodeType": "YulTypedName",
														"src": "162:3:5",
														"type": ""
													}
												],
												"src": "104:115:5"
											},
											{
												"body": {
													"nativeSrc": "321:122:5",
													"nodeType": "YulBlock",
													"src": "321:122:5",
													"statements": [
														{
															"nativeSrc": "331:26:5",
															"nodeType": "YulAssignment",
															"src": "331:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "343:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "343:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "354:2:5",
																		"nodeType": "YulLiteral",
																		"src": "354:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "339:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "339:3:5"
																},
																"nativeSrc": "339:18:5",
																"nodeType": "YulFunctionCall",
																"src": "339:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "331:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "331:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "409:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "409:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "422:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "422:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "433:1:5",
																				"nodeType": "YulLiteral",
																				"src": "433:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "418:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "418:3:5"
																		},
																		"nativeSrc": "418:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "418:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
																	"nativeSrc": "367:41:5",
																	"nodeType": "YulIdentifier",
																	"src": "367:41:5"
																},
																"nativeSrc": "367:69:5",
																"nodeType": "YulFunctionCall",
																"src": "367:69:5"
															},
															"nativeSrc": "367:69:5",
															"nodeType": "YulExpressionStatement",
															"src": "367:69:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed",
												"nativeSrc": "225:218:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "293:9:5",
														"nodeType": "YulTypedName",
														"src": "293:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "305:6:5",
														"nodeType": "YulTypedName",
														"src": "305:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "316:4:5",
														"nodeType": "YulTypedName",
														"src": "316:4:5",
														"type": ""
													}
												],
												"src": "225:218:5"
											},
											{
												"body": {
													"nativeSrc": "489:35:5",
													"nodeType": "YulBlock",
													"src": "489:35:5",
													"statements": [
														{
															"nativeSrc": "499:19:5",
															"nodeType": "YulAssignment",
															"src": "499:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "515:2:5",
																		"nodeType": "YulLiteral",
																		"src": "515:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "509:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "509:5:5"
																},
																"nativeSrc": "509:9:5",
																"nodeType": "YulFunctionCall",
																"src": "509:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "499:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "499:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "449:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "482:6:5",
														"nodeType": "YulTypedName",
														"src": "482:6:5",
														"type": ""
													}
												],
												"src": "449:75:5"
											},
											{
												"body": {
													"nativeSrc": "619:28:5",
													"nodeType": "YulBlock",
													"src": "619:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "636:1:5",
																		"nodeType": "YulLiteral",
																		"src": "636:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "639:1:5",
																		"nodeType": "YulLiteral",
																		"src": "639:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "629:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "629:6:5"
																},
																"nativeSrc": "629:12:5",
																"nodeType": "YulFunctionCall",
																"src": "629:12:5"
															},
															"nativeSrc": "629:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "629:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "530:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "530:117:5"
											},
											{
												"body": {
													"nativeSrc": "742:28:5",
													"nodeType": "YulBlock",
													"src": "742:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "759:1:5",
																		"nodeType": "YulLiteral",
																		"src": "759:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "762:1:5",
																		"nodeType": "YulLiteral",
																		"src": "762:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "752:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:5"
																},
																"nativeSrc": "752:12:5",
																"nodeType": "YulFunctionCall",
																"src": "752:12:5"
															},
															"nativeSrc": "752:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "752:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "653:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "653:117:5"
											},
											{
												"body": {
													"nativeSrc": "821:32:5",
													"nodeType": "YulBlock",
													"src": "821:32:5",
													"statements": [
														{
															"nativeSrc": "831:16:5",
															"nodeType": "YulAssignment",
															"src": "831:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "842:5:5",
																"nodeType": "YulIdentifier",
																"src": "842:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "831:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "831:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "776:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "803:5:5",
														"nodeType": "YulTypedName",
														"src": "803:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "813:7:5",
														"nodeType": "YulTypedName",
														"src": "813:7:5",
														"type": ""
													}
												],
												"src": "776:77:5"
											},
											{
												"body": {
													"nativeSrc": "902:79:5",
													"nodeType": "YulBlock",
													"src": "902:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "959:16:5",
																"nodeType": "YulBlock",
																"src": "959:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "968:1:5",
																					"nodeType": "YulLiteral",
																					"src": "968:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "971:1:5",
																					"nodeType": "YulLiteral",
																					"src": "971:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "961:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "961:6:5"
																			},
																			"nativeSrc": "961:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "961:12:5"
																		},
																		"nativeSrc": "961:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "961:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "925:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "925:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "950:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "950:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "932:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "932:17:5"
																				},
																				"nativeSrc": "932:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "932:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "922:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "922:2:5"
																		},
																		"nativeSrc": "922:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "922:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "915:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "915:6:5"
																},
																"nativeSrc": "915:43:5",
																"nodeType": "YulFunctionCall",
																"src": "915:43:5"
															},
															"nativeSrc": "912:63:5",
															"nodeType": "YulIf",
															"src": "912:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "859:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "895:5:5",
														"nodeType": "YulTypedName",
														"src": "895:5:5",
														"type": ""
													}
												],
												"src": "859:122:5"
											},
											{
												"body": {
													"nativeSrc": "1039:87:5",
													"nodeType": "YulBlock",
													"src": "1039:87:5",
													"statements": [
														{
															"nativeSrc": "1049:29:5",
															"nodeType": "YulAssignment",
															"src": "1049:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1071:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1071:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1058:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1058:12:5"
																},
																"nativeSrc": "1058:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1058:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1049:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1049:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1114:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1114:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1087:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1087:26:5"
																},
																"nativeSrc": "1087:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1087:33:5"
															},
															"nativeSrc": "1087:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1087:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "987:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1017:6:5",
														"nodeType": "YulTypedName",
														"src": "1017:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1025:3:5",
														"nodeType": "YulTypedName",
														"src": "1025:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1033:5:5",
														"nodeType": "YulTypedName",
														"src": "1033:5:5",
														"type": ""
													}
												],
												"src": "987:139:5"
											},
											{
												"body": {
													"nativeSrc": "1215:391:5",
													"nodeType": "YulBlock",
													"src": "1215:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1261:83:5",
																"nodeType": "YulBlock",
																"src": "1261:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1263:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1263:77:5"
																			},
																			"nativeSrc": "1263:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1263:79:5"
																		},
																		"nativeSrc": "1263:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1263:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1236:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1236:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1245:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1245:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1232:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1232:3:5"
																		},
																		"nativeSrc": "1232:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1232:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1257:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1257:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1228:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1228:3:5"
																},
																"nativeSrc": "1228:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1228:32:5"
															},
															"nativeSrc": "1225:119:5",
															"nodeType": "YulIf",
															"src": "1225:119:5"
														},
														{
															"nativeSrc": "1354:117:5",
															"nodeType": "YulBlock",
															"src": "1354:117:5",
															"statements": [
																{
																	"nativeSrc": "1369:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1369:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1383:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1383:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1373:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1373:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1398:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1398:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1433:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1433:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1444:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1444:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1429:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1429:3:5"
																				},
																				"nativeSrc": "1429:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1429:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1453:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1453:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1408:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1408:20:5"
																		},
																		"nativeSrc": "1408:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1408:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1398:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1398:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1481:118:5",
															"nodeType": "YulBlock",
															"src": "1481:118:5",
															"statements": [
																{
																	"nativeSrc": "1496:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1510:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1510:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1500:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1526:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1526:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1561:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1561:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1572:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1572:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1557:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1557:3:5"
																				},
																				"nativeSrc": "1557:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1557:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1581:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1581:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1536:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1536:20:5"
																		},
																		"nativeSrc": "1536:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1526:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1526:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1132:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1177:9:5",
														"nodeType": "YulTypedName",
														"src": "1177:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1188:7:5",
														"nodeType": "YulTypedName",
														"src": "1188:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1200:6:5",
														"nodeType": "YulTypedName",
														"src": "1200:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1208:6:5",
														"nodeType": "YulTypedName",
														"src": "1208:6:5",
														"type": ""
													}
												],
												"src": "1132:474:5"
											},
											{
												"body": {
													"nativeSrc": "1677:53:5",
													"nodeType": "YulBlock",
													"src": "1677:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1694:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1717:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1717:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1699:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1699:17:5"
																		},
																		"nativeSrc": "1699:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1699:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1687:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1687:6:5"
																},
																"nativeSrc": "1687:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1687:37:5"
															},
															"nativeSrc": "1687:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1687:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1612:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1665:5:5",
														"nodeType": "YulTypedName",
														"src": "1665:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1672:3:5",
														"nodeType": "YulTypedName",
														"src": "1672:3:5",
														"type": ""
													}
												],
												"src": "1612:118:5"
											},
											{
												"body": {
													"nativeSrc": "1834:124:5",
													"nodeType": "YulBlock",
													"src": "1834:124:5",
													"statements": [
														{
															"nativeSrc": "1844:26:5",
															"nodeType": "YulAssignment",
															"src": "1844:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1856:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1856:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1867:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1867:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1852:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1852:3:5"
																},
																"nativeSrc": "1852:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1852:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1844:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1844:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1924:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1924:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1937:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1937:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1948:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1948:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1933:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1933:3:5"
																		},
																		"nativeSrc": "1933:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1933:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1880:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1880:43:5"
																},
																"nativeSrc": "1880:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1880:71:5"
															},
															"nativeSrc": "1880:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1880:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1736:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1806:9:5",
														"nodeType": "YulTypedName",
														"src": "1806:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1818:6:5",
														"nodeType": "YulTypedName",
														"src": "1818:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1829:4:5",
														"nodeType": "YulTypedName",
														"src": "1829:4:5",
														"type": ""
													}
												],
												"src": "1736:222:5"
											},
											{
												"body": {
													"nativeSrc": "2009:81:5",
													"nodeType": "YulBlock",
													"src": "2009:81:5",
													"statements": [
														{
															"nativeSrc": "2019:65:5",
															"nodeType": "YulAssignment",
															"src": "2019:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2034:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2034:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2041:42:5",
																		"nodeType": "YulLiteral",
																		"src": "2041:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2030:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2030:3:5"
																},
																"nativeSrc": "2030:54:5",
																"nodeType": "YulFunctionCall",
																"src": "2030:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2019:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "2019:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1964:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1991:5:5",
														"nodeType": "YulTypedName",
														"src": "1991:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2001:7:5",
														"nodeType": "YulTypedName",
														"src": "2001:7:5",
														"type": ""
													}
												],
												"src": "1964:126:5"
											},
											{
												"body": {
													"nativeSrc": "2141:51:5",
													"nodeType": "YulBlock",
													"src": "2141:51:5",
													"statements": [
														{
															"nativeSrc": "2151:35:5",
															"nodeType": "YulAssignment",
															"src": "2151:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2180:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2180:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2162:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "2162:17:5"
																},
																"nativeSrc": "2162:24:5",
																"nodeType": "YulFunctionCall",
																"src": "2162:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2151:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "2151:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2096:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2123:5:5",
														"nodeType": "YulTypedName",
														"src": "2123:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2133:7:5",
														"nodeType": "YulTypedName",
														"src": "2133:7:5",
														"type": ""
													}
												],
												"src": "2096:96:5"
											},
											{
												"body": {
													"nativeSrc": "2263:53:5",
													"nodeType": "YulBlock",
													"src": "2263:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2280:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2280:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2303:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2303:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2285:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2285:17:5"
																		},
																		"nativeSrc": "2285:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2285:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2273:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2273:6:5"
																},
																"nativeSrc": "2273:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2273:37:5"
															},
															"nativeSrc": "2273:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2273:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2198:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2251:5:5",
														"nodeType": "YulTypedName",
														"src": "2251:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2258:3:5",
														"nodeType": "YulTypedName",
														"src": "2258:3:5",
														"type": ""
													}
												],
												"src": "2198:118:5"
											},
											{
												"body": {
													"nativeSrc": "2420:124:5",
													"nodeType": "YulBlock",
													"src": "2420:124:5",
													"statements": [
														{
															"nativeSrc": "2430:26:5",
															"nodeType": "YulAssignment",
															"src": "2430:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2442:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2442:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2453:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2453:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2438:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2438:3:5"
																},
																"nativeSrc": "2438:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2438:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2430:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2430:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2510:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2510:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2523:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2523:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2534:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2534:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2519:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2519:3:5"
																		},
																		"nativeSrc": "2519:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2519:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2466:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2466:43:5"
																},
																"nativeSrc": "2466:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2466:71:5"
															},
															"nativeSrc": "2466:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2466:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2322:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2392:9:5",
														"nodeType": "YulTypedName",
														"src": "2392:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2404:6:5",
														"nodeType": "YulTypedName",
														"src": "2404:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2415:4:5",
														"nodeType": "YulTypedName",
														"src": "2415:4:5",
														"type": ""
													}
												],
												"src": "2322:222:5"
											},
											{
												"body": {
													"nativeSrc": "2616:263:5",
													"nodeType": "YulBlock",
													"src": "2616:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2662:83:5",
																"nodeType": "YulBlock",
																"src": "2662:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2664:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2664:77:5"
																			},
																			"nativeSrc": "2664:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2664:79:5"
																		},
																		"nativeSrc": "2664:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2664:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2637:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2637:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2646:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2646:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2633:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2633:3:5"
																		},
																		"nativeSrc": "2633:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2633:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2658:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2658:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2629:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2629:3:5"
																},
																"nativeSrc": "2629:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2629:32:5"
															},
															"nativeSrc": "2626:119:5",
															"nodeType": "YulIf",
															"src": "2626:119:5"
														},
														{
															"nativeSrc": "2755:117:5",
															"nodeType": "YulBlock",
															"src": "2755:117:5",
															"statements": [
																{
																	"nativeSrc": "2770:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2770:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2784:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2784:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2774:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2774:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2799:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2799:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2834:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2834:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2845:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2845:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2830:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2830:3:5"
																				},
																				"nativeSrc": "2830:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2830:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2854:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2854:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2809:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2809:20:5"
																		},
																		"nativeSrc": "2809:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2809:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2799:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2799:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2550:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2586:9:5",
														"nodeType": "YulTypedName",
														"src": "2586:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2597:7:5",
														"nodeType": "YulTypedName",
														"src": "2597:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2609:6:5",
														"nodeType": "YulTypedName",
														"src": "2609:6:5",
														"type": ""
													}
												],
												"src": "2550:329:5"
											},
											{
												"body": {
													"nativeSrc": "2917:28:5",
													"nodeType": "YulBlock",
													"src": "2917:28:5",
													"statements": [
														{
															"nativeSrc": "2927:12:5",
															"nodeType": "YulAssignment",
															"src": "2927:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "2934:5:5",
																"nodeType": "YulIdentifier",
																"src": "2934:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2927:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2927:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2885:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2903:5:5",
														"nodeType": "YulTypedName",
														"src": "2903:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2913:3:5",
														"nodeType": "YulTypedName",
														"src": "2913:3:5",
														"type": ""
													}
												],
												"src": "2885:60:5"
											},
											{
												"body": {
													"nativeSrc": "3011:82:5",
													"nodeType": "YulBlock",
													"src": "3011:82:5",
													"statements": [
														{
															"nativeSrc": "3021:66:5",
															"nodeType": "YulAssignment",
															"src": "3021:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3079:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3079:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3061:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "3061:17:5"
																				},
																				"nativeSrc": "3061:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3061:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3052:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "3052:8:5"
																		},
																		"nativeSrc": "3052:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3052:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3034:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "3034:17:5"
																},
																"nativeSrc": "3034:53:5",
																"nodeType": "YulFunctionCall",
																"src": "3034:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3021:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3021:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2951:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2991:5:5",
														"nodeType": "YulTypedName",
														"src": "2991:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3001:9:5",
														"nodeType": "YulTypedName",
														"src": "3001:9:5",
														"type": ""
													}
												],
												"src": "2951:142:5"
											},
											{
												"body": {
													"nativeSrc": "3159:66:5",
													"nodeType": "YulBlock",
													"src": "3159:66:5",
													"statements": [
														{
															"nativeSrc": "3169:50:5",
															"nodeType": "YulAssignment",
															"src": "3169:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3213:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3213:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3182:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "3182:30:5"
																},
																"nativeSrc": "3182:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3182:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3169:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3169:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3099:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3139:5:5",
														"nodeType": "YulTypedName",
														"src": "3139:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3149:9:5",
														"nodeType": "YulTypedName",
														"src": "3149:9:5",
														"type": ""
													}
												],
												"src": "3099:126:5"
											},
											{
												"body": {
													"nativeSrc": "3310:66:5",
													"nodeType": "YulBlock",
													"src": "3310:66:5",
													"statements": [
														{
															"nativeSrc": "3320:50:5",
															"nodeType": "YulAssignment",
															"src": "3320:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3364:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3364:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3333:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "3333:30:5"
																},
																"nativeSrc": "3333:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3333:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3320:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3320:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISwapRouter_$191_to_t_address",
												"nativeSrc": "3231:145:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3290:5:5",
														"nodeType": "YulTypedName",
														"src": "3290:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3300:9:5",
														"nodeType": "YulTypedName",
														"src": "3300:9:5",
														"type": ""
													}
												],
												"src": "3231:145:5"
											},
											{
												"body": {
													"nativeSrc": "3466:85:5",
													"nodeType": "YulBlock",
													"src": "3466:85:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3483:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3483:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3538:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3538:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ISwapRouter_$191_to_t_address",
																			"nativeSrc": "3488:49:5",
																			"nodeType": "YulIdentifier",
																			"src": "3488:49:5"
																		},
																		"nativeSrc": "3488:56:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3488:56:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3476:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3476:6:5"
																},
																"nativeSrc": "3476:69:5",
																"nodeType": "YulFunctionCall",
																"src": "3476:69:5"
															},
															"nativeSrc": "3476:69:5",
															"nodeType": "YulExpressionStatement",
															"src": "3476:69:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack",
												"nativeSrc": "3382:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3454:5:5",
														"nodeType": "YulTypedName",
														"src": "3454:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3461:3:5",
														"nodeType": "YulTypedName",
														"src": "3461:3:5",
														"type": ""
													}
												],
												"src": "3382:169:5"
											},
											{
												"body": {
													"nativeSrc": "3674:143:5",
													"nodeType": "YulBlock",
													"src": "3674:143:5",
													"statements": [
														{
															"nativeSrc": "3684:26:5",
															"nodeType": "YulAssignment",
															"src": "3684:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3696:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3696:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3707:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3707:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3692:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3692:3:5"
																},
																"nativeSrc": "3692:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3692:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3684:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3684:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3783:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3783:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3796:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3796:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3807:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3807:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3792:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3792:3:5"
																		},
																		"nativeSrc": "3792:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3792:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack",
																	"nativeSrc": "3720:62:5",
																	"nodeType": "YulIdentifier",
																	"src": "3720:62:5"
																},
																"nativeSrc": "3720:90:5",
																"nodeType": "YulFunctionCall",
																"src": "3720:90:5"
															},
															"nativeSrc": "3720:90:5",
															"nodeType": "YulExpressionStatement",
															"src": "3720:90:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed",
												"nativeSrc": "3557:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3646:9:5",
														"nodeType": "YulTypedName",
														"src": "3646:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3658:6:5",
														"nodeType": "YulTypedName",
														"src": "3658:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3669:4:5",
														"nodeType": "YulTypedName",
														"src": "3669:4:5",
														"type": ""
													}
												],
												"src": "3557:260:5"
											},
											{
												"body": {
													"nativeSrc": "3865:52:5",
													"nodeType": "YulBlock",
													"src": "3865:52:5",
													"statements": [
														{
															"nativeSrc": "3875:35:5",
															"nodeType": "YulAssignment",
															"src": "3875:35:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3900:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3900:2:5",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3904:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3904:5:5"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "3896:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3896:3:5"
																},
																"nativeSrc": "3896:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3896:14:5"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3875:8:5",
																	"nodeType": "YulIdentifier",
																	"src": "3875:8:5"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "3823:94:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3846:5:5",
														"nodeType": "YulTypedName",
														"src": "3846:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3856:8:5",
														"nodeType": "YulTypedName",
														"src": "3856:8:5",
														"type": ""
													}
												],
												"src": "3823:94:5"
											},
											{
												"body": {
													"nativeSrc": "3970:47:5",
													"nodeType": "YulBlock",
													"src": "3970:47:5",
													"statements": [
														{
															"nativeSrc": "3980:31:5",
															"nodeType": "YulAssignment",
															"src": "3980:31:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4005:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4005:5:5"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "3991:13:5",
																	"nodeType": "YulIdentifier",
																	"src": "3991:13:5"
																},
																"nativeSrc": "3991:20:5",
																"nodeType": "YulFunctionCall",
																"src": "3991:20:5"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "3980:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "3980:7:5"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "3923:94:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3952:5:5",
														"nodeType": "YulTypedName",
														"src": "3952:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "3962:7:5",
														"nodeType": "YulTypedName",
														"src": "3962:7:5",
														"type": ""
													}
												],
												"src": "3923:94:5"
											},
											{
												"body": {
													"nativeSrc": "4070:53:5",
													"nodeType": "YulBlock",
													"src": "4070:53:5",
													"statements": [
														{
															"nativeSrc": "4080:37:5",
															"nodeType": "YulAssignment",
															"src": "4080:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4111:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4111:5:5"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "4091:19:5",
																	"nodeType": "YulIdentifier",
																	"src": "4091:19:5"
																},
																"nativeSrc": "4091:26:5",
																"nodeType": "YulFunctionCall",
																"src": "4091:26:5"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "4080:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "4080:7:5"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "4023:100:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4052:5:5",
														"nodeType": "YulTypedName",
														"src": "4052:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "4062:7:5",
														"nodeType": "YulTypedName",
														"src": "4062:7:5",
														"type": ""
													}
												],
												"src": "4023:100:5"
											},
											{
												"body": {
													"nativeSrc": "4212:74:5",
													"nodeType": "YulBlock",
													"src": "4212:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4229:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4229:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4272:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4272:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4254:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "4254:17:5"
																				},
																				"nativeSrc": "4254:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4254:24:5"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "4234:19:5",
																			"nodeType": "YulIdentifier",
																			"src": "4234:19:5"
																		},
																		"nativeSrc": "4234:45:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4234:45:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4222:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4222:6:5"
																},
																"nativeSrc": "4222:58:5",
																"nodeType": "YulFunctionCall",
																"src": "4222:58:5"
															},
															"nativeSrc": "4222:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "4222:58:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "4129:157:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4200:5:5",
														"nodeType": "YulTypedName",
														"src": "4200:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4207:3:5",
														"nodeType": "YulTypedName",
														"src": "4207:3:5",
														"type": ""
													}
												],
												"src": "4129:157:5"
											},
											{
												"body": {
													"nativeSrc": "4335:53:5",
													"nodeType": "YulBlock",
													"src": "4335:53:5",
													"statements": [
														{
															"nativeSrc": "4345:36:5",
															"nodeType": "YulAssignment",
															"src": "4345:36:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4370:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4370:3:5",
																		"type": "",
																		"value": "232"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4375:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4375:5:5"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4366:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4366:3:5"
																},
																"nativeSrc": "4366:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4366:15:5"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4345:8:5",
																	"nodeType": "YulIdentifier",
																	"src": "4345:8:5"
																}
															]
														}
													]
												},
												"name": "shift_left_232",
												"nativeSrc": "4292:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4316:5:5",
														"nodeType": "YulTypedName",
														"src": "4316:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4326:8:5",
														"nodeType": "YulTypedName",
														"src": "4326:8:5",
														"type": ""
													}
												],
												"src": "4292:96:5"
											},
											{
												"body": {
													"nativeSrc": "4440:48:5",
													"nodeType": "YulBlock",
													"src": "4440:48:5",
													"statements": [
														{
															"nativeSrc": "4450:32:5",
															"nodeType": "YulAssignment",
															"src": "4450:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4476:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4476:5:5"
																	}
																],
																"functionName": {
																	"name": "shift_left_232",
																	"nativeSrc": "4461:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "4461:14:5"
																},
																"nativeSrc": "4461:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4461:21:5"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "4450:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "4450:7:5"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint24",
												"nativeSrc": "4394:94:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4422:5:5",
														"nodeType": "YulTypedName",
														"src": "4422:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "4432:7:5",
														"nodeType": "YulTypedName",
														"src": "4432:7:5",
														"type": ""
													}
												],
												"src": "4394:94:5"
											},
											{
												"body": {
													"nativeSrc": "4575:72:5",
													"nodeType": "YulBlock",
													"src": "4575:72:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4592:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4592:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4633:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4633:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint24",
																					"nativeSrc": "4616:16:5",
																					"nodeType": "YulIdentifier",
																					"src": "4616:16:5"
																				},
																				"nativeSrc": "4616:23:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4616:23:5"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint24",
																			"nativeSrc": "4597:18:5",
																			"nodeType": "YulIdentifier",
																			"src": "4597:18:5"
																		},
																		"nativeSrc": "4597:43:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4597:43:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4585:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4585:6:5"
																},
																"nativeSrc": "4585:56:5",
																"nodeType": "YulFunctionCall",
																"src": "4585:56:5"
															},
															"nativeSrc": "4585:56:5",
															"nodeType": "YulExpressionStatement",
															"src": "4585:56:5"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24_nonPadded_inplace_fromStack",
												"nativeSrc": "4494:153:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4563:5:5",
														"nodeType": "YulTypedName",
														"src": "4563:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4570:3:5",
														"nodeType": "YulTypedName",
														"src": "4570:3:5",
														"type": ""
													}
												],
												"src": "4494:153:5"
											},
											{
												"body": {
													"nativeSrc": "4877:586:5",
													"nodeType": "YulBlock",
													"src": "4877:586:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4950:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4950:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "4959:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4959:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "4888:61:5",
																	"nodeType": "YulIdentifier",
																	"src": "4888:61:5"
																},
																"nativeSrc": "4888:75:5",
																"nodeType": "YulFunctionCall",
																"src": "4888:75:5"
															},
															"nativeSrc": "4888:75:5",
															"nodeType": "YulExpressionStatement",
															"src": "4888:75:5"
														},
														{
															"nativeSrc": "4972:19:5",
															"nodeType": "YulAssignment",
															"src": "4972:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4983:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4983:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4979:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4979:3:5"
																},
																"nativeSrc": "4979:12:5",
																"nodeType": "YulFunctionCall",
																"src": "4979:12:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4972:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4972:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5061:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5061:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5070:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5070:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_nonPadded_inplace_fromStack",
																	"nativeSrc": "5001:59:5",
																	"nodeType": "YulIdentifier",
																	"src": "5001:59:5"
																},
																"nativeSrc": "5001:73:5",
																"nodeType": "YulFunctionCall",
																"src": "5001:73:5"
															},
															"nativeSrc": "5001:73:5",
															"nodeType": "YulExpressionStatement",
															"src": "5001:73:5"
														},
														{
															"nativeSrc": "5083:18:5",
															"nodeType": "YulAssignment",
															"src": "5083:18:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5094:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5094:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5099:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5099:1:5",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5090:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5090:3:5"
																},
																"nativeSrc": "5090:11:5",
																"nodeType": "YulFunctionCall",
																"src": "5090:11:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5083:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5083:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5173:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5173:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5182:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5182:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "5111:61:5",
																	"nodeType": "YulIdentifier",
																	"src": "5111:61:5"
																},
																"nativeSrc": "5111:75:5",
																"nodeType": "YulFunctionCall",
																"src": "5111:75:5"
															},
															"nativeSrc": "5111:75:5",
															"nodeType": "YulExpressionStatement",
															"src": "5111:75:5"
														},
														{
															"nativeSrc": "5195:19:5",
															"nodeType": "YulAssignment",
															"src": "5195:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5206:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5206:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5211:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5211:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5202:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5202:3:5"
																},
																"nativeSrc": "5202:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5202:12:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5195:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5195:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "5284:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5284:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5293:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5293:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_nonPadded_inplace_fromStack",
																	"nativeSrc": "5224:59:5",
																	"nodeType": "YulIdentifier",
																	"src": "5224:59:5"
																},
																"nativeSrc": "5224:73:5",
																"nodeType": "YulFunctionCall",
																"src": "5224:73:5"
															},
															"nativeSrc": "5224:73:5",
															"nodeType": "YulExpressionStatement",
															"src": "5224:73:5"
														},
														{
															"nativeSrc": "5306:18:5",
															"nodeType": "YulAssignment",
															"src": "5306:18:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5317:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5317:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5322:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5322:1:5",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5313:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5313:3:5"
																},
																"nativeSrc": "5313:11:5",
																"nodeType": "YulFunctionCall",
																"src": "5313:11:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5306:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5306:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "5396:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5396:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5405:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5405:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "5334:61:5",
																	"nodeType": "YulIdentifier",
																	"src": "5334:61:5"
																},
																"nativeSrc": "5334:75:5",
																"nodeType": "YulFunctionCall",
																"src": "5334:75:5"
															},
															"nativeSrc": "5334:75:5",
															"nodeType": "YulExpressionStatement",
															"src": "5334:75:5"
														},
														{
															"nativeSrc": "5418:19:5",
															"nodeType": "YulAssignment",
															"src": "5418:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5429:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5429:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5434:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5434:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5425:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5425:3:5"
																},
																"nativeSrc": "5425:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5425:12:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5418:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5418:3:5"
																}
															]
														},
														{
															"nativeSrc": "5447:10:5",
															"nodeType": "YulAssignment",
															"src": "5447:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "5454:3:5",
																"nodeType": "YulIdentifier",
																"src": "5454:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5447:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5447:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint24_t_address_t_uint24_t_address__to_t_address_t_uint24_t_address_t_uint24_t_address__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "4653:810:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4824:3:5",
														"nodeType": "YulTypedName",
														"src": "4824:3:5",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4830:6:5",
														"nodeType": "YulTypedName",
														"src": "4830:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4838:6:5",
														"nodeType": "YulTypedName",
														"src": "4838:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4846:6:5",
														"nodeType": "YulTypedName",
														"src": "4846:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4854:6:5",
														"nodeType": "YulTypedName",
														"src": "4854:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4862:6:5",
														"nodeType": "YulTypedName",
														"src": "4862:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4873:3:5",
														"nodeType": "YulTypedName",
														"src": "4873:3:5",
														"type": ""
													}
												],
												"src": "4653:810:5"
											},
											{
												"body": {
													"nativeSrc": "5527:40:5",
													"nodeType": "YulBlock",
													"src": "5527:40:5",
													"statements": [
														{
															"nativeSrc": "5538:22:5",
															"nodeType": "YulAssignment",
															"src": "5538:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5554:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5554:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5548:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5548:5:5"
																},
																"nativeSrc": "5548:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5548:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5538:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5538:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "5469:98:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5510:5:5",
														"nodeType": "YulTypedName",
														"src": "5510:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5520:6:5",
														"nodeType": "YulTypedName",
														"src": "5520:6:5",
														"type": ""
													}
												],
												"src": "5469:98:5"
											},
											{
												"body": {
													"nativeSrc": "5658:73:5",
													"nodeType": "YulBlock",
													"src": "5658:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5675:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5675:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5680:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5680:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5668:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5668:6:5"
																},
																"nativeSrc": "5668:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5668:19:5"
															},
															"nativeSrc": "5668:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "5668:19:5"
														},
														{
															"nativeSrc": "5696:29:5",
															"nodeType": "YulAssignment",
															"src": "5696:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5715:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5715:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5720:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5720:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5711:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5711:3:5"
																},
																"nativeSrc": "5711:14:5",
																"nodeType": "YulFunctionCall",
																"src": "5711:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5696:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "5696:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr",
												"nativeSrc": "5573:158:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5630:3:5",
														"nodeType": "YulTypedName",
														"src": "5630:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5635:6:5",
														"nodeType": "YulTypedName",
														"src": "5635:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5646:11:5",
														"nodeType": "YulTypedName",
														"src": "5646:11:5",
														"type": ""
													}
												],
												"src": "5573:158:5"
											},
											{
												"body": {
													"nativeSrc": "5799:77:5",
													"nodeType": "YulBlock",
													"src": "5799:77:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "5816:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5816:3:5"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "5821:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5821:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5826:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5826:6:5"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "5810:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5810:5:5"
																},
																"nativeSrc": "5810:23:5",
																"nodeType": "YulFunctionCall",
																"src": "5810:23:5"
															},
															"nativeSrc": "5810:23:5",
															"nodeType": "YulExpressionStatement",
															"src": "5810:23:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "5853:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "5853:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5858:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5858:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5849:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5849:3:5"
																		},
																		"nativeSrc": "5849:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5849:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5867:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5867:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5842:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5842:6:5"
																},
																"nativeSrc": "5842:27:5",
																"nodeType": "YulFunctionCall",
																"src": "5842:27:5"
															},
															"nativeSrc": "5842:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "5842:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "5737:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5781:3:5",
														"nodeType": "YulTypedName",
														"src": "5781:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "5786:3:5",
														"nodeType": "YulTypedName",
														"src": "5786:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5791:6:5",
														"nodeType": "YulTypedName",
														"src": "5791:6:5",
														"type": ""
													}
												],
												"src": "5737:139:5"
											},
											{
												"body": {
													"nativeSrc": "5930:54:5",
													"nodeType": "YulBlock",
													"src": "5930:54:5",
													"statements": [
														{
															"nativeSrc": "5940:38:5",
															"nodeType": "YulAssignment",
															"src": "5940:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5958:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5958:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5965:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5965:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5954:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5954:3:5"
																		},
																		"nativeSrc": "5954:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5954:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5974:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5974:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5970:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5970:3:5"
																		},
																		"nativeSrc": "5970:7:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5970:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5950:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5950:3:5"
																},
																"nativeSrc": "5950:28:5",
																"nodeType": "YulFunctionCall",
																"src": "5950:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5940:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5940:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "5882:102:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5913:5:5",
														"nodeType": "YulTypedName",
														"src": "5913:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5923:6:5",
														"nodeType": "YulTypedName",
														"src": "5923:6:5",
														"type": ""
													}
												],
												"src": "5882:102:5"
											},
											{
												"body": {
													"nativeSrc": "6070:273:5",
													"nodeType": "YulBlock",
													"src": "6070:273:5",
													"statements": [
														{
															"nativeSrc": "6080:52:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6080:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6126:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6126:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "6094:31:5",
																	"nodeType": "YulIdentifier",
																	"src": "6094:31:5"
																},
																"nativeSrc": "6094:38:5",
																"nodeType": "YulFunctionCall",
																"src": "6094:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6084:6:5",
																	"nodeType": "YulTypedName",
																	"src": "6084:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6141:67:5",
															"nodeType": "YulAssignment",
															"src": "6141:67:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6196:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6196:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6201:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6201:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr",
																	"nativeSrc": "6148:47:5",
																	"nodeType": "YulIdentifier",
																	"src": "6148:47:5"
																},
																"nativeSrc": "6148:60:5",
																"nodeType": "YulFunctionCall",
																"src": "6148:60:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6141:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6141:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6256:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6256:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6263:4:5",
																				"nodeType": "YulLiteral",
																				"src": "6263:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6252:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6252:3:5"
																		},
																		"nativeSrc": "6252:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6252:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6270:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6270:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6275:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6275:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6217:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "6217:34:5"
																},
																"nativeSrc": "6217:65:5",
																"nodeType": "YulFunctionCall",
																"src": "6217:65:5"
															},
															"nativeSrc": "6217:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "6217:65:5"
														},
														{
															"nativeSrc": "6291:46:5",
															"nodeType": "YulAssignment",
															"src": "6291:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6302:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6302:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6329:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6329:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6307:21:5",
																			"nodeType": "YulIdentifier",
																			"src": "6307:21:5"
																		},
																		"nativeSrc": "6307:29:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6307:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6298:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6298:3:5"
																},
																"nativeSrc": "6298:39:5",
																"nodeType": "YulFunctionCall",
																"src": "6298:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6291:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6291:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr",
												"nativeSrc": "5990:353:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6051:5:5",
														"nodeType": "YulTypedName",
														"src": "6051:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6058:3:5",
														"nodeType": "YulTypedName",
														"src": "6058:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6066:3:5",
														"nodeType": "YulTypedName",
														"src": "6066:3:5",
														"type": ""
													}
												],
												"src": "5990:353:5"
											},
											{
												"body": {
													"nativeSrc": "6404:53:5",
													"nodeType": "YulBlock",
													"src": "6404:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6421:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6421:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6444:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6444:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6426:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "6426:17:5"
																		},
																		"nativeSrc": "6426:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6426:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6414:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6414:6:5"
																},
																"nativeSrc": "6414:37:5",
																"nodeType": "YulFunctionCall",
																"src": "6414:37:5"
															},
															"nativeSrc": "6414:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "6414:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "6349:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6392:5:5",
														"nodeType": "YulTypedName",
														"src": "6392:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6399:3:5",
														"nodeType": "YulTypedName",
														"src": "6399:3:5",
														"type": ""
													}
												],
												"src": "6349:108:5"
											},
											{
												"body": {
													"nativeSrc": "6518:53:5",
													"nodeType": "YulBlock",
													"src": "6518:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6535:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6535:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6558:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6558:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6540:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "6540:17:5"
																		},
																		"nativeSrc": "6540:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6540:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6528:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6528:6:5"
																},
																"nativeSrc": "6528:37:5",
																"nodeType": "YulFunctionCall",
																"src": "6528:37:5"
															},
															"nativeSrc": "6528:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "6528:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "6463:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6506:5:5",
														"nodeType": "YulTypedName",
														"src": "6506:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6513:3:5",
														"nodeType": "YulTypedName",
														"src": "6513:3:5",
														"type": ""
													}
												],
												"src": "6463:108:5"
											},
											{
												"body": {
													"nativeSrc": "6803:1027:5",
													"nodeType": "YulBlock",
													"src": "6803:1027:5",
													"statements": [
														{
															"nativeSrc": "6813:26:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6813:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6829:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6829:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6834:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6834:4:5",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6825:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6825:3:5"
																},
																"nativeSrc": "6825:14:5",
																"nodeType": "YulFunctionCall",
																"src": "6825:14:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "6817:4:5",
																	"nodeType": "YulTypedName",
																	"src": "6817:4:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6849:233:5",
															"nodeType": "YulBlock",
															"src": "6849:233:5",
															"statements": [
																{
																	"nativeSrc": "6884:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6884:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6914:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "6914:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6921:4:5",
																						"nodeType": "YulLiteral",
																						"src": "6921:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6910:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6910:3:5"
																				},
																				"nativeSrc": "6910:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6910:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6904:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "6904:5:5"
																		},
																		"nativeSrc": "6904:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6904:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6888:12:5",
																			"nodeType": "YulTypedName",
																			"src": "6888:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6952:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6952:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6957:4:5",
																						"nodeType": "YulLiteral",
																						"src": "6957:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6948:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6948:3:5"
																				},
																				"nativeSrc": "6948:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6948:14:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nativeSrc": "6968:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "6968:4:5"
																					},
																					{
																						"name": "pos",
																						"nativeSrc": "6974:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6974:3:5"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6964:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6964:3:5"
																				},
																				"nativeSrc": "6964:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6964:14:5"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "6941:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "6941:6:5"
																		},
																		"nativeSrc": "6941:38:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6941:38:5"
																	},
																	"nativeSrc": "6941:38:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "6941:38:5"
																},
																{
																	"nativeSrc": "6992:79:5",
																	"nodeType": "YulAssignment",
																	"src": "6992:79:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7052:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "7052:12:5"
																			},
																			{
																				"name": "tail",
																				"nativeSrc": "7066:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "7066:4:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr",
																			"nativeSrc": "7000:51:5",
																			"nodeType": "YulIdentifier",
																			"src": "7000:51:5"
																		},
																		"nativeSrc": "7000:71:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7000:71:5"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nativeSrc": "6992:4:5",
																			"nodeType": "YulIdentifier",
																			"src": "6992:4:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7092:169:5",
															"nodeType": "YulBlock",
															"src": "7092:169:5",
															"statements": [
																{
																	"nativeSrc": "7132:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7132:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7162:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7162:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7169:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7169:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7158:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7158:3:5"
																				},
																				"nativeSrc": "7158:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7158:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7152:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7152:5:5"
																		},
																		"nativeSrc": "7152:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7152:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7136:12:5",
																			"nodeType": "YulTypedName",
																			"src": "7136:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7222:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "7222:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7240:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "7240:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7245:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7245:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7236:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7236:3:5"
																				},
																				"nativeSrc": "7236:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7236:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "7188:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "7188:33:5"
																		},
																		"nativeSrc": "7188:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7188:63:5"
																	},
																	"nativeSrc": "7188:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "7188:63:5"
																}
															]
														},
														{
															"nativeSrc": "7271:168:5",
															"nodeType": "YulBlock",
															"src": "7271:168:5",
															"statements": [
																{
																	"nativeSrc": "7310:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7310:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7340:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7340:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7347:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7347:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7336:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7336:3:5"
																				},
																				"nativeSrc": "7336:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7336:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7330:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7330:5:5"
																		},
																		"nativeSrc": "7330:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7330:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7314:12:5",
																			"nodeType": "YulTypedName",
																			"src": "7314:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7400:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "7400:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7418:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "7418:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7423:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7423:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7414:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7414:3:5"
																				},
																				"nativeSrc": "7414:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7414:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7366:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "7366:33:5"
																		},
																		"nativeSrc": "7366:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7366:63:5"
																	},
																	"nativeSrc": "7366:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "7366:63:5"
																}
															]
														},
														{
															"nativeSrc": "7449:169:5",
															"nodeType": "YulBlock",
															"src": "7449:169:5",
															"statements": [
																{
																	"nativeSrc": "7489:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7489:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7519:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7519:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7526:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7526:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7515:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7515:3:5"
																				},
																				"nativeSrc": "7515:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7515:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7509:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7509:5:5"
																		},
																		"nativeSrc": "7509:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7509:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7493:12:5",
																			"nodeType": "YulTypedName",
																			"src": "7493:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7579:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "7579:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7597:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "7597:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7602:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7602:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7593:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7593:3:5"
																				},
																				"nativeSrc": "7593:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7593:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7545:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "7545:33:5"
																		},
																		"nativeSrc": "7545:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7545:63:5"
																	},
																	"nativeSrc": "7545:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "7545:63:5"
																}
															]
														},
														{
															"nativeSrc": "7628:175:5",
															"nodeType": "YulBlock",
															"src": "7628:175:5",
															"statements": [
																{
																	"nativeSrc": "7674:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7674:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7704:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7704:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7711:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7711:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7700:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7700:3:5"
																				},
																				"nativeSrc": "7700:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7700:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7694:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7694:5:5"
																		},
																		"nativeSrc": "7694:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7694:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7678:12:5",
																			"nodeType": "YulTypedName",
																			"src": "7678:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7764:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "7764:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7782:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "7782:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7787:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7787:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7778:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7778:3:5"
																				},
																				"nativeSrc": "7778:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7778:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7730:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "7730:33:5"
																		},
																		"nativeSrc": "7730:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7730:63:5"
																	},
																	"nativeSrc": "7730:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "7730:63:5"
																}
															]
														},
														{
															"nativeSrc": "7813:11:5",
															"nodeType": "YulAssignment",
															"src": "7813:11:5",
															"value": {
																"name": "tail",
																"nativeSrc": "7820:4:5",
																"nodeType": "YulIdentifier",
																"src": "7820:4:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7813:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7813:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactOutputParams_$181_memory_ptr_to_t_struct$_ExactOutputParams_$181_memory_ptr_fromStack",
												"nativeSrc": "6661:1169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6782:5:5",
														"nodeType": "YulTypedName",
														"src": "6782:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6789:3:5",
														"nodeType": "YulTypedName",
														"src": "6789:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6798:3:5",
														"nodeType": "YulTypedName",
														"src": "6798:3:5",
														"type": ""
													}
												],
												"src": "6661:1169:5"
											},
											{
												"body": {
													"nativeSrc": "8002:243:5",
													"nodeType": "YulBlock",
													"src": "8002:243:5",
													"statements": [
														{
															"nativeSrc": "8012:26:5",
															"nodeType": "YulAssignment",
															"src": "8012:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8024:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8024:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8035:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8035:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8020:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8020:3:5"
																},
																"nativeSrc": "8020:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8020:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8012:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8012:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8059:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8059:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8070:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8070:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8055:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8055:3:5"
																		},
																		"nativeSrc": "8055:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8055:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8078:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8078:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8084:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8084:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8074:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8074:3:5"
																		},
																		"nativeSrc": "8074:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8074:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8048:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8048:6:5"
																},
																"nativeSrc": "8048:47:5",
																"nodeType": "YulFunctionCall",
																"src": "8048:47:5"
															},
															"nativeSrc": "8048:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "8048:47:5"
														},
														{
															"nativeSrc": "8104:134:5",
															"nodeType": "YulAssignment",
															"src": "8104:134:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8224:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8224:6:5"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8233:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "8233:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactOutputParams_$181_memory_ptr_to_t_struct$_ExactOutputParams_$181_memory_ptr_fromStack",
																	"nativeSrc": "8112:111:5",
																	"nodeType": "YulIdentifier",
																	"src": "8112:111:5"
																},
																"nativeSrc": "8112:126:5",
																"nodeType": "YulFunctionCall",
																"src": "8112:126:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8104:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8104:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactOutputParams_$181_memory_ptr__to_t_struct$_ExactOutputParams_$181_memory_ptr__fromStack_reversed",
												"nativeSrc": "7836:409:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7974:9:5",
														"nodeType": "YulTypedName",
														"src": "7974:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7986:6:5",
														"nodeType": "YulTypedName",
														"src": "7986:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7997:4:5",
														"nodeType": "YulTypedName",
														"src": "7997:4:5",
														"type": ""
													}
												],
												"src": "7836:409:5"
											},
											{
												"body": {
													"nativeSrc": "8314:80:5",
													"nodeType": "YulBlock",
													"src": "8314:80:5",
													"statements": [
														{
															"nativeSrc": "8324:22:5",
															"nodeType": "YulAssignment",
															"src": "8324:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8339:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8339:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8333:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8333:5:5"
																},
																"nativeSrc": "8333:13:5",
																"nodeType": "YulFunctionCall",
																"src": "8333:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8324:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8324:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8382:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8382:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "8355:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "8355:26:5"
																},
																"nativeSrc": "8355:33:5",
																"nodeType": "YulFunctionCall",
																"src": "8355:33:5"
															},
															"nativeSrc": "8355:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "8355:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "8251:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8292:6:5",
														"nodeType": "YulTypedName",
														"src": "8292:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8300:3:5",
														"nodeType": "YulTypedName",
														"src": "8300:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8308:5:5",
														"nodeType": "YulTypedName",
														"src": "8308:5:5",
														"type": ""
													}
												],
												"src": "8251:143:5"
											},
											{
												"body": {
													"nativeSrc": "8477:274:5",
													"nodeType": "YulBlock",
													"src": "8477:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "8523:83:5",
																"nodeType": "YulBlock",
																"src": "8523:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8525:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "8525:77:5"
																			},
																			"nativeSrc": "8525:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8525:79:5"
																		},
																		"nativeSrc": "8525:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8525:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8498:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "8498:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8507:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8507:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8494:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8494:3:5"
																		},
																		"nativeSrc": "8494:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8494:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8519:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8519:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8490:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8490:3:5"
																},
																"nativeSrc": "8490:32:5",
																"nodeType": "YulFunctionCall",
																"src": "8490:32:5"
															},
															"nativeSrc": "8487:119:5",
															"nodeType": "YulIf",
															"src": "8487:119:5"
														},
														{
															"nativeSrc": "8616:128:5",
															"nodeType": "YulBlock",
															"src": "8616:128:5",
															"statements": [
																{
																	"nativeSrc": "8631:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8631:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8645:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8645:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8635:6:5",
																			"nodeType": "YulTypedName",
																			"src": "8635:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8660:74:5",
																	"nodeType": "YulAssignment",
																	"src": "8660:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8706:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "8706:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8717:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "8717:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8702:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8702:3:5"
																				},
																				"nativeSrc": "8702:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8702:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8726:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "8726:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8670:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "8670:31:5"
																		},
																		"nativeSrc": "8670:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8670:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8660:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "8660:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "8400:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8447:9:5",
														"nodeType": "YulTypedName",
														"src": "8447:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8458:7:5",
														"nodeType": "YulTypedName",
														"src": "8458:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8470:6:5",
														"nodeType": "YulTypedName",
														"src": "8470:6:5",
														"type": ""
													}
												],
												"src": "8400:351:5"
											},
											{
												"body": {
													"nativeSrc": "8785:152:5",
													"nodeType": "YulBlock",
													"src": "8785:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8802:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8802:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8805:77:5",
																		"nodeType": "YulLiteral",
																		"src": "8805:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8795:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8795:6:5"
																},
																"nativeSrc": "8795:88:5",
																"nodeType": "YulFunctionCall",
																"src": "8795:88:5"
															},
															"nativeSrc": "8795:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "8795:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8899:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8899:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8902:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8902:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8892:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8892:6:5"
																},
																"nativeSrc": "8892:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8892:15:5"
															},
															"nativeSrc": "8892:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8892:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8923:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8923:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8926:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8926:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8916:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8916:6:5"
																},
																"nativeSrc": "8916:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8916:15:5"
															},
															"nativeSrc": "8916:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8916:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8757:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "8757:180:5"
											},
											{
												"body": {
													"nativeSrc": "8988:149:5",
													"nodeType": "YulBlock",
													"src": "8988:149:5",
													"statements": [
														{
															"nativeSrc": "8998:25:5",
															"nodeType": "YulAssignment",
															"src": "8998:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9021:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9021:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9003:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "9003:17:5"
																},
																"nativeSrc": "9003:20:5",
																"nodeType": "YulFunctionCall",
																"src": "9003:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8998:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "8998:1:5"
																}
															]
														},
														{
															"nativeSrc": "9032:25:5",
															"nodeType": "YulAssignment",
															"src": "9032:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9055:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9055:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9037:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "9037:17:5"
																},
																"nativeSrc": "9037:20:5",
																"nodeType": "YulFunctionCall",
																"src": "9037:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9032:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "9032:1:5"
																}
															]
														},
														{
															"nativeSrc": "9066:17:5",
															"nodeType": "YulAssignment",
															"src": "9066:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9078:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9078:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9081:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9081:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9074:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9074:3:5"
																},
																"nativeSrc": "9074:9:5",
																"nodeType": "YulFunctionCall",
																"src": "9074:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9066:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9066:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9108:22:5",
																"nodeType": "YulBlock",
																"src": "9108:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9110:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "9110:16:5"
																			},
																			"nativeSrc": "9110:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9110:18:5"
																		},
																		"nativeSrc": "9110:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9110:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9099:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "9099:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9105:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9105:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9096:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "9096:2:5"
																},
																"nativeSrc": "9096:11:5",
																"nodeType": "YulFunctionCall",
																"src": "9096:11:5"
															},
															"nativeSrc": "9093:37:5",
															"nodeType": "YulIf",
															"src": "9093:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8943:194:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8974:1:5",
														"nodeType": "YulTypedName",
														"src": "8974:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8977:1:5",
														"nodeType": "YulTypedName",
														"src": "8977:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8983:4:5",
														"nodeType": "YulTypedName",
														"src": "8983:4:5",
														"type": ""
													}
												],
												"src": "8943:194:5"
											},
											{
												"body": {
													"nativeSrc": "9196:52:5",
													"nodeType": "YulBlock",
													"src": "9196:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9213:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9213:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9235:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "9235:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "9218:16:5",
																			"nodeType": "YulIdentifier",
																			"src": "9218:16:5"
																		},
																		"nativeSrc": "9218:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9218:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9206:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9206:6:5"
																},
																"nativeSrc": "9206:36:5",
																"nodeType": "YulFunctionCall",
																"src": "9206:36:5"
															},
															"nativeSrc": "9206:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "9206:36:5"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nativeSrc": "9143:105:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9184:5:5",
														"nodeType": "YulTypedName",
														"src": "9184:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9191:3:5",
														"nodeType": "YulTypedName",
														"src": "9191:3:5",
														"type": ""
													}
												],
												"src": "9143:105:5"
											},
											{
												"body": {
													"nativeSrc": "9309:53:5",
													"nodeType": "YulBlock",
													"src": "9309:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9326:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9326:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9349:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "9349:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "9331:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "9331:17:5"
																		},
																		"nativeSrc": "9331:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9331:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9319:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9319:6:5"
																},
																"nativeSrc": "9319:37:5",
																"nodeType": "YulFunctionCall",
																"src": "9319:37:5"
															},
															"nativeSrc": "9319:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "9319:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nativeSrc": "9254:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9297:5:5",
														"nodeType": "YulTypedName",
														"src": "9297:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9304:3:5",
														"nodeType": "YulTypedName",
														"src": "9304:3:5",
														"type": ""
													}
												],
												"src": "9254:108:5"
											},
											{
												"body": {
													"nativeSrc": "9606:1479:5",
													"nodeType": "YulBlock",
													"src": "9606:1479:5",
													"statements": [
														{
															"nativeSrc": "9616:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "9616:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9632:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9632:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9637:6:5",
																		"nodeType": "YulLiteral",
																		"src": "9637:6:5",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9628:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9628:3:5"
																},
																"nativeSrc": "9628:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9628:16:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "9620:4:5",
																	"nodeType": "YulTypedName",
																	"src": "9620:4:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9654:167:5",
															"nodeType": "YulBlock",
															"src": "9654:167:5",
															"statements": [
																{
																	"nativeSrc": "9692:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9692:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9722:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "9722:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9729:4:5",
																						"nodeType": "YulLiteral",
																						"src": "9729:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9718:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "9718:3:5"
																				},
																				"nativeSrc": "9718:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9718:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9712:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9712:5:5"
																		},
																		"nativeSrc": "9712:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9712:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "9696:12:5",
																			"nodeType": "YulTypedName",
																			"src": "9696:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "9782:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "9782:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "9800:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "9800:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9805:4:5",
																						"nodeType": "YulLiteral",
																						"src": "9805:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9796:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "9796:3:5"
																				},
																				"nativeSrc": "9796:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9796:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "9748:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "9748:33:5"
																		},
																		"nativeSrc": "9748:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9748:63:5"
																	},
																	"nativeSrc": "9748:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "9748:63:5"
																}
															]
														},
														{
															"nativeSrc": "9831:168:5",
															"nodeType": "YulBlock",
															"src": "9831:168:5",
															"statements": [
																{
																	"nativeSrc": "9870:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9870:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9900:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "9900:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9907:4:5",
																						"nodeType": "YulLiteral",
																						"src": "9907:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9896:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "9896:3:5"
																				},
																				"nativeSrc": "9896:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9896:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9890:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9890:5:5"
																		},
																		"nativeSrc": "9890:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9890:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "9874:12:5",
																			"nodeType": "YulTypedName",
																			"src": "9874:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "9960:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "9960:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "9978:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "9978:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9983:4:5",
																						"nodeType": "YulLiteral",
																						"src": "9983:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9974:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "9974:3:5"
																				},
																				"nativeSrc": "9974:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9974:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "9926:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "9926:33:5"
																		},
																		"nativeSrc": "9926:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9926:63:5"
																	},
																	"nativeSrc": "9926:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "9926:63:5"
																}
															]
														},
														{
															"nativeSrc": "10009:161:5",
															"nodeType": "YulBlock",
															"src": "10009:161:5",
															"statements": [
																{
																	"nativeSrc": "10043:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10043:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10073:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "10073:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10080:4:5",
																						"nodeType": "YulLiteral",
																						"src": "10080:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10069:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "10069:3:5"
																				},
																				"nativeSrc": "10069:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10069:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10063:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "10063:5:5"
																		},
																		"nativeSrc": "10063:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10063:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "10047:12:5",
																			"nodeType": "YulTypedName",
																			"src": "10047:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "10131:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "10131:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "10149:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "10149:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10154:4:5",
																						"nodeType": "YulLiteral",
																						"src": "10154:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10145:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "10145:3:5"
																				},
																				"nativeSrc": "10145:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10145:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "10099:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "10099:31:5"
																		},
																		"nativeSrc": "10099:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10099:61:5"
																	},
																	"nativeSrc": "10099:61:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "10099:61:5"
																}
															]
														},
														{
															"nativeSrc": "10180:169:5",
															"nodeType": "YulBlock",
															"src": "10180:169:5",
															"statements": [
																{
																	"nativeSrc": "10220:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10220:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10250:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "10250:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10257:4:5",
																						"nodeType": "YulLiteral",
																						"src": "10257:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10246:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "10246:3:5"
																				},
																				"nativeSrc": "10246:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10246:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10240:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "10240:5:5"
																		},
																		"nativeSrc": "10240:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10240:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "10224:12:5",
																			"nodeType": "YulTypedName",
																			"src": "10224:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "10310:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "10310:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "10328:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "10328:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10333:4:5",
																						"nodeType": "YulLiteral",
																						"src": "10333:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10324:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "10324:3:5"
																				},
																				"nativeSrc": "10324:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10324:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "10276:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "10276:33:5"
																		},
																		"nativeSrc": "10276:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10276:63:5"
																	},
																	"nativeSrc": "10276:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "10276:63:5"
																}
															]
														},
														{
															"nativeSrc": "10359:168:5",
															"nodeType": "YulBlock",
															"src": "10359:168:5",
															"statements": [
																{
																	"nativeSrc": "10398:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10398:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10428:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "10428:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10435:4:5",
																						"nodeType": "YulLiteral",
																						"src": "10435:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10424:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "10424:3:5"
																				},
																				"nativeSrc": "10424:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10424:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10418:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "10418:5:5"
																		},
																		"nativeSrc": "10418:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10418:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "10402:12:5",
																			"nodeType": "YulTypedName",
																			"src": "10402:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "10488:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "10488:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "10506:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "10506:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10511:4:5",
																						"nodeType": "YulLiteral",
																						"src": "10511:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10502:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "10502:3:5"
																				},
																				"nativeSrc": "10502:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10502:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "10454:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "10454:33:5"
																		},
																		"nativeSrc": "10454:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10454:63:5"
																	},
																	"nativeSrc": "10454:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "10454:63:5"
																}
															]
														},
														{
															"nativeSrc": "10537:168:5",
															"nodeType": "YulBlock",
															"src": "10537:168:5",
															"statements": [
																{
																	"nativeSrc": "10576:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10576:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10606:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "10606:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10613:4:5",
																						"nodeType": "YulLiteral",
																						"src": "10613:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10602:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "10602:3:5"
																				},
																				"nativeSrc": "10602:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10602:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10596:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "10596:5:5"
																		},
																		"nativeSrc": "10596:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10596:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "10580:12:5",
																			"nodeType": "YulTypedName",
																			"src": "10580:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "10666:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "10666:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "10684:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "10684:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10689:4:5",
																						"nodeType": "YulLiteral",
																						"src": "10689:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10680:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "10680:3:5"
																				},
																				"nativeSrc": "10680:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10680:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "10632:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "10632:33:5"
																		},
																		"nativeSrc": "10632:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10632:63:5"
																	},
																	"nativeSrc": "10632:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "10632:63:5"
																}
															]
														},
														{
															"nativeSrc": "10715:176:5",
															"nodeType": "YulBlock",
															"src": "10715:176:5",
															"statements": [
																{
																	"nativeSrc": "10762:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10762:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10792:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "10792:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10799:4:5",
																						"nodeType": "YulLiteral",
																						"src": "10799:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10788:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "10788:3:5"
																				},
																				"nativeSrc": "10788:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10788:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10782:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "10782:5:5"
																		},
																		"nativeSrc": "10782:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10782:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "10766:12:5",
																			"nodeType": "YulTypedName",
																			"src": "10766:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "10852:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "10852:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "10870:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "10870:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10875:4:5",
																						"nodeType": "YulLiteral",
																						"src": "10875:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10866:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "10866:3:5"
																				},
																				"nativeSrc": "10866:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10866:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "10818:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "10818:33:5"
																		},
																		"nativeSrc": "10818:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10818:63:5"
																	},
																	"nativeSrc": "10818:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "10818:63:5"
																}
															]
														},
														{
															"nativeSrc": "10901:177:5",
															"nodeType": "YulBlock",
															"src": "10901:177:5",
															"statements": [
																{
																	"nativeSrc": "10949:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10949:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10979:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "10979:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10986:4:5",
																						"nodeType": "YulLiteral",
																						"src": "10986:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10975:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "10975:3:5"
																				},
																				"nativeSrc": "10975:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10975:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10969:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "10969:5:5"
																		},
																		"nativeSrc": "10969:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10969:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "10953:12:5",
																			"nodeType": "YulTypedName",
																			"src": "10953:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "11039:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "11039:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "11057:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "11057:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11062:4:5",
																						"nodeType": "YulLiteral",
																						"src": "11062:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11053:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "11053:3:5"
																				},
																				"nativeSrc": "11053:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "11053:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nativeSrc": "11005:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "11005:33:5"
																		},
																		"nativeSrc": "11005:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11005:63:5"
																	},
																	"nativeSrc": "11005:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "11005:63:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack",
												"nativeSrc": "9462:1623:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9593:5:5",
														"nodeType": "YulTypedName",
														"src": "9593:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9600:3:5",
														"nodeType": "YulTypedName",
														"src": "9600:3:5",
														"type": ""
													}
												],
												"src": "9462:1623:5"
											},
											{
												"body": {
													"nativeSrc": "11267:203:5",
													"nodeType": "YulBlock",
													"src": "11267:203:5",
													"statements": [
														{
															"nativeSrc": "11277:27:5",
															"nodeType": "YulAssignment",
															"src": "11277:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11289:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "11289:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11300:3:5",
																		"nodeType": "YulLiteral",
																		"src": "11300:3:5",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11285:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11285:3:5"
																},
																"nativeSrc": "11285:19:5",
																"nodeType": "YulFunctionCall",
																"src": "11285:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11277:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11277:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11436:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11436:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11449:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11449:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11460:1:5",
																				"nodeType": "YulLiteral",
																				"src": "11460:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11445:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11445:3:5"
																		},
																		"nativeSrc": "11445:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11445:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack",
																	"nativeSrc": "11314:121:5",
																	"nodeType": "YulIdentifier",
																	"src": "11314:121:5"
																},
																"nativeSrc": "11314:149:5",
																"nodeType": "YulFunctionCall",
																"src": "11314:149:5"
															},
															"nativeSrc": "11314:149:5",
															"nodeType": "YulExpressionStatement",
															"src": "11314:149:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed",
												"nativeSrc": "11091:379:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11239:9:5",
														"nodeType": "YulTypedName",
														"src": "11239:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11251:6:5",
														"nodeType": "YulTypedName",
														"src": "11251:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11262:4:5",
														"nodeType": "YulTypedName",
														"src": "11262:4:5",
														"type": ""
													}
												],
												"src": "11091:379:5"
											},
											{
												"body": {
													"nativeSrc": "11718:1479:5",
													"nodeType": "YulBlock",
													"src": "11718:1479:5",
													"statements": [
														{
															"nativeSrc": "11728:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "11728:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11744:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11744:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11749:6:5",
																		"nodeType": "YulLiteral",
																		"src": "11749:6:5",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11740:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11740:3:5"
																},
																"nativeSrc": "11740:16:5",
																"nodeType": "YulFunctionCall",
																"src": "11740:16:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "11732:4:5",
																	"nodeType": "YulTypedName",
																	"src": "11732:4:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11766:167:5",
															"nodeType": "YulBlock",
															"src": "11766:167:5",
															"statements": [
																{
																	"nativeSrc": "11804:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11804:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11834:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "11834:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11841:4:5",
																						"nodeType": "YulLiteral",
																						"src": "11841:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11830:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "11830:3:5"
																				},
																				"nativeSrc": "11830:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "11830:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11824:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "11824:5:5"
																		},
																		"nativeSrc": "11824:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11824:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "11808:12:5",
																			"nodeType": "YulTypedName",
																			"src": "11808:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "11894:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "11894:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "11912:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "11912:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11917:4:5",
																						"nodeType": "YulLiteral",
																						"src": "11917:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11908:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "11908:3:5"
																				},
																				"nativeSrc": "11908:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "11908:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "11860:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "11860:33:5"
																		},
																		"nativeSrc": "11860:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11860:63:5"
																	},
																	"nativeSrc": "11860:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "11860:63:5"
																}
															]
														},
														{
															"nativeSrc": "11943:168:5",
															"nodeType": "YulBlock",
															"src": "11943:168:5",
															"statements": [
																{
																	"nativeSrc": "11982:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11982:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12012:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "12012:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12019:4:5",
																						"nodeType": "YulLiteral",
																						"src": "12019:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12008:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "12008:3:5"
																				},
																				"nativeSrc": "12008:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "12008:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12002:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "12002:5:5"
																		},
																		"nativeSrc": "12002:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12002:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "11986:12:5",
																			"nodeType": "YulTypedName",
																			"src": "11986:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "12072:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "12072:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "12090:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "12090:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12095:4:5",
																						"nodeType": "YulLiteral",
																						"src": "12095:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12086:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "12086:3:5"
																				},
																				"nativeSrc": "12086:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "12086:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "12038:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "12038:33:5"
																		},
																		"nativeSrc": "12038:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12038:63:5"
																	},
																	"nativeSrc": "12038:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "12038:63:5"
																}
															]
														},
														{
															"nativeSrc": "12121:161:5",
															"nodeType": "YulBlock",
															"src": "12121:161:5",
															"statements": [
																{
																	"nativeSrc": "12155:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12155:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12185:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "12185:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12192:4:5",
																						"nodeType": "YulLiteral",
																						"src": "12192:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12181:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "12181:3:5"
																				},
																				"nativeSrc": "12181:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "12181:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12175:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "12175:5:5"
																		},
																		"nativeSrc": "12175:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12175:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "12159:12:5",
																			"nodeType": "YulTypedName",
																			"src": "12159:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "12243:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "12243:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "12261:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "12261:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12266:4:5",
																						"nodeType": "YulLiteral",
																						"src": "12266:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12257:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "12257:3:5"
																				},
																				"nativeSrc": "12257:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "12257:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "12211:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "12211:31:5"
																		},
																		"nativeSrc": "12211:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12211:61:5"
																	},
																	"nativeSrc": "12211:61:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "12211:61:5"
																}
															]
														},
														{
															"nativeSrc": "12292:169:5",
															"nodeType": "YulBlock",
															"src": "12292:169:5",
															"statements": [
																{
																	"nativeSrc": "12332:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12332:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12362:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "12362:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12369:4:5",
																						"nodeType": "YulLiteral",
																						"src": "12369:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12358:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "12358:3:5"
																				},
																				"nativeSrc": "12358:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "12358:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12352:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "12352:5:5"
																		},
																		"nativeSrc": "12352:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12352:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "12336:12:5",
																			"nodeType": "YulTypedName",
																			"src": "12336:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "12422:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "12422:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "12440:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "12440:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12445:4:5",
																						"nodeType": "YulLiteral",
																						"src": "12445:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12436:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "12436:3:5"
																				},
																				"nativeSrc": "12436:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "12436:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "12388:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "12388:33:5"
																		},
																		"nativeSrc": "12388:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12388:63:5"
																	},
																	"nativeSrc": "12388:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "12388:63:5"
																}
															]
														},
														{
															"nativeSrc": "12471:168:5",
															"nodeType": "YulBlock",
															"src": "12471:168:5",
															"statements": [
																{
																	"nativeSrc": "12510:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12510:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12540:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "12540:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12547:4:5",
																						"nodeType": "YulLiteral",
																						"src": "12547:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12536:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "12536:3:5"
																				},
																				"nativeSrc": "12536:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "12536:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12530:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "12530:5:5"
																		},
																		"nativeSrc": "12530:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12530:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "12514:12:5",
																			"nodeType": "YulTypedName",
																			"src": "12514:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "12600:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "12600:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "12618:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "12618:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12623:4:5",
																						"nodeType": "YulLiteral",
																						"src": "12623:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12614:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "12614:3:5"
																				},
																				"nativeSrc": "12614:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "12614:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "12566:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "12566:33:5"
																		},
																		"nativeSrc": "12566:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12566:63:5"
																	},
																	"nativeSrc": "12566:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "12566:63:5"
																}
															]
														},
														{
															"nativeSrc": "12649:169:5",
															"nodeType": "YulBlock",
															"src": "12649:169:5",
															"statements": [
																{
																	"nativeSrc": "12689:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12689:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12719:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "12719:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12726:4:5",
																						"nodeType": "YulLiteral",
																						"src": "12726:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12715:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "12715:3:5"
																				},
																				"nativeSrc": "12715:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "12715:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12709:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "12709:5:5"
																		},
																		"nativeSrc": "12709:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12709:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "12693:12:5",
																			"nodeType": "YulTypedName",
																			"src": "12693:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "12779:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "12779:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "12797:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "12797:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12802:4:5",
																						"nodeType": "YulLiteral",
																						"src": "12802:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12793:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "12793:3:5"
																				},
																				"nativeSrc": "12793:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "12793:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "12745:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "12745:33:5"
																		},
																		"nativeSrc": "12745:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12745:63:5"
																	},
																	"nativeSrc": "12745:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "12745:63:5"
																}
															]
														},
														{
															"nativeSrc": "12828:175:5",
															"nodeType": "YulBlock",
															"src": "12828:175:5",
															"statements": [
																{
																	"nativeSrc": "12874:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12874:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12904:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "12904:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12911:4:5",
																						"nodeType": "YulLiteral",
																						"src": "12911:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12900:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "12900:3:5"
																				},
																				"nativeSrc": "12900:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "12900:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12894:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "12894:5:5"
																		},
																		"nativeSrc": "12894:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12894:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "12878:12:5",
																			"nodeType": "YulTypedName",
																			"src": "12878:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "12964:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "12964:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "12982:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "12982:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12987:4:5",
																						"nodeType": "YulLiteral",
																						"src": "12987:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12978:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "12978:3:5"
																				},
																				"nativeSrc": "12978:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "12978:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "12930:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "12930:33:5"
																		},
																		"nativeSrc": "12930:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12930:63:5"
																	},
																	"nativeSrc": "12930:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "12930:63:5"
																}
															]
														},
														{
															"nativeSrc": "13013:177:5",
															"nodeType": "YulBlock",
															"src": "13013:177:5",
															"statements": [
																{
																	"nativeSrc": "13061:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13061:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13091:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "13091:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13098:4:5",
																						"nodeType": "YulLiteral",
																						"src": "13098:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13087:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "13087:3:5"
																				},
																				"nativeSrc": "13087:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "13087:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "13081:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "13081:5:5"
																		},
																		"nativeSrc": "13081:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13081:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "13065:12:5",
																			"nodeType": "YulTypedName",
																			"src": "13065:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "13151:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "13151:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "13169:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "13169:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13174:4:5",
																						"nodeType": "YulLiteral",
																						"src": "13174:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13165:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "13165:3:5"
																				},
																				"nativeSrc": "13165:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "13165:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nativeSrc": "13117:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "13117:33:5"
																		},
																		"nativeSrc": "13117:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13117:63:5"
																	},
																	"nativeSrc": "13117:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "13117:63:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactOutputSingleParams_$161_memory_ptr_to_t_struct$_ExactOutputSingleParams_$161_memory_ptr_fromStack",
												"nativeSrc": "11572:1625:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11705:5:5",
														"nodeType": "YulTypedName",
														"src": "11705:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11712:3:5",
														"nodeType": "YulTypedName",
														"src": "11712:3:5",
														"type": ""
													}
												],
												"src": "11572:1625:5"
											},
											{
												"body": {
													"nativeSrc": "13381:205:5",
													"nodeType": "YulBlock",
													"src": "13381:205:5",
													"statements": [
														{
															"nativeSrc": "13391:27:5",
															"nodeType": "YulAssignment",
															"src": "13391:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13403:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "13403:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13414:3:5",
																		"nodeType": "YulLiteral",
																		"src": "13414:3:5",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13399:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13399:3:5"
																},
																"nativeSrc": "13399:19:5",
																"nodeType": "YulFunctionCall",
																"src": "13399:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13391:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "13391:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13552:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "13552:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13565:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "13565:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13576:1:5",
																				"nodeType": "YulLiteral",
																				"src": "13576:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13561:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13561:3:5"
																		},
																		"nativeSrc": "13561:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13561:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactOutputSingleParams_$161_memory_ptr_to_t_struct$_ExactOutputSingleParams_$161_memory_ptr_fromStack",
																	"nativeSrc": "13428:123:5",
																	"nodeType": "YulIdentifier",
																	"src": "13428:123:5"
																},
																"nativeSrc": "13428:151:5",
																"nodeType": "YulFunctionCall",
																"src": "13428:151:5"
															},
															"nativeSrc": "13428:151:5",
															"nodeType": "YulExpressionStatement",
															"src": "13428:151:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactOutputSingleParams_$161_memory_ptr__to_t_struct$_ExactOutputSingleParams_$161_memory_ptr__fromStack_reversed",
												"nativeSrc": "13203:383:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13353:9:5",
														"nodeType": "YulTypedName",
														"src": "13353:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13365:6:5",
														"nodeType": "YulTypedName",
														"src": "13365:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13376:4:5",
														"nodeType": "YulTypedName",
														"src": "13376:4:5",
														"type": ""
													}
												],
												"src": "13203:383:5"
											},
											{
												"body": {
													"nativeSrc": "13814:1027:5",
													"nodeType": "YulBlock",
													"src": "13814:1027:5",
													"statements": [
														{
															"nativeSrc": "13824:26:5",
															"nodeType": "YulVariableDeclaration",
															"src": "13824:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13840:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "13840:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13845:4:5",
																		"nodeType": "YulLiteral",
																		"src": "13845:4:5",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13836:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13836:3:5"
																},
																"nativeSrc": "13836:14:5",
																"nodeType": "YulFunctionCall",
																"src": "13836:14:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "13828:4:5",
																	"nodeType": "YulTypedName",
																	"src": "13828:4:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13860:233:5",
															"nodeType": "YulBlock",
															"src": "13860:233:5",
															"statements": [
																{
																	"nativeSrc": "13895:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13895:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13925:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "13925:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13932:4:5",
																						"nodeType": "YulLiteral",
																						"src": "13932:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13921:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "13921:3:5"
																				},
																				"nativeSrc": "13921:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "13921:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "13915:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "13915:5:5"
																		},
																		"nativeSrc": "13915:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13915:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "13899:12:5",
																			"nodeType": "YulTypedName",
																			"src": "13899:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "13963:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "13963:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13968:4:5",
																						"nodeType": "YulLiteral",
																						"src": "13968:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13959:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "13959:3:5"
																				},
																				"nativeSrc": "13959:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "13959:14:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nativeSrc": "13979:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "13979:4:5"
																					},
																					{
																						"name": "pos",
																						"nativeSrc": "13985:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "13985:3:5"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "13975:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "13975:3:5"
																				},
																				"nativeSrc": "13975:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "13975:14:5"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "13952:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "13952:6:5"
																		},
																		"nativeSrc": "13952:38:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13952:38:5"
																	},
																	"nativeSrc": "13952:38:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "13952:38:5"
																},
																{
																	"nativeSrc": "14003:79:5",
																	"nodeType": "YulAssignment",
																	"src": "14003:79:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "14063:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "14063:12:5"
																			},
																			{
																				"name": "tail",
																				"nativeSrc": "14077:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "14077:4:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr",
																			"nativeSrc": "14011:51:5",
																			"nodeType": "YulIdentifier",
																			"src": "14011:51:5"
																		},
																		"nativeSrc": "14011:71:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14011:71:5"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nativeSrc": "14003:4:5",
																			"nodeType": "YulIdentifier",
																			"src": "14003:4:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14103:169:5",
															"nodeType": "YulBlock",
															"src": "14103:169:5",
															"statements": [
																{
																	"nativeSrc": "14143:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14143:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14173:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "14173:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14180:4:5",
																						"nodeType": "YulLiteral",
																						"src": "14180:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14169:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "14169:3:5"
																				},
																				"nativeSrc": "14169:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "14169:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "14163:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "14163:5:5"
																		},
																		"nativeSrc": "14163:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14163:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "14147:12:5",
																			"nodeType": "YulTypedName",
																			"src": "14147:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "14233:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "14233:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "14251:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "14251:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14256:4:5",
																						"nodeType": "YulLiteral",
																						"src": "14256:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14247:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "14247:3:5"
																				},
																				"nativeSrc": "14247:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "14247:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "14199:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "14199:33:5"
																		},
																		"nativeSrc": "14199:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14199:63:5"
																	},
																	"nativeSrc": "14199:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "14199:63:5"
																}
															]
														},
														{
															"nativeSrc": "14282:168:5",
															"nodeType": "YulBlock",
															"src": "14282:168:5",
															"statements": [
																{
																	"nativeSrc": "14321:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14321:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14351:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "14351:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14358:4:5",
																						"nodeType": "YulLiteral",
																						"src": "14358:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14347:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "14347:3:5"
																				},
																				"nativeSrc": "14347:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "14347:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "14341:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "14341:5:5"
																		},
																		"nativeSrc": "14341:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14341:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "14325:12:5",
																			"nodeType": "YulTypedName",
																			"src": "14325:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "14411:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "14411:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "14429:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "14429:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14434:4:5",
																						"nodeType": "YulLiteral",
																						"src": "14434:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14425:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "14425:3:5"
																				},
																				"nativeSrc": "14425:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "14425:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "14377:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "14377:33:5"
																		},
																		"nativeSrc": "14377:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14377:63:5"
																	},
																	"nativeSrc": "14377:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "14377:63:5"
																}
															]
														},
														{
															"nativeSrc": "14460:168:5",
															"nodeType": "YulBlock",
															"src": "14460:168:5",
															"statements": [
																{
																	"nativeSrc": "14499:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14499:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14529:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "14529:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14536:4:5",
																						"nodeType": "YulLiteral",
																						"src": "14536:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14525:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "14525:3:5"
																				},
																				"nativeSrc": "14525:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "14525:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "14519:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "14519:5:5"
																		},
																		"nativeSrc": "14519:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14519:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "14503:12:5",
																			"nodeType": "YulTypedName",
																			"src": "14503:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "14589:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "14589:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "14607:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "14607:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14612:4:5",
																						"nodeType": "YulLiteral",
																						"src": "14612:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14603:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "14603:3:5"
																				},
																				"nativeSrc": "14603:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "14603:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "14555:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "14555:33:5"
																		},
																		"nativeSrc": "14555:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14555:63:5"
																	},
																	"nativeSrc": "14555:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "14555:63:5"
																}
															]
														},
														{
															"nativeSrc": "14638:176:5",
															"nodeType": "YulBlock",
															"src": "14638:176:5",
															"statements": [
																{
																	"nativeSrc": "14685:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14685:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14715:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "14715:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14722:4:5",
																						"nodeType": "YulLiteral",
																						"src": "14722:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14711:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "14711:3:5"
																				},
																				"nativeSrc": "14711:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "14711:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "14705:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "14705:5:5"
																		},
																		"nativeSrc": "14705:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14705:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "14689:12:5",
																			"nodeType": "YulTypedName",
																			"src": "14689:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "14775:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "14775:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "14793:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "14793:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14798:4:5",
																						"nodeType": "YulLiteral",
																						"src": "14798:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14789:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "14789:3:5"
																				},
																				"nativeSrc": "14789:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "14789:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "14741:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "14741:33:5"
																		},
																		"nativeSrc": "14741:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14741:63:5"
																	},
																	"nativeSrc": "14741:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "14741:63:5"
																}
															]
														},
														{
															"nativeSrc": "14824:11:5",
															"nodeType": "YulAssignment",
															"src": "14824:11:5",
															"value": {
																"name": "tail",
																"nativeSrc": "14831:4:5",
																"nodeType": "YulIdentifier",
																"src": "14831:4:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14824:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14824:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputParams_$135_memory_ptr_to_t_struct$_ExactInputParams_$135_memory_ptr_fromStack",
												"nativeSrc": "13674:1167:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13793:5:5",
														"nodeType": "YulTypedName",
														"src": "13793:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13800:3:5",
														"nodeType": "YulTypedName",
														"src": "13800:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13809:3:5",
														"nodeType": "YulTypedName",
														"src": "13809:3:5",
														"type": ""
													}
												],
												"src": "13674:1167:5"
											},
											{
												"body": {
													"nativeSrc": "15011:241:5",
													"nodeType": "YulBlock",
													"src": "15011:241:5",
													"statements": [
														{
															"nativeSrc": "15021:26:5",
															"nodeType": "YulAssignment",
															"src": "15021:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15033:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "15033:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15044:2:5",
																		"nodeType": "YulLiteral",
																		"src": "15044:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15029:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "15029:3:5"
																},
																"nativeSrc": "15029:18:5",
																"nodeType": "YulFunctionCall",
																"src": "15029:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15021:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "15021:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15068:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "15068:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15079:1:5",
																				"nodeType": "YulLiteral",
																				"src": "15079:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15064:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "15064:3:5"
																		},
																		"nativeSrc": "15064:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "15064:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15087:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "15087:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15093:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "15093:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15083:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "15083:3:5"
																		},
																		"nativeSrc": "15083:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "15083:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15057:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "15057:6:5"
																},
																"nativeSrc": "15057:47:5",
																"nodeType": "YulFunctionCall",
																"src": "15057:47:5"
															},
															"nativeSrc": "15057:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "15057:47:5"
														},
														{
															"nativeSrc": "15113:132:5",
															"nodeType": "YulAssignment",
															"src": "15113:132:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15231:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "15231:6:5"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "15240:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "15240:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputParams_$135_memory_ptr_to_t_struct$_ExactInputParams_$135_memory_ptr_fromStack",
																	"nativeSrc": "15121:109:5",
																	"nodeType": "YulIdentifier",
																	"src": "15121:109:5"
																},
																"nativeSrc": "15121:124:5",
																"nodeType": "YulFunctionCall",
																"src": "15121:124:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15113:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "15113:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputParams_$135_memory_ptr__to_t_struct$_ExactInputParams_$135_memory_ptr__fromStack_reversed",
												"nativeSrc": "14847:405:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14983:9:5",
														"nodeType": "YulTypedName",
														"src": "14983:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14995:6:5",
														"nodeType": "YulTypedName",
														"src": "14995:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15006:4:5",
														"nodeType": "YulTypedName",
														"src": "15006:4:5",
														"type": ""
													}
												],
												"src": "14847:405:5"
											},
											{
												"body": {
													"nativeSrc": "15412:288:5",
													"nodeType": "YulBlock",
													"src": "15412:288:5",
													"statements": [
														{
															"nativeSrc": "15422:26:5",
															"nodeType": "YulAssignment",
															"src": "15422:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15434:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "15434:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15445:2:5",
																		"nodeType": "YulLiteral",
																		"src": "15445:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15430:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "15430:3:5"
																},
																"nativeSrc": "15430:18:5",
																"nodeType": "YulFunctionCall",
																"src": "15430:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15422:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "15422:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15502:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "15502:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15515:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "15515:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15526:1:5",
																				"nodeType": "YulLiteral",
																				"src": "15526:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15511:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "15511:3:5"
																		},
																		"nativeSrc": "15511:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "15511:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15458:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "15458:43:5"
																},
																"nativeSrc": "15458:71:5",
																"nodeType": "YulFunctionCall",
																"src": "15458:71:5"
															},
															"nativeSrc": "15458:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "15458:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15583:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "15583:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15596:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "15596:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15607:2:5",
																				"nodeType": "YulLiteral",
																				"src": "15607:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15592:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "15592:3:5"
																		},
																		"nativeSrc": "15592:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "15592:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15539:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "15539:43:5"
																},
																"nativeSrc": "15539:72:5",
																"nodeType": "YulFunctionCall",
																"src": "15539:72:5"
															},
															"nativeSrc": "15539:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "15539:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15665:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "15665:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15678:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "15678:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15689:2:5",
																				"nodeType": "YulLiteral",
																				"src": "15689:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15674:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "15674:3:5"
																		},
																		"nativeSrc": "15674:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "15674:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15621:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "15621:43:5"
																},
																"nativeSrc": "15621:72:5",
																"nodeType": "YulFunctionCall",
																"src": "15621:72:5"
															},
															"nativeSrc": "15621:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "15621:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "15258:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15368:9:5",
														"nodeType": "YulTypedName",
														"src": "15368:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15380:6:5",
														"nodeType": "YulTypedName",
														"src": "15380:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15388:6:5",
														"nodeType": "YulTypedName",
														"src": "15388:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15396:6:5",
														"nodeType": "YulTypedName",
														"src": "15396:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15407:4:5",
														"nodeType": "YulTypedName",
														"src": "15407:4:5",
														"type": ""
													}
												],
												"src": "15258:442:5"
											},
											{
												"body": {
													"nativeSrc": "15819:34:5",
													"nodeType": "YulBlock",
													"src": "15819:34:5",
													"statements": [
														{
															"nativeSrc": "15829:18:5",
															"nodeType": "YulAssignment",
															"src": "15829:18:5",
															"value": {
																"name": "pos",
																"nativeSrc": "15844:3:5",
																"nodeType": "YulIdentifier",
																"src": "15844:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "15829:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "15829:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "15706:147:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15791:3:5",
														"nodeType": "YulTypedName",
														"src": "15791:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "15796:6:5",
														"nodeType": "YulTypedName",
														"src": "15796:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "15807:11:5",
														"nodeType": "YulTypedName",
														"src": "15807:11:5",
														"type": ""
													}
												],
												"src": "15706:147:5"
											},
											{
												"body": {
													"nativeSrc": "15967:278:5",
													"nodeType": "YulBlock",
													"src": "15967:278:5",
													"statements": [
														{
															"nativeSrc": "15977:52:5",
															"nodeType": "YulVariableDeclaration",
															"src": "15977:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16023:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "16023:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "15991:31:5",
																	"nodeType": "YulIdentifier",
																	"src": "15991:31:5"
																},
																"nativeSrc": "15991:38:5",
																"nodeType": "YulFunctionCall",
																"src": "15991:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "15981:6:5",
																	"nodeType": "YulTypedName",
																	"src": "15981:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16038:95:5",
															"nodeType": "YulAssignment",
															"src": "16038:95:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16121:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "16121:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16126:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "16126:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16045:75:5",
																	"nodeType": "YulIdentifier",
																	"src": "16045:75:5"
																},
																"nativeSrc": "16045:88:5",
																"nodeType": "YulFunctionCall",
																"src": "16045:88:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16038:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "16038:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16181:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "16181:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16188:4:5",
																				"nodeType": "YulLiteral",
																				"src": "16188:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16177:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "16177:3:5"
																		},
																		"nativeSrc": "16177:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "16177:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16195:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "16195:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16200:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "16200:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "16142:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "16142:34:5"
																},
																"nativeSrc": "16142:65:5",
																"nodeType": "YulFunctionCall",
																"src": "16142:65:5"
															},
															"nativeSrc": "16142:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "16142:65:5"
														},
														{
															"nativeSrc": "16216:23:5",
															"nodeType": "YulAssignment",
															"src": "16216:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16227:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "16227:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16232:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "16232:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16223:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "16223:3:5"
																},
																"nativeSrc": "16223:16:5",
																"nodeType": "YulFunctionCall",
																"src": "16223:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16216:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "16216:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "15859:386:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15948:5:5",
														"nodeType": "YulTypedName",
														"src": "15948:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15955:3:5",
														"nodeType": "YulTypedName",
														"src": "15955:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15963:3:5",
														"nodeType": "YulTypedName",
														"src": "15963:3:5",
														"type": ""
													}
												],
												"src": "15859:386:5"
											},
											{
												"body": {
													"nativeSrc": "16385:137:5",
													"nodeType": "YulBlock",
													"src": "16385:137:5",
													"statements": [
														{
															"nativeSrc": "16396:100:5",
															"nodeType": "YulAssignment",
															"src": "16396:100:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16483:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "16483:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16492:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "16492:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16403:79:5",
																	"nodeType": "YulIdentifier",
																	"src": "16403:79:5"
																},
																"nativeSrc": "16403:93:5",
																"nodeType": "YulFunctionCall",
																"src": "16403:93:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16396:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "16396:3:5"
																}
															]
														},
														{
															"nativeSrc": "16506:10:5",
															"nodeType": "YulAssignment",
															"src": "16506:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "16513:3:5",
																"nodeType": "YulIdentifier",
																"src": "16513:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16506:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "16506:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "16251:271:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16364:3:5",
														"nodeType": "YulTypedName",
														"src": "16364:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16370:6:5",
														"nodeType": "YulTypedName",
														"src": "16370:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16381:3:5",
														"nodeType": "YulTypedName",
														"src": "16381:3:5",
														"type": ""
													}
												],
												"src": "16251:271:5"
											},
											{
												"body": {
													"nativeSrc": "16570:48:5",
													"nodeType": "YulBlock",
													"src": "16570:48:5",
													"statements": [
														{
															"nativeSrc": "16580:32:5",
															"nodeType": "YulAssignment",
															"src": "16580:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16605:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "16605:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "16598:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "16598:6:5"
																		},
																		"nativeSrc": "16598:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "16598:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16591:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "16591:6:5"
																},
																"nativeSrc": "16591:21:5",
																"nodeType": "YulFunctionCall",
																"src": "16591:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "16580:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "16580:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "16528:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16552:5:5",
														"nodeType": "YulTypedName",
														"src": "16552:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "16562:7:5",
														"nodeType": "YulTypedName",
														"src": "16562:7:5",
														"type": ""
													}
												],
												"src": "16528:90:5"
											},
											{
												"body": {
													"nativeSrc": "16664:76:5",
													"nodeType": "YulBlock",
													"src": "16664:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "16718:16:5",
																"nodeType": "YulBlock",
																"src": "16718:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16727:1:5",
																					"nodeType": "YulLiteral",
																					"src": "16727:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16730:1:5",
																					"nodeType": "YulLiteral",
																					"src": "16730:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16720:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "16720:6:5"
																			},
																			"nativeSrc": "16720:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "16720:12:5"
																		},
																		"nativeSrc": "16720:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "16720:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16687:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "16687:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16709:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "16709:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "16694:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "16694:14:5"
																				},
																				"nativeSrc": "16694:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "16694:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "16684:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "16684:2:5"
																		},
																		"nativeSrc": "16684:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "16684:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16677:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "16677:6:5"
																},
																"nativeSrc": "16677:40:5",
																"nodeType": "YulFunctionCall",
																"src": "16677:40:5"
															},
															"nativeSrc": "16674:60:5",
															"nodeType": "YulIf",
															"src": "16674:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "16624:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16657:5:5",
														"nodeType": "YulTypedName",
														"src": "16657:5:5",
														"type": ""
													}
												],
												"src": "16624:116:5"
											},
											{
												"body": {
													"nativeSrc": "16806:77:5",
													"nodeType": "YulBlock",
													"src": "16806:77:5",
													"statements": [
														{
															"nativeSrc": "16816:22:5",
															"nodeType": "YulAssignment",
															"src": "16816:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "16831:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "16831:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16825:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "16825:5:5"
																},
																"nativeSrc": "16825:13:5",
																"nodeType": "YulFunctionCall",
																"src": "16825:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16816:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "16816:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16871:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "16871:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "16847:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "16847:23:5"
																},
																"nativeSrc": "16847:30:5",
																"nodeType": "YulFunctionCall",
																"src": "16847:30:5"
															},
															"nativeSrc": "16847:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "16847:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "16746:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "16784:6:5",
														"nodeType": "YulTypedName",
														"src": "16784:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16792:3:5",
														"nodeType": "YulTypedName",
														"src": "16792:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "16800:5:5",
														"nodeType": "YulTypedName",
														"src": "16800:5:5",
														"type": ""
													}
												],
												"src": "16746:137:5"
											},
											{
												"body": {
													"nativeSrc": "16963:271:5",
													"nodeType": "YulBlock",
													"src": "16963:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "17009:83:5",
																"nodeType": "YulBlock",
																"src": "17009:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17011:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "17011:77:5"
																			},
																			"nativeSrc": "17011:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "17011:79:5"
																		},
																		"nativeSrc": "17011:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "17011:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16984:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "16984:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16993:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "16993:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16980:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "16980:3:5"
																		},
																		"nativeSrc": "16980:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "16980:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17005:2:5",
																		"nodeType": "YulLiteral",
																		"src": "17005:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16976:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "16976:3:5"
																},
																"nativeSrc": "16976:32:5",
																"nodeType": "YulFunctionCall",
																"src": "16976:32:5"
															},
															"nativeSrc": "16973:119:5",
															"nodeType": "YulIf",
															"src": "16973:119:5"
														},
														{
															"nativeSrc": "17102:125:5",
															"nodeType": "YulBlock",
															"src": "17102:125:5",
															"statements": [
																{
																	"nativeSrc": "17117:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17117:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17131:1:5",
																		"nodeType": "YulLiteral",
																		"src": "17131:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17121:6:5",
																			"nodeType": "YulTypedName",
																			"src": "17121:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17146:71:5",
																	"nodeType": "YulAssignment",
																	"src": "17146:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17189:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "17189:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17200:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "17200:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17185:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "17185:3:5"
																				},
																				"nativeSrc": "17185:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "17185:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17209:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "17209:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "17156:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "17156:28:5"
																		},
																		"nativeSrc": "17156:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "17156:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17146:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "17146:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "16889:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16933:9:5",
														"nodeType": "YulTypedName",
														"src": "16933:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16944:7:5",
														"nodeType": "YulTypedName",
														"src": "16944:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16956:6:5",
														"nodeType": "YulTypedName",
														"src": "16956:6:5",
														"type": ""
													}
												],
												"src": "16889:345:5"
											},
											{
												"body": {
													"nativeSrc": "17336:73:5",
													"nodeType": "YulBlock",
													"src": "17336:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17353:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "17353:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17358:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "17358:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17346:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "17346:6:5"
																},
																"nativeSrc": "17346:19:5",
																"nodeType": "YulFunctionCall",
																"src": "17346:19:5"
															},
															"nativeSrc": "17346:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "17346:19:5"
														},
														{
															"nativeSrc": "17374:29:5",
															"nodeType": "YulAssignment",
															"src": "17374:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17393:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "17393:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17398:4:5",
																		"nodeType": "YulLiteral",
																		"src": "17398:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17389:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "17389:3:5"
																},
																"nativeSrc": "17389:14:5",
																"nodeType": "YulFunctionCall",
																"src": "17389:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "17374:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "17374:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "17240:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17308:3:5",
														"nodeType": "YulTypedName",
														"src": "17308:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "17313:6:5",
														"nodeType": "YulTypedName",
														"src": "17313:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "17324:11:5",
														"nodeType": "YulTypedName",
														"src": "17324:11:5",
														"type": ""
													}
												],
												"src": "17240:169:5"
											},
											{
												"body": {
													"nativeSrc": "17521:47:5",
													"nodeType": "YulBlock",
													"src": "17521:47:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17543:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "17543:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17551:1:5",
																				"nodeType": "YulLiteral",
																				"src": "17551:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17539:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "17539:3:5"
																		},
																		"nativeSrc": "17539:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "17539:14:5"
																	},
																	{
																		"hexValue": "535446",
																		"kind": "string",
																		"nativeSrc": "17555:5:5",
																		"nodeType": "YulLiteral",
																		"src": "17555:5:5",
																		"type": "",
																		"value": "STF"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17532:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "17532:6:5"
																},
																"nativeSrc": "17532:29:5",
																"nodeType": "YulFunctionCall",
																"src": "17532:29:5"
															},
															"nativeSrc": "17532:29:5",
															"nodeType": "YulExpressionStatement",
															"src": "17532:29:5"
														}
													]
												},
												"name": "store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
												"nativeSrc": "17415:153:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17513:6:5",
														"nodeType": "YulTypedName",
														"src": "17513:6:5",
														"type": ""
													}
												],
												"src": "17415:153:5"
											},
											{
												"body": {
													"nativeSrc": "17720:219:5",
													"nodeType": "YulBlock",
													"src": "17720:219:5",
													"statements": [
														{
															"nativeSrc": "17730:73:5",
															"nodeType": "YulAssignment",
															"src": "17730:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17796:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "17796:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17801:1:5",
																		"nodeType": "YulLiteral",
																		"src": "17801:1:5",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17737:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "17737:58:5"
																},
																"nativeSrc": "17737:66:5",
																"nodeType": "YulFunctionCall",
																"src": "17737:66:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17730:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "17730:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17901:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "17901:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																	"nativeSrc": "17812:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "17812:88:5"
																},
																"nativeSrc": "17812:93:5",
																"nodeType": "YulFunctionCall",
																"src": "17812:93:5"
															},
															"nativeSrc": "17812:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "17812:93:5"
														},
														{
															"nativeSrc": "17914:19:5",
															"nodeType": "YulAssignment",
															"src": "17914:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17925:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "17925:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17930:2:5",
																		"nodeType": "YulLiteral",
																		"src": "17930:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17921:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "17921:3:5"
																},
																"nativeSrc": "17921:12:5",
																"nodeType": "YulFunctionCall",
																"src": "17921:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17914:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "17914:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17574:365:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17708:3:5",
														"nodeType": "YulTypedName",
														"src": "17708:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17716:3:5",
														"nodeType": "YulTypedName",
														"src": "17716:3:5",
														"type": ""
													}
												],
												"src": "17574:365:5"
											},
											{
												"body": {
													"nativeSrc": "18116:248:5",
													"nodeType": "YulBlock",
													"src": "18116:248:5",
													"statements": [
														{
															"nativeSrc": "18126:26:5",
															"nodeType": "YulAssignment",
															"src": "18126:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18138:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "18138:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18149:2:5",
																		"nodeType": "YulLiteral",
																		"src": "18149:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18134:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "18134:3:5"
																},
																"nativeSrc": "18134:18:5",
																"nodeType": "YulFunctionCall",
																"src": "18134:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18126:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "18126:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18173:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "18173:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18184:1:5",
																				"nodeType": "YulLiteral",
																				"src": "18184:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18169:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "18169:3:5"
																		},
																		"nativeSrc": "18169:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "18169:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18192:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "18192:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18198:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "18198:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18188:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "18188:3:5"
																		},
																		"nativeSrc": "18188:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "18188:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18162:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "18162:6:5"
																},
																"nativeSrc": "18162:47:5",
																"nodeType": "YulFunctionCall",
																"src": "18162:47:5"
															},
															"nativeSrc": "18162:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "18162:47:5"
														},
														{
															"nativeSrc": "18218:139:5",
															"nodeType": "YulAssignment",
															"src": "18218:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18352:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "18352:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18226:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "18226:124:5"
																},
																"nativeSrc": "18226:131:5",
																"nodeType": "YulFunctionCall",
																"src": "18226:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18218:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "18218:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17945:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18096:9:5",
														"nodeType": "YulTypedName",
														"src": "18096:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18111:4:5",
														"nodeType": "YulTypedName",
														"src": "18111:4:5",
														"type": ""
													}
												],
												"src": "17945:419:5"
											},
											{
												"body": {
													"nativeSrc": "18496:206:5",
													"nodeType": "YulBlock",
													"src": "18496:206:5",
													"statements": [
														{
															"nativeSrc": "18506:26:5",
															"nodeType": "YulAssignment",
															"src": "18506:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18518:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "18518:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18529:2:5",
																		"nodeType": "YulLiteral",
																		"src": "18529:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18514:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "18514:3:5"
																},
																"nativeSrc": "18514:18:5",
																"nodeType": "YulFunctionCall",
																"src": "18514:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18506:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "18506:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18586:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "18586:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18599:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "18599:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18610:1:5",
																				"nodeType": "YulLiteral",
																				"src": "18610:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18595:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "18595:3:5"
																		},
																		"nativeSrc": "18595:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "18595:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18542:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "18542:43:5"
																},
																"nativeSrc": "18542:71:5",
																"nodeType": "YulFunctionCall",
																"src": "18542:71:5"
															},
															"nativeSrc": "18542:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "18542:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18667:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "18667:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18680:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "18680:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18691:2:5",
																				"nodeType": "YulLiteral",
																				"src": "18691:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18676:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "18676:3:5"
																		},
																		"nativeSrc": "18676:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "18676:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18623:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "18623:43:5"
																},
																"nativeSrc": "18623:72:5",
																"nodeType": "YulFunctionCall",
																"src": "18623:72:5"
															},
															"nativeSrc": "18623:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "18623:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18370:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18460:9:5",
														"nodeType": "YulTypedName",
														"src": "18460:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18472:6:5",
														"nodeType": "YulTypedName",
														"src": "18472:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18480:6:5",
														"nodeType": "YulTypedName",
														"src": "18480:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18491:4:5",
														"nodeType": "YulTypedName",
														"src": "18491:4:5",
														"type": ""
													}
												],
												"src": "18370:332:5"
											},
											{
												"body": {
													"nativeSrc": "18814:46:5",
													"nodeType": "YulBlock",
													"src": "18814:46:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18836:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "18836:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18844:1:5",
																				"nodeType": "YulLiteral",
																				"src": "18844:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18832:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "18832:3:5"
																		},
																		"nativeSrc": "18832:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "18832:14:5"
																	},
																	{
																		"hexValue": "5341",
																		"kind": "string",
																		"nativeSrc": "18848:4:5",
																		"nodeType": "YulLiteral",
																		"src": "18848:4:5",
																		"type": "",
																		"value": "SA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18825:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "18825:6:5"
																},
																"nativeSrc": "18825:28:5",
																"nodeType": "YulFunctionCall",
																"src": "18825:28:5"
															},
															"nativeSrc": "18825:28:5",
															"nodeType": "YulExpressionStatement",
															"src": "18825:28:5"
														}
													]
												},
												"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
												"nativeSrc": "18708:152:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18806:6:5",
														"nodeType": "YulTypedName",
														"src": "18806:6:5",
														"type": ""
													}
												],
												"src": "18708:152:5"
											},
											{
												"body": {
													"nativeSrc": "19012:219:5",
													"nodeType": "YulBlock",
													"src": "19012:219:5",
													"statements": [
														{
															"nativeSrc": "19022:73:5",
															"nodeType": "YulAssignment",
															"src": "19022:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19088:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "19088:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19093:1:5",
																		"nodeType": "YulLiteral",
																		"src": "19093:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19029:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "19029:58:5"
																},
																"nativeSrc": "19029:66:5",
																"nodeType": "YulFunctionCall",
																"src": "19029:66:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19022:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "19022:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19193:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "19193:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																	"nativeSrc": "19104:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "19104:88:5"
																},
																"nativeSrc": "19104:93:5",
																"nodeType": "YulFunctionCall",
																"src": "19104:93:5"
															},
															"nativeSrc": "19104:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "19104:93:5"
														},
														{
															"nativeSrc": "19206:19:5",
															"nodeType": "YulAssignment",
															"src": "19206:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19217:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "19217:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19222:2:5",
																		"nodeType": "YulLiteral",
																		"src": "19222:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19213:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "19213:3:5"
																},
																"nativeSrc": "19213:12:5",
																"nodeType": "YulFunctionCall",
																"src": "19213:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19206:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "19206:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18866:365:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19000:3:5",
														"nodeType": "YulTypedName",
														"src": "19000:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19008:3:5",
														"nodeType": "YulTypedName",
														"src": "19008:3:5",
														"type": ""
													}
												],
												"src": "18866:365:5"
											},
											{
												"body": {
													"nativeSrc": "19408:248:5",
													"nodeType": "YulBlock",
													"src": "19408:248:5",
													"statements": [
														{
															"nativeSrc": "19418:26:5",
															"nodeType": "YulAssignment",
															"src": "19418:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19430:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "19430:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19441:2:5",
																		"nodeType": "YulLiteral",
																		"src": "19441:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19426:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "19426:3:5"
																},
																"nativeSrc": "19426:18:5",
																"nodeType": "YulFunctionCall",
																"src": "19426:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19418:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "19418:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19465:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "19465:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19476:1:5",
																				"nodeType": "YulLiteral",
																				"src": "19476:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19461:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "19461:3:5"
																		},
																		"nativeSrc": "19461:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "19461:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19484:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "19484:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19490:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "19490:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19480:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "19480:3:5"
																		},
																		"nativeSrc": "19480:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "19480:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19454:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "19454:6:5"
																},
																"nativeSrc": "19454:47:5",
																"nodeType": "YulFunctionCall",
																"src": "19454:47:5"
															},
															"nativeSrc": "19454:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "19454:47:5"
														},
														{
															"nativeSrc": "19510:139:5",
															"nodeType": "YulAssignment",
															"src": "19510:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19644:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "19644:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19518:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "19518:124:5"
																},
																"nativeSrc": "19518:131:5",
																"nodeType": "YulFunctionCall",
																"src": "19518:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19510:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "19510:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19237:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19388:9:5",
														"nodeType": "YulTypedName",
														"src": "19388:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19403:4:5",
														"nodeType": "YulTypedName",
														"src": "19403:4:5",
														"type": ""
													}
												],
												"src": "19237:419:5"
											},
											{
												"body": {
													"nativeSrc": "19768:46:5",
													"nodeType": "YulBlock",
													"src": "19768:46:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19790:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "19790:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19798:1:5",
																				"nodeType": "YulLiteral",
																				"src": "19798:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19786:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "19786:3:5"
																		},
																		"nativeSrc": "19786:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "19786:14:5"
																	},
																	{
																		"hexValue": "5354",
																		"kind": "string",
																		"nativeSrc": "19802:4:5",
																		"nodeType": "YulLiteral",
																		"src": "19802:4:5",
																		"type": "",
																		"value": "ST"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19779:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "19779:6:5"
																},
																"nativeSrc": "19779:28:5",
																"nodeType": "YulFunctionCall",
																"src": "19779:28:5"
															},
															"nativeSrc": "19779:28:5",
															"nodeType": "YulExpressionStatement",
															"src": "19779:28:5"
														}
													]
												},
												"name": "store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
												"nativeSrc": "19662:152:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19760:6:5",
														"nodeType": "YulTypedName",
														"src": "19760:6:5",
														"type": ""
													}
												],
												"src": "19662:152:5"
											},
											{
												"body": {
													"nativeSrc": "19966:219:5",
													"nodeType": "YulBlock",
													"src": "19966:219:5",
													"statements": [
														{
															"nativeSrc": "19976:73:5",
															"nodeType": "YulAssignment",
															"src": "19976:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20042:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "20042:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20047:1:5",
																		"nodeType": "YulLiteral",
																		"src": "20047:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19983:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "19983:58:5"
																},
																"nativeSrc": "19983:66:5",
																"nodeType": "YulFunctionCall",
																"src": "19983:66:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19976:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "19976:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20147:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "20147:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																	"nativeSrc": "20058:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "20058:88:5"
																},
																"nativeSrc": "20058:93:5",
																"nodeType": "YulFunctionCall",
																"src": "20058:93:5"
															},
															"nativeSrc": "20058:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "20058:93:5"
														},
														{
															"nativeSrc": "20160:19:5",
															"nodeType": "YulAssignment",
															"src": "20160:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20171:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "20171:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20176:2:5",
																		"nodeType": "YulLiteral",
																		"src": "20176:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20167:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "20167:3:5"
																},
																"nativeSrc": "20167:12:5",
																"nodeType": "YulFunctionCall",
																"src": "20167:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20160:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "20160:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19820:365:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19954:3:5",
														"nodeType": "YulTypedName",
														"src": "19954:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19962:3:5",
														"nodeType": "YulTypedName",
														"src": "19962:3:5",
														"type": ""
													}
												],
												"src": "19820:365:5"
											},
											{
												"body": {
													"nativeSrc": "20362:248:5",
													"nodeType": "YulBlock",
													"src": "20362:248:5",
													"statements": [
														{
															"nativeSrc": "20372:26:5",
															"nodeType": "YulAssignment",
															"src": "20372:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20384:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "20384:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20395:2:5",
																		"nodeType": "YulLiteral",
																		"src": "20395:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20380:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "20380:3:5"
																},
																"nativeSrc": "20380:18:5",
																"nodeType": "YulFunctionCall",
																"src": "20380:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20372:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "20372:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20419:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "20419:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20430:1:5",
																				"nodeType": "YulLiteral",
																				"src": "20430:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20415:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "20415:3:5"
																		},
																		"nativeSrc": "20415:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "20415:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20438:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "20438:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20444:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "20444:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20434:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "20434:3:5"
																		},
																		"nativeSrc": "20434:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "20434:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20408:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "20408:6:5"
																},
																"nativeSrc": "20408:47:5",
																"nodeType": "YulFunctionCall",
																"src": "20408:47:5"
															},
															"nativeSrc": "20408:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "20408:47:5"
														},
														{
															"nativeSrc": "20464:139:5",
															"nodeType": "YulAssignment",
															"src": "20464:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20598:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "20598:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20472:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "20472:124:5"
																},
																"nativeSrc": "20472:131:5",
																"nodeType": "YulFunctionCall",
																"src": "20472:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20464:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "20464:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20191:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20342:9:5",
														"nodeType": "YulTypedName",
														"src": "20342:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20357:4:5",
														"nodeType": "YulTypedName",
														"src": "20357:4:5",
														"type": ""
													}
												],
												"src": "20191:419:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISwapRouter_$191_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapRouter_$191_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function shift_left_232(value) -> newValue {\n        newValue :=\n\n        shl(232, value)\n\n    }\n\n    function leftAlign_t_uint24(value) -> aligned {\n        aligned := shift_left_232(value)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint24(cleanup_t_uint24(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_uint24_t_address_t_uint24_t_address__to_t_address_t_uint24_t_address_t_uint24_t_address__nonPadded_inplace_fromStack_reversed(pos , value4, value3, value2, value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint24_to_t_uint24_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 3)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint24_to_t_uint24_nonPadded_inplace_fromStack(value3,  pos)\n        pos := add(pos, 3)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value4,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct ISwapRouter.ExactOutputParams -> struct ISwapRouter.ExactOutputParams\n    function abi_encode_t_struct$_ExactOutputParams_$181_memory_ptr_to_t_struct$_ExactOutputParams_$181_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // path\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // amountOut\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // amountInMaximum\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_ExactOutputParams_$181_memory_ptr__to_t_struct$_ExactOutputParams_$181_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_ExactOutputParams_$181_memory_ptr_to_t_struct$_ExactOutputParams_$181_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    // struct ISwapRouter.ExactInputSingleParams -> struct ISwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    // struct ISwapRouter.ExactOutputSingleParams -> struct ISwapRouter.ExactOutputSingleParams\n    function abi_encode_t_struct$_ExactOutputSingleParams_$161_memory_ptr_to_t_struct$_ExactOutputSingleParams_$161_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountOut\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountInMaximum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactOutputSingleParams_$161_memory_ptr__to_t_struct$_ExactOutputSingleParams_$161_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactOutputSingleParams_$161_memory_ptr_to_t_struct$_ExactOutputSingleParams_$161_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    // struct ISwapRouter.ExactInputParams -> struct ISwapRouter.ExactInputParams\n    function abi_encode_t_struct$_ExactInputParams_$135_memory_ptr_to_t_struct$_ExactInputParams_$135_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // path\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputParams_$135_memory_ptr__to_t_struct$_ExactInputParams_$135_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_ExactInputParams_$135_memory_ptr_to_t_struct$_ExactInputParams_$135_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86(memPtr) {\n\n        mstore(add(memPtr, 0), \"STF\")\n\n    }\n\n    function abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 3)\n        store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(memPtr) {\n\n        mstore(add(memPtr, 0), \"SA\")\n\n    }\n\n    function abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 2)\n        store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca(memPtr) {\n\n        mstore(add(memPtr, 0), \"ST\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 2)\n        store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"369": [
									{
										"length": 32,
										"start": 621
									},
									{
										"length": 32,
										"start": 851
									},
									{
										"length": 32,
										"start": 1050
									},
									{
										"length": 32,
										"start": 1257
									},
									{
										"length": 32,
										"start": 1504
									},
									{
										"length": 32,
										"start": 1701
									},
									{
										"length": 32,
										"start": 1818
									},
									{
										"length": 32,
										"start": 2065
									},
									{
										"length": 32,
										"start": 2264
									},
									{
										"length": 32,
										"start": 2518
									},
									{
										"length": 32,
										"start": 2748
									}
								],
								"375": [
									{
										"length": 32,
										"start": 544
									},
									{
										"length": 32,
										"start": 588
									},
									{
										"length": 32,
										"start": 732
									},
									{
										"length": 32,
										"start": 1017
									},
									{
										"length": 32,
										"start": 1092
									},
									{
										"length": 32,
										"start": 1180
									},
									{
										"length": 32,
										"start": 1224
									},
									{
										"length": 32,
										"start": 1309
									},
									{
										"length": 32,
										"start": 1741
									},
									{
										"length": 32,
										"start": 1785
									},
									{
										"length": 32,
										"start": 1870
									},
									{
										"length": 32,
										"start": 2231
									},
									{
										"length": 32,
										"start": 2306
									},
									{
										"length": 32,
										"start": 2401
									},
									{
										"length": 32,
										"start": 2441
									},
									{
										"length": 32,
										"start": 2485
									},
									{
										"length": 32,
										"start": 2569
									}
								],
								"377": [
									{
										"length": 32,
										"start": 2365
									}
								],
								"379": [
									{
										"length": 32,
										"start": 696
									},
									{
										"length": 32,
										"start": 1665
									},
									{
										"length": 32,
										"start": 2605
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009c575f3560e01c8063c31c9c0711610064578063c31c9c071461015a578063c4b69a1814610178578063c54e44eb146101a8578063e0bab4c4146101c6578063edd83557146101e45761009c565b8063089fe6aa146100a05780633b85cf6a146100be5780634aa4a4fc146100ee57806373bd43ad1461010c57806389a302711461013c575b5f80fd5b6100a8610214565b6040516100b59190610f68565b60405180910390f35b6100d860048036038101906100d39190610fb8565b61021a565b6040516100e59190611005565b60405180910390f35b6100f661047e565b604051610103919061105d565b60405180910390f35b61012660048036038101906101219190611076565b610496565b6040516101339190611005565b60405180910390f35b61014461067f565b604051610151919061105d565b60405180910390f35b6101626106a3565b60405161016f91906110fc565b60405180910390f35b610192600480360381019061018d9190610fb8565b6106c7565b60405161019f9190611005565b60405180910390f35b6101b061093b565b6040516101bd919061105d565b60405180910390f35b6101ce61095f565b6040516101db919061105d565b60405180910390f35b6101fe60048036038101906101f99190611076565b610983565b60405161020b9190611005565b60405180910390f35b610bb881565b5f6102477f0000000000000000000000000000000000000000000000000000000000000000333085610b5b565b6102927f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084610cad565b5f6040518060a0016040528073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2610bb87f0000000000000000000000000000000000000000000000000000000000000000610bb87f000000000000000000000000000000000000000000000000000000000000000060405160200161030f95949392919061118e565b60405160208183030381529060405281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018581526020018481525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f28c0498826040518263ffffffff1660e01b81526004016103aa91906112ed565b6020604051808303815f875af11580156103c6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103ea9190611321565b9150828210156104775761043f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000005f610cad565b6104767f0000000000000000000000000000000000000000000000000000000000000000303385876104719190611379565b610b5b565b5b5092915050565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b5f6104c37f0000000000000000000000000000000000000000000000000000000000000000333085610b5b565b61050e7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084610cad565b5f6040518061010001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16815260200173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018481526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b8152600401610637919061146a565b6020604051808303815f875af1158015610653573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106779190611321565b915050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f6106f47f0000000000000000000000000000000000000000000000000000000000000000333085610b5b565b61073f7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084610cad565b5f6040518061010001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16815260200173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018581526020018481526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663db3e2198826040518263ffffffff1660e01b81526004016108689190611524565b6020604051808303815f875af1158015610884573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108a89190611321565b915082821015610934576108fd7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000005f610cad565b6109337f000000000000000000000000000000000000000000000000000000000000000033848661092e9190611379565b610dfc565b5b5092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f6109b07f0000000000000000000000000000000000000000000000000000000000000000333085610b5b565b6109fb7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084610cad565b5f6040518060a001604052807f0000000000000000000000000000000000000000000000000000000000000000610bb87f0000000000000000000000000000000000000000000000000000000000000000610bb873c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2604051602001610a7895949392919061118e565b60405160208183030381529060405281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018481526020015f81525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c04b8d59826040518263ffffffff1660e01b8152600401610b1391906115b1565b6020604051808303815f875af1158015610b2f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b539190611321565b915050919050565b5f808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b868686604051602401610b91939291906115d1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610bfb9190611640565b5f604051808303815f865af19150503d805f8114610c34576040519150601f19603f3d011682016040523d82523d5f602084013e610c39565b606091505b5091509150818015610c6657505f81511480610c65575080806020019051810190610c64919061168b565b5b5b610ca5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9c90611710565b60405180910390fd5b505050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b8585604051602401610ce192919061172e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610d4b9190611640565b5f604051808303815f865af19150503d805f8114610d84576040519150601f19603f3d011682016040523d82523d5f602084013e610d89565b606091505b5091509150818015610db657505f81511480610db5575080806020019051810190610db4919061168b565b5b5b610df5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dec9061179f565b60405180910390fd5b5050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b8585604051602401610e3092919061172e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610e9a9190611640565b5f604051808303815f865af19150503d805f8114610ed3576040519150601f19603f3d011682016040523d82523d5f602084013e610ed8565b606091505b5091509150818015610f0557505f81511480610f04575080806020019051810190610f03919061168b565b5b5b610f44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3b90611807565b60405180910390fd5b5050505050565b5f62ffffff82169050919050565b610f6281610f4b565b82525050565b5f602082019050610f7b5f830184610f59565b92915050565b5f80fd5b5f819050919050565b610f9781610f85565b8114610fa1575f80fd5b50565b5f81359050610fb281610f8e565b92915050565b5f8060408385031215610fce57610fcd610f81565b5b5f610fdb85828601610fa4565b9250506020610fec85828601610fa4565b9150509250929050565b610fff81610f85565b82525050565b5f6020820190506110185f830184610ff6565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110478261101e565b9050919050565b6110578161103d565b82525050565b5f6020820190506110705f83018461104e565b92915050565b5f6020828403121561108b5761108a610f81565b5b5f61109884828501610fa4565b91505092915050565b5f819050919050565b5f6110c46110bf6110ba8461101e565b6110a1565b61101e565b9050919050565b5f6110d5826110aa565b9050919050565b5f6110e6826110cb565b9050919050565b6110f6816110dc565b82525050565b5f60208201905061110f5f8301846110ed565b92915050565b5f8160601b9050919050565b5f61112b82611115565b9050919050565b5f61113c82611121565b9050919050565b61115461114f8261103d565b611132565b82525050565b5f8160e81b9050919050565b5f6111708261115a565b9050919050565b61118861118382610f4b565b611166565b82525050565b5f6111998288611143565b6014820191506111a98287611177565b6003820191506111b98286611143565b6014820191506111c98285611177565b6003820191506111d98284611143565b6014820191508190509695505050505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61122e826111ec565b61123881856111f6565b9350611248818560208601611206565b61125181611214565b840191505092915050565b6112658161103d565b82525050565b61127481610f85565b82525050565b5f60a083015f8301518482035f8601526112948282611224565b91505060208301516112a9602086018261125c565b5060408301516112bc604086018261126b565b5060608301516112cf606086018261126b565b5060808301516112e2608086018261126b565b508091505092915050565b5f6020820190508181035f830152611305818461127a565b905092915050565b5f8151905061131b81610f8e565b92915050565b5f6020828403121561133657611335610f81565b5b5f6113438482850161130d565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61138382610f85565b915061138e83610f85565b92508282039050818111156113a6576113a561134c565b5b92915050565b6113b581610f4b565b82525050565b6113c48161101e565b82525050565b61010082015f8201516113df5f85018261125c565b5060208201516113f2602085018261125c565b50604082015161140560408501826113ac565b506060820151611418606085018261125c565b50608082015161142b608085018261126b565b5060a082015161143e60a085018261126b565b5060c082015161145160c085018261126b565b5060e082015161146460e08501826113bb565b50505050565b5f6101008201905061147e5f8301846113ca565b92915050565b61010082015f8201516114995f85018261125c565b5060208201516114ac602085018261125c565b5060408201516114bf60408501826113ac565b5060608201516114d2606085018261125c565b5060808201516114e5608085018261126b565b5060a08201516114f860a085018261126b565b5060c082015161150b60c085018261126b565b5060e082015161151e60e08501826113bb565b50505050565b5f610100820190506115385f830184611484565b92915050565b5f60a083015f8301518482035f8601526115588282611224565b915050602083015161156d602086018261125c565b506040830151611580604086018261126b565b506060830151611593606086018261126b565b5060808301516115a6608086018261126b565b508091505092915050565b5f6020820190508181035f8301526115c9818461153e565b905092915050565b5f6060820190506115e45f83018661104e565b6115f1602083018561104e565b6115fe6040830184610ff6565b949350505050565b5f81905092915050565b5f61161a826111ec565b6116248185611606565b9350611634818560208601611206565b80840191505092915050565b5f61164b8284611610565b915081905092915050565b5f8115159050919050565b61166a81611656565b8114611674575f80fd5b50565b5f8151905061168581611661565b92915050565b5f602082840312156116a05761169f610f81565b5b5f6116ad84828501611677565b91505092915050565b5f82825260208201905092915050565b7f53544600000000000000000000000000000000000000000000000000000000005f82015250565b5f6116fa6003836116b6565b9150611705826116c6565b602082019050919050565b5f6020820190508181035f830152611727816116ee565b9050919050565b5f6040820190506117415f83018561104e565b61174e6020830184610ff6565b9392505050565b7f53410000000000000000000000000000000000000000000000000000000000005f82015250565b5f6117896002836116b6565b915061179482611755565b602082019050919050565b5f6020820190508181035f8301526117b68161177d565b9050919050565b7f53540000000000000000000000000000000000000000000000000000000000005f82015250565b5f6117f16002836116b6565b91506117fc826117bd565b602082019050919050565b5f6020820190508181035f83015261181e816117e5565b905091905056fea26469706673582212203f217f4a40acc2b912045fb4f20721d20822bedb201e7b713c002c3943d0141564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC31C9C07 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xC4B69A18 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xC54E44EB EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xE0BAB4C4 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xEDD83557 EQ PUSH2 0x1E4 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x89FE6AA EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x3B85CF6A EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x73BD43AD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x13C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0x21A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0x105D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x105D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x105D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH2 0x95F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x105D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x247 PUSH32 0x0 CALLER ADDRESS DUP6 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x292 PUSH32 0x0 PUSH32 0x0 DUP5 PUSH2 0xCAD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH2 0xBB8 PUSH32 0x0 PUSH2 0xBB8 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x30F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x118E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF28C0498 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3C6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 LT ISZERO PUSH2 0x477 JUMPI PUSH2 0x43F PUSH32 0x0 PUSH32 0x0 PUSH0 PUSH2 0xCAD JUMP JUMPDEST PUSH2 0x476 PUSH32 0x0 ADDRESS CALLER DUP6 DUP8 PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0xB5B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x4C3 PUSH32 0x0 CALLER ADDRESS DUP6 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x50E PUSH32 0x0 PUSH32 0x0 DUP5 PUSH2 0xCAD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x637 SWAP2 SWAP1 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x653 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x677 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x6F4 PUSH32 0x0 CALLER ADDRESS DUP6 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x73F PUSH32 0x0 PUSH32 0x0 DUP5 PUSH2 0xCAD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDB3E2198 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x868 SWAP2 SWAP1 PUSH2 0x1524 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x884 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A8 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 LT ISZERO PUSH2 0x934 JUMPI PUSH2 0x8FD PUSH32 0x0 PUSH32 0x0 PUSH0 PUSH2 0xCAD JUMP JUMPDEST PUSH2 0x933 PUSH32 0x0 CALLER DUP5 DUP7 PUSH2 0x92E SWAP2 SWAP1 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0xDFC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x9B0 PUSH32 0x0 CALLER ADDRESS DUP6 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x9FB PUSH32 0x0 PUSH32 0x0 DUP5 PUSH2 0xCAD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0x0 PUSH2 0xBB8 PUSH32 0x0 PUSH2 0xBB8 PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA78 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x118E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC04B8D59 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB13 SWAP2 SWAP1 PUSH2 0x15B1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB2F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB53 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB91 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0xBFB SWAP2 SWAP1 PUSH2 0x1640 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xC34 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xC66 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0xC65 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xC64 SWAP2 SWAP1 PUSH2 0x168B JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0xCA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9C SWAP1 PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xCE1 SWAP3 SWAP2 SWAP1 PUSH2 0x172E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0xD4B SWAP2 SWAP1 PUSH2 0x1640 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xD84 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xDB6 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0xDB5 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xDB4 SWAP2 SWAP1 PUSH2 0x168B JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0xDF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDEC SWAP1 PUSH2 0x179F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE30 SWAP3 SWAP2 SWAP1 PUSH2 0x172E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0xE9A SWAP2 SWAP1 PUSH2 0x1640 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xED3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xED8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xF05 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0xF04 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xF03 SWAP2 SWAP1 PUSH2 0x168B JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0xF44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3B SWAP1 PUSH2 0x1807 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF62 DUP2 PUSH2 0xF4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF7B PUSH0 DUP4 ADD DUP5 PUSH2 0xF59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF97 DUP2 PUSH2 0xF85 JUMP JUMPDEST DUP2 EQ PUSH2 0xFA1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFB2 DUP2 PUSH2 0xF8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFCE JUMPI PUSH2 0xFCD PUSH2 0xF81 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFDB DUP6 DUP3 DUP7 ADD PUSH2 0xFA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFEC DUP6 DUP3 DUP7 ADD PUSH2 0xFA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFF DUP2 PUSH2 0xF85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1018 PUSH0 DUP4 ADD DUP5 PUSH2 0xFF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1047 DUP3 PUSH2 0x101E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1057 DUP2 PUSH2 0x103D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1070 PUSH0 DUP4 ADD DUP5 PUSH2 0x104E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108B JUMPI PUSH2 0x108A PUSH2 0xF81 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1098 DUP5 DUP3 DUP6 ADD PUSH2 0xFA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10C4 PUSH2 0x10BF PUSH2 0x10BA DUP5 PUSH2 0x101E JUMP JUMPDEST PUSH2 0x10A1 JUMP JUMPDEST PUSH2 0x101E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10D5 DUP3 PUSH2 0x10AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10E6 DUP3 PUSH2 0x10CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F6 DUP2 PUSH2 0x10DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x110F PUSH0 DUP4 ADD DUP5 PUSH2 0x10ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x112B DUP3 PUSH2 0x1115 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x113C DUP3 PUSH2 0x1121 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1154 PUSH2 0x114F DUP3 PUSH2 0x103D JUMP JUMPDEST PUSH2 0x1132 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xE8 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1170 DUP3 PUSH2 0x115A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1188 PUSH2 0x1183 DUP3 PUSH2 0xF4B JUMP JUMPDEST PUSH2 0x1166 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1199 DUP3 DUP9 PUSH2 0x1143 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x11A9 DUP3 DUP8 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SWAP2 POP PUSH2 0x11B9 DUP3 DUP7 PUSH2 0x1143 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x11C9 DUP3 DUP6 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SWAP2 POP PUSH2 0x11D9 DUP3 DUP5 PUSH2 0x1143 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x122E DUP3 PUSH2 0x11EC JUMP JUMPDEST PUSH2 0x1238 DUP2 DUP6 PUSH2 0x11F6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1248 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x1251 DUP2 PUSH2 0x1214 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1265 DUP2 PUSH2 0x103D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1274 DUP2 PUSH2 0xF85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0x1294 DUP3 DUP3 PUSH2 0x1224 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x12A9 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x125C JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x12BC PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x12CF PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x12E2 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1305 DUP2 DUP5 PUSH2 0x127A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x131B DUP2 PUSH2 0xF8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1336 JUMPI PUSH2 0x1335 PUSH2 0xF81 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1343 DUP5 DUP3 DUP6 ADD PUSH2 0x130D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1383 DUP3 PUSH2 0xF85 JUMP JUMPDEST SWAP2 POP PUSH2 0x138E DUP4 PUSH2 0xF85 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x13A6 JUMPI PUSH2 0x13A5 PUSH2 0x134C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13B5 DUP2 PUSH2 0xF4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x13C4 DUP2 PUSH2 0x101E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x13DF PUSH0 DUP6 ADD DUP3 PUSH2 0x125C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x13F2 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x125C JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1405 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x13AC JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1418 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x125C JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x142B PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x143E PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x1451 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x1464 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x13BB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x147E PUSH0 DUP4 ADD DUP5 PUSH2 0x13CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1499 PUSH0 DUP6 ADD DUP3 PUSH2 0x125C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x14AC PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x125C JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x14BF PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x13AC JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x14D2 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x125C JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x14E5 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x14F8 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x150B PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x151E PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x13BB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x1538 PUSH0 DUP4 ADD DUP5 PUSH2 0x1484 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0x1558 DUP3 DUP3 PUSH2 0x1224 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x156D PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x125C JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1580 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x1593 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x15A6 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15C9 DUP2 DUP5 PUSH2 0x153E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15E4 PUSH0 DUP4 ADD DUP7 PUSH2 0x104E JUMP JUMPDEST PUSH2 0x15F1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x104E JUMP JUMPDEST PUSH2 0x15FE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFF6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x161A DUP3 PUSH2 0x11EC JUMP JUMPDEST PUSH2 0x1624 DUP2 DUP6 PUSH2 0x1606 JUMP JUMPDEST SWAP4 POP PUSH2 0x1634 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1206 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x164B DUP3 DUP5 PUSH2 0x1610 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x166A DUP2 PUSH2 0x1656 JUMP JUMPDEST DUP2 EQ PUSH2 0x1674 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1685 DUP2 PUSH2 0x1661 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A0 JUMPI PUSH2 0x169F PUSH2 0xF81 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16AD DUP5 DUP3 DUP6 ADD PUSH2 0x1677 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354460000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16FA PUSH1 0x3 DUP4 PUSH2 0x16B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1705 DUP3 PUSH2 0x16C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1727 DUP2 PUSH2 0x16EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1741 PUSH0 DUP4 ADD DUP6 PUSH2 0x104E JUMP JUMPDEST PUSH2 0x174E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFF6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1789 PUSH1 0x2 DUP4 PUSH2 0x16B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1794 DUP3 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17B6 DUP2 PUSH2 0x177D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5354000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17F1 PUSH1 0x2 DUP4 PUSH2 0x16B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x17FC DUP3 PUSH2 0x17BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x181E DUP2 PUSH2 0x17E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0x21 PUSH32 0x4A40ACC2B912045FB4F20721D20822BEDB201E7B713C002C3943D0141564736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "205:8054:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;546:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2952:1119;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;463:74;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4548:1279;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;427:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;233:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6463:1793;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;391:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;356:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1341:740;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;546:37;579:4;546:37;:::o;2952:1119::-;3072:16;3101:143;3147:3;3165:10;3198:4;3218:15;3101:31;:143::i;:::-;3255:69;3282:3;3295:10;3308:15;3255:26;:69::i;:::-;3337:43;3383:311;;;;;;;;495:42;579:4;3485;579;3500:3;3452:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3383:311;;;;3534:10;3383:311;;;;;;3573:15;3383:311;;;;3618:9;3383:311;;;;3663:15;3383:311;;;3337:357;;3718:10;:22;;;3741:6;3718:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3707:41;;3776:15;3765:8;:26;3761:303;;;3808:55;3835:3;3848:10;3861:1;3808:26;:55::i;:::-;3878:174;3928:3;3958:4;3982:10;4029:8;4011:15;:26;;;;:::i;:::-;3878:31;:174::i;:::-;3761:303;3090:981;2952:1119;;;;:::o;463:74::-;495:42;463:74;:::o;4548:1279::-;4630:17;4779:136;4825:3;4843:10;4876:4;4896:8;4779:31;:136::i;:::-;4973:62;5000:3;5013:10;5026:8;4973:26;:62::i;:::-;5287:48;5338:359;;;;;;;;5415:3;5338:359;;;;;;495:42;5338:359;;;;;;579:4;5338:359;;;;;;5513:10;5338:359;;;;;;5552:15;5338:359;;;;5596:8;5338:359;;;;5641:1;5338:359;;;;5680:1;5338:359;;;;;5287:410;;5784:10;:27;;;5812:6;5784:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5772:47;;4649:1178;4548:1279;;;:::o;427:29::-;;;:::o;233:39::-;;;:::o;6463:1793::-;6581:16;6677:143;6723:3;6741:10;6774:4;6794:15;6677:31;:143::i;:::-;7050:69;7077:3;7090:10;7103:15;7050:26;:69::i;:::-;7132:49;7184:375;;;;;;;;7262:3;7184:375;;;;;;495:42;7184:375;;;;;;579:4;7184:375;;;;;;7360:10;7184:375;;;;;;7399:15;7184:375;;;;7444:9;7184:375;;;;7489:15;7184:375;;;;7542:1;7184:375;;;;;7132:427;;7686:10;:28;;;7715:6;7686:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7675:47;;7997:15;7986:8;:26;7982:267;;;8029:55;8056:3;8069:10;8082:1;8029:26;:55::i;:::-;8099:138;8145:3;8167:10;8214:8;8196:15;:26;;;;:::i;:::-;8099:27;:138::i;:::-;7982:267;6599:1657;6463:1793;;;;:::o;391:29::-;;;:::o;356:28::-;;;:::o;1341:740::-;1425:17;1455:136;1501:3;1519:10;1552:4;1572:8;1455:31;:136::i;:::-;1604:62;1631:3;1644:10;1657:8;1604:26;:62::i;:::-;1679:42;1724:295;;;;;;;;1809:3;579:4;1823;579;495:42;1792:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1724:295;;;;1874:10;1724:295;;;;;;1913:15;1724:295;;;;1957:8;1724:295;;;;2002:1;1724:295;;;1679:340;;2044:10;:21;;;2066:6;2044:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2032:41;;1444:637;1341:740;;;:::o;561:358:3:-;701:12;715:17;748:5;:10;;782:28;;;812:4;818:2;822:5;759:69;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;748:81;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:129;;;;847:7;:57;;;;;874:1;859:4;:11;:16;:44;;;;890:4;879:24;;;;;;;;;;;;:::i;:::-;859:44;847:57;839:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;690:229;;561:358;;;;:::o;1873:307::-;1986:12;2000:17;2021:5;:10;;2055:23;;;2080:2;2084:5;2032:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:70;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:106;;;;2109:7;:57;;;;;2136:1;2121:4;:11;:16;:44;;;;2152:4;2141:24;;;;;;;;;;;;:::i;:::-;2121:44;2109:57;2101:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1975:205;;1873:307;;;:::o;1211:309::-;1325:12;1339:17;1360:5;:10;;1394:24;;;1420:2;1424:5;1371:59;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1360:71;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1324:107;;;;1449:7;:57;;;;;1476:1;1461:4;:11;:16;:44;;;;1492:4;1481:24;;;;;;;;;;;;:::i;:::-;1461:44;1449:57;1441:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1314:206;;1211:309;;;:::o;7:91:5:-;43:7;83:8;76:5;72:20;61:31;;7:91;;;:::o;104:115::-;189:23;206:5;189:23;:::i;:::-;184:3;177:36;104:115;;:::o;225:218::-;316:4;354:2;343:9;339:18;331:26;;367:69;433:1;422:9;418:17;409:6;367:69;:::i;:::-;225:218;;;;:::o;530:117::-;639:1;636;629:12;776:77;813:7;842:5;831:16;;776:77;;;:::o;859:122::-;932:24;950:5;932:24;:::i;:::-;925:5;922:35;912:63;;971:1;968;961:12;912:63;859:122;:::o;987:139::-;1033:5;1071:6;1058:20;1049:29;;1087:33;1114:5;1087:33;:::i;:::-;987:139;;;;:::o;1132:474::-;1200:6;1208;1257:2;1245:9;1236:7;1232:23;1228:32;1225:119;;;1263:79;;:::i;:::-;1225:119;1383:1;1408:53;1453:7;1444:6;1433:9;1429:22;1408:53;:::i;:::-;1398:63;;1354:117;1510:2;1536:53;1581:7;1572:6;1561:9;1557:22;1536:53;:::i;:::-;1526:63;;1481:118;1132:474;;;;;:::o;1612:118::-;1699:24;1717:5;1699:24;:::i;:::-;1694:3;1687:37;1612:118;;:::o;1736:222::-;1829:4;1867:2;1856:9;1852:18;1844:26;;1880:71;1948:1;1937:9;1933:17;1924:6;1880:71;:::i;:::-;1736:222;;;;:::o;1964:126::-;2001:7;2041:42;2034:5;2030:54;2019:65;;1964:126;;;:::o;2096:96::-;2133:7;2162:24;2180:5;2162:24;:::i;:::-;2151:35;;2096:96;;;:::o;2198:118::-;2285:24;2303:5;2285:24;:::i;:::-;2280:3;2273:37;2198:118;;:::o;2322:222::-;2415:4;2453:2;2442:9;2438:18;2430:26;;2466:71;2534:1;2523:9;2519:17;2510:6;2466:71;:::i;:::-;2322:222;;;;:::o;2550:329::-;2609:6;2658:2;2646:9;2637:7;2633:23;2629:32;2626:119;;;2664:79;;:::i;:::-;2626:119;2784:1;2809:53;2854:7;2845:6;2834:9;2830:22;2809:53;:::i;:::-;2799:63;;2755:117;2550:329;;;;:::o;2885:60::-;2913:3;2934:5;2927:12;;2885:60;;;:::o;2951:142::-;3001:9;3034:53;3052:34;3061:24;3079:5;3061:24;:::i;:::-;3052:34;:::i;:::-;3034:53;:::i;:::-;3021:66;;2951:142;;;:::o;3099:126::-;3149:9;3182:37;3213:5;3182:37;:::i;:::-;3169:50;;3099:126;;;:::o;3231:145::-;3300:9;3333:37;3364:5;3333:37;:::i;:::-;3320:50;;3231:145;;;:::o;3382:169::-;3488:56;3538:5;3488:56;:::i;:::-;3483:3;3476:69;3382:169;;:::o;3557:260::-;3669:4;3707:2;3696:9;3692:18;3684:26;;3720:90;3807:1;3796:9;3792:17;3783:6;3720:90;:::i;:::-;3557:260;;;;:::o;3823:94::-;3856:8;3904:5;3900:2;3896:14;3875:35;;3823:94;;;:::o;3923:::-;3962:7;3991:20;4005:5;3991:20;:::i;:::-;3980:31;;3923:94;;;:::o;4023:100::-;4062:7;4091:26;4111:5;4091:26;:::i;:::-;4080:37;;4023:100;;;:::o;4129:157::-;4234:45;4254:24;4272:5;4254:24;:::i;:::-;4234:45;:::i;:::-;4229:3;4222:58;4129:157;;:::o;4292:96::-;4326:8;4375:5;4370:3;4366:15;4345:36;;4292:96;;;:::o;4394:94::-;4432:7;4461:21;4476:5;4461:21;:::i;:::-;4450:32;;4394:94;;;:::o;4494:153::-;4597:43;4616:23;4633:5;4616:23;:::i;:::-;4597:43;:::i;:::-;4592:3;4585:56;4494:153;;:::o;4653:810::-;4873:3;4888:75;4959:3;4950:6;4888:75;:::i;:::-;4988:2;4983:3;4979:12;4972:19;;5001:73;5070:3;5061:6;5001:73;:::i;:::-;5099:1;5094:3;5090:11;5083:18;;5111:75;5182:3;5173:6;5111:75;:::i;:::-;5211:2;5206:3;5202:12;5195:19;;5224:73;5293:3;5284:6;5224:73;:::i;:::-;5322:1;5317:3;5313:11;5306:18;;5334:75;5405:3;5396:6;5334:75;:::i;:::-;5434:2;5429:3;5425:12;5418:19;;5454:3;5447:10;;4653:810;;;;;;;;:::o;5469:98::-;5520:6;5554:5;5548:12;5538:22;;5469:98;;;:::o;5573:158::-;5646:11;5680:6;5675:3;5668:19;5720:4;5715:3;5711:14;5696:29;;5573:158;;;;:::o;5737:139::-;5826:6;5821:3;5816;5810:23;5867:1;5858:6;5853:3;5849:16;5842:27;5737:139;;;:::o;5882:102::-;5923:6;5974:2;5970:7;5965:2;5958:5;5954:14;5950:28;5940:38;;5882:102;;;:::o;5990:353::-;6066:3;6094:38;6126:5;6094:38;:::i;:::-;6148:60;6201:6;6196:3;6148:60;:::i;:::-;6141:67;;6217:65;6275:6;6270:3;6263:4;6256:5;6252:16;6217:65;:::i;:::-;6307:29;6329:6;6307:29;:::i;:::-;6302:3;6298:39;6291:46;;6070:273;5990:353;;;;:::o;6349:108::-;6426:24;6444:5;6426:24;:::i;:::-;6421:3;6414:37;6349:108;;:::o;6463:::-;6540:24;6558:5;6540:24;:::i;:::-;6535:3;6528:37;6463:108;;:::o;6661:1169::-;6798:3;6834:4;6829:3;6825:14;6921:4;6914:5;6910:16;6904:23;6974:3;6968:4;6964:14;6957:4;6952:3;6948:14;6941:38;7000:71;7066:4;7052:12;7000:71;:::i;:::-;6992:79;;6849:233;7169:4;7162:5;7158:16;7152:23;7188:63;7245:4;7240:3;7236:14;7222:12;7188:63;:::i;:::-;7092:169;7347:4;7340:5;7336:16;7330:23;7366:63;7423:4;7418:3;7414:14;7400:12;7366:63;:::i;:::-;7271:168;7526:4;7519:5;7515:16;7509:23;7545:63;7602:4;7597:3;7593:14;7579:12;7545:63;:::i;:::-;7449:169;7711:4;7704:5;7700:16;7694:23;7730:63;7787:4;7782:3;7778:14;7764:12;7730:63;:::i;:::-;7628:175;7820:4;7813:11;;6803:1027;6661:1169;;;;:::o;7836:409::-;7997:4;8035:2;8024:9;8020:18;8012:26;;8084:9;8078:4;8074:20;8070:1;8059:9;8055:17;8048:47;8112:126;8233:4;8224:6;8112:126;:::i;:::-;8104:134;;7836:409;;;;:::o;8251:143::-;8308:5;8339:6;8333:13;8324:22;;8355:33;8382:5;8355:33;:::i;:::-;8251:143;;;;:::o;8400:351::-;8470:6;8519:2;8507:9;8498:7;8494:23;8490:32;8487:119;;;8525:79;;:::i;:::-;8487:119;8645:1;8670:64;8726:7;8717:6;8706:9;8702:22;8670:64;:::i;:::-;8660:74;;8616:128;8400:351;;;;:::o;8757:180::-;8805:77;8802:1;8795:88;8902:4;8899:1;8892:15;8926:4;8923:1;8916:15;8943:194;8983:4;9003:20;9021:1;9003:20;:::i;:::-;8998:25;;9037:20;9055:1;9037:20;:::i;:::-;9032:25;;9081:1;9078;9074:9;9066:17;;9105:1;9099:4;9096:11;9093:37;;;9110:18;;:::i;:::-;9093:37;8943:194;;;;:::o;9143:105::-;9218:23;9235:5;9218:23;:::i;:::-;9213:3;9206:36;9143:105;;:::o;9254:108::-;9331:24;9349:5;9331:24;:::i;:::-;9326:3;9319:37;9254:108;;:::o;9462:1623::-;9637:6;9632:3;9628:16;9729:4;9722:5;9718:16;9712:23;9748:63;9805:4;9800:3;9796:14;9782:12;9748:63;:::i;:::-;9654:167;9907:4;9900:5;9896:16;9890:23;9926:63;9983:4;9978:3;9974:14;9960:12;9926:63;:::i;:::-;9831:168;10080:4;10073:5;10069:16;10063:23;10099:61;10154:4;10149:3;10145:14;10131:12;10099:61;:::i;:::-;10009:161;10257:4;10250:5;10246:16;10240:23;10276:63;10333:4;10328:3;10324:14;10310:12;10276:63;:::i;:::-;10180:169;10435:4;10428:5;10424:16;10418:23;10454:63;10511:4;10506:3;10502:14;10488:12;10454:63;:::i;:::-;10359:168;10613:4;10606:5;10602:16;10596:23;10632:63;10689:4;10684:3;10680:14;10666:12;10632:63;:::i;:::-;10537:168;10799:4;10792:5;10788:16;10782:23;10818:63;10875:4;10870:3;10866:14;10852:12;10818:63;:::i;:::-;10715:176;10986:4;10979:5;10975:16;10969:23;11005:63;11062:4;11057:3;11053:14;11039:12;11005:63;:::i;:::-;10901:177;9606:1479;9462:1623;;:::o;11091:379::-;11262:4;11300:3;11289:9;11285:19;11277:27;;11314:149;11460:1;11449:9;11445:17;11436:6;11314:149;:::i;:::-;11091:379;;;;:::o;11572:1625::-;11749:6;11744:3;11740:16;11841:4;11834:5;11830:16;11824:23;11860:63;11917:4;11912:3;11908:14;11894:12;11860:63;:::i;:::-;11766:167;12019:4;12012:5;12008:16;12002:23;12038:63;12095:4;12090:3;12086:14;12072:12;12038:63;:::i;:::-;11943:168;12192:4;12185:5;12181:16;12175:23;12211:61;12266:4;12261:3;12257:14;12243:12;12211:61;:::i;:::-;12121:161;12369:4;12362:5;12358:16;12352:23;12388:63;12445:4;12440:3;12436:14;12422:12;12388:63;:::i;:::-;12292:169;12547:4;12540:5;12536:16;12530:23;12566:63;12623:4;12618:3;12614:14;12600:12;12566:63;:::i;:::-;12471:168;12726:4;12719:5;12715:16;12709:23;12745:63;12802:4;12797:3;12793:14;12779:12;12745:63;:::i;:::-;12649:169;12911:4;12904:5;12900:16;12894:23;12930:63;12987:4;12982:3;12978:14;12964:12;12930:63;:::i;:::-;12828:175;13098:4;13091:5;13087:16;13081:23;13117:63;13174:4;13169:3;13165:14;13151:12;13117:63;:::i;:::-;13013:177;11718:1479;11572:1625;;:::o;13203:383::-;13376:4;13414:3;13403:9;13399:19;13391:27;;13428:151;13576:1;13565:9;13561:17;13552:6;13428:151;:::i;:::-;13203:383;;;;:::o;13674:1167::-;13809:3;13845:4;13840:3;13836:14;13932:4;13925:5;13921:16;13915:23;13985:3;13979:4;13975:14;13968:4;13963:3;13959:14;13952:38;14011:71;14077:4;14063:12;14011:71;:::i;:::-;14003:79;;13860:233;14180:4;14173:5;14169:16;14163:23;14199:63;14256:4;14251:3;14247:14;14233:12;14199:63;:::i;:::-;14103:169;14358:4;14351:5;14347:16;14341:23;14377:63;14434:4;14429:3;14425:14;14411:12;14377:63;:::i;:::-;14282:168;14536:4;14529:5;14525:16;14519:23;14555:63;14612:4;14607:3;14603:14;14589:12;14555:63;:::i;:::-;14460:168;14722:4;14715:5;14711:16;14705:23;14741:63;14798:4;14793:3;14789:14;14775:12;14741:63;:::i;:::-;14638:176;14831:4;14824:11;;13814:1027;13674:1167;;;;:::o;14847:405::-;15006:4;15044:2;15033:9;15029:18;15021:26;;15093:9;15087:4;15083:20;15079:1;15068:9;15064:17;15057:47;15121:124;15240:4;15231:6;15121:124;:::i;:::-;15113:132;;14847:405;;;;:::o;15258:442::-;15407:4;15445:2;15434:9;15430:18;15422:26;;15458:71;15526:1;15515:9;15511:17;15502:6;15458:71;:::i;:::-;15539:72;15607:2;15596:9;15592:18;15583:6;15539:72;:::i;:::-;15621;15689:2;15678:9;15674:18;15665:6;15621:72;:::i;:::-;15258:442;;;;;;:::o;15706:147::-;15807:11;15844:3;15829:18;;15706:147;;;;:::o;15859:386::-;15963:3;15991:38;16023:5;15991:38;:::i;:::-;16045:88;16126:6;16121:3;16045:88;:::i;:::-;16038:95;;16142:65;16200:6;16195:3;16188:4;16181:5;16177:16;16142:65;:::i;:::-;16232:6;16227:3;16223:16;16216:23;;15967:278;15859:386;;;;:::o;16251:271::-;16381:3;16403:93;16492:3;16483:6;16403:93;:::i;:::-;16396:100;;16513:3;16506:10;;16251:271;;;;:::o;16528:90::-;16562:7;16605:5;16598:13;16591:21;16580:32;;16528:90;;;:::o;16624:116::-;16694:21;16709:5;16694:21;:::i;:::-;16687:5;16684:32;16674:60;;16730:1;16727;16720:12;16674:60;16624:116;:::o;16746:137::-;16800:5;16831:6;16825:13;16816:22;;16847:30;16871:5;16847:30;:::i;:::-;16746:137;;;;:::o;16889:345::-;16956:6;17005:2;16993:9;16984:7;16980:23;16976:32;16973:119;;;17011:79;;:::i;:::-;16973:119;17131:1;17156:61;17209:7;17200:6;17189:9;17185:22;17156:61;:::i;:::-;17146:71;;17102:125;16889:345;;;;:::o;17240:169::-;17324:11;17358:6;17353:3;17346:19;17398:4;17393:3;17389:14;17374:29;;17240:169;;;;:::o;17415:153::-;17555:5;17551:1;17543:6;17539:14;17532:29;17415:153;:::o;17574:365::-;17716:3;17737:66;17801:1;17796:3;17737:66;:::i;:::-;17730:73;;17812:93;17901:3;17812:93;:::i;:::-;17930:2;17925:3;17921:12;17914:19;;17574:365;;;:::o;17945:419::-;18111:4;18149:2;18138:9;18134:18;18126:26;;18198:9;18192:4;18188:20;18184:1;18173:9;18169:17;18162:47;18226:131;18352:4;18226:131;:::i;:::-;18218:139;;17945:419;;;:::o;18370:332::-;18491:4;18529:2;18518:9;18514:18;18506:26;;18542:71;18610:1;18599:9;18595:17;18586:6;18542:71;:::i;:::-;18623:72;18691:2;18680:9;18676:18;18667:6;18623:72;:::i;:::-;18370:332;;;;;:::o;18708:152::-;18848:4;18844:1;18836:6;18832:14;18825:28;18708:152;:::o;18866:365::-;19008:3;19029:66;19093:1;19088:3;19029:66;:::i;:::-;19022:73;;19104:93;19193:3;19104:93;:::i;:::-;19222:2;19217:3;19213:12;19206:19;;18866:365;;;:::o;19237:419::-;19403:4;19441:2;19430:9;19426:18;19418:26;;19490:9;19484:4;19480:20;19476:1;19465:9;19461:17;19454:47;19518:131;19644:4;19518:131;:::i;:::-;19510:139;;19237:419;;;:::o;19662:152::-;19802:4;19798:1;19790:6;19786:14;19779:28;19662:152;:::o;19820:365::-;19962:3;19983:66;20047:1;20042:3;19983:66;:::i;:::-;19976:73;;20058:93;20147:3;20058:93;:::i;:::-;20176:2;20171:3;20167:12;20160:19;;19820:365;;;:::o;20191:419::-;20357:4;20395:2;20384:9;20380:18;20372:26;;20444:9;20438:4;20434:20;20430:1;20419:9;20415:17;20408:47;20472:131;20598:4;20472:131;:::i;:::-;20464:139;;20191:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1247000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DAI()": "infinite",
								"USDC()": "infinite",
								"USDT()": "infinite",
								"WETH9()": "418",
								"poolFee()": "332",
								"swapExactInputMultihop(uint256)": "infinite",
								"swapExactInputSingle(uint256)": "infinite",
								"swapExactOutputMultihop(uint256,uint256)": "infinite",
								"swapExactOutputSingle(uint256,uint256)": "infinite",
								"swapRouter()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 205,
									"end": 8259,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 592,
									"end": 826,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 592,
									"end": 826,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 592,
									"end": 826,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 592,
									"end": 826,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 592,
									"end": 826,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 592,
									"end": 826,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 592,
									"end": 826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 592,
									"end": 826,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 740,
									"end": 751,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 727,
									"end": 751,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 727,
									"end": 751,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 727,
									"end": 751,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 727,
									"end": 751,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 727,
									"end": 751,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 727,
									"end": 751,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 727,
									"end": 751,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 727,
									"end": 751,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 727,
									"end": 751,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 727,
									"end": 751,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 768,
									"end": 772,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 762,
									"end": 772,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 762,
									"end": 772,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 762,
									"end": 772,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 762,
									"end": 772,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 762,
									"end": 772,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 762,
									"end": 772,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 762,
									"end": 772,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 762,
									"end": 772,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 762,
									"end": 772,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 762,
									"end": 772,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 790,
									"end": 795,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 783,
									"end": 795,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 783,
									"end": 795,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 783,
									"end": 795,
									"name": "PUSH",
									"source": 4,
									"value": "C0"
								},
								{
									"begin": 783,
									"end": 795,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 783,
									"end": 795,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 783,
									"end": 795,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 783,
									"end": 795,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 783,
									"end": 795,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 783,
									"end": 795,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 783,
									"end": 795,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 813,
									"end": 818,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 806,
									"end": 818,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 806,
									"end": 818,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 806,
									"end": 818,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 806,
									"end": 818,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 806,
									"end": 818,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 806,
									"end": 818,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 806,
									"end": 818,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 806,
									"end": 818,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 806,
									"end": 818,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 806,
									"end": 818,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 592,
									"end": 826,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 683,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 624,
									"end": 631,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 671,
									"end": 676,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 653,
									"end": 677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 653,
									"end": 677,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 642,
									"end": 677,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 642,
									"end": 677,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 689,
									"end": 849,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 689,
									"end": 849,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 818,
									"end": 823,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 781,
									"end": 824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 781,
									"end": 824,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 781,
									"end": 824,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 774,
									"end": 779,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 771,
									"end": 825,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 761,
									"end": 843,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 839,
									"end": 840,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 829,
									"end": 841,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 761,
									"end": 843,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 689,
									"end": 849,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 689,
									"end": 849,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 931,
									"end": 936,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 962,
									"end": 968,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 956,
									"end": 969,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 947,
									"end": 969,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 947,
									"end": 969,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1024,
									"end": 1029,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 978,
									"end": 1030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1164,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1042,
									"end": 1164,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1139,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1133,
									"end": 1138,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1139,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1115,
									"end": 1139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1139,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1115,
									"end": 1139,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1108,
									"end": 1113,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1140,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1095,
									"end": 1158,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1095,
									"end": 1158,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1154,
									"end": 1155,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1151,
									"end": 1152,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1144,
									"end": 1156,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1095,
									"end": 1158,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1095,
									"end": 1158,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1164,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1164,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1170,
									"end": 1313,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1170,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1227,
									"end": 1232,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1258,
									"end": 1264,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1252,
									"end": 1265,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1243,
									"end": 1265,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1243,
									"end": 1265,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1274,
									"end": 1307,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1301,
									"end": 1306,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1274,
									"end": 1307,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1274,
									"end": 1307,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1274,
									"end": 1307,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1274,
									"end": 1307,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1170,
									"end": 1313,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1170,
									"end": 1313,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1170,
									"end": 1313,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1170,
									"end": 1313,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1170,
									"end": 1313,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 2177,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1319,
									"end": 2177,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1435,
									"end": 1441,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1443,
									"end": 1449,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1451,
									"end": 1457,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1459,
									"end": 1465,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1508,
									"end": 1511,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1496,
									"end": 1505,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1487,
									"end": 1494,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1483,
									"end": 1506,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1479,
									"end": 1512,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1476,
									"end": 1596,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1476,
									"end": 1596,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1476,
									"end": 1596,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1515,
									"end": 1594,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1515,
									"end": 1594,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1515,
									"end": 1594,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1515,
									"end": 1594,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1515,
									"end": 1594,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1476,
									"end": 1596,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1476,
									"end": 1596,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1660,
									"end": 1743,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1735,
									"end": 1742,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1726,
									"end": 1732,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1715,
									"end": 1724,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 1711,
									"end": 1733,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1660,
									"end": 1743,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1660,
									"end": 1743,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1660,
									"end": 1743,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1660,
									"end": 1743,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1650,
									"end": 1743,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 1650,
									"end": 1743,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1606,
									"end": 1753,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1792,
									"end": 1794,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1818,
									"end": 1882,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1874,
									"end": 1881,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1865,
									"end": 1871,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 1850,
									"end": 1872,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1818,
									"end": 1882,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1818,
									"end": 1882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1818,
									"end": 1882,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1818,
									"end": 1882,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1808,
									"end": 1882,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1808,
									"end": 1882,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1763,
									"end": 1892,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1931,
									"end": 1933,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1957,
									"end": 2021,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 2013,
									"end": 2020,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 2004,
									"end": 2010,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1993,
									"end": 2002,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 1989,
									"end": 2011,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1957,
									"end": 2021,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1957,
									"end": 2021,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1957,
									"end": 2021,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1957,
									"end": 2021,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1947,
									"end": 2021,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1947,
									"end": 2021,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1902,
									"end": 2031,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2070,
									"end": 2072,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 2096,
									"end": 2160,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 2152,
									"end": 2159,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 2143,
									"end": 2149,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2132,
									"end": 2141,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 2128,
									"end": 2150,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2096,
									"end": 2160,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 2096,
									"end": 2160,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2096,
									"end": 2160,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 2096,
									"end": 2160,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2086,
									"end": 2160,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2086,
									"end": 2160,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2041,
									"end": 2170,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 2177,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 2177,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 2177,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 2177,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 2177,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 2177,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 2177,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 2177,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "PUSH",
									"source": 4,
									"value": "C0"
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "379"
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "377"
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "375"
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "369"
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 8259,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203f217f4a40acc2b912045fb4f20721d20822bedb201e7b713c002c3943d0141564736f6c634300081a0033",
									".code": [
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH",
											"source": 4,
											"value": "C31C9C07"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH",
											"source": 4,
											"value": "C31C9C07"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH",
											"source": 4,
											"value": "C4B69A18"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH",
											"source": 4,
											"value": "C54E44EB"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH",
											"source": 4,
											"value": "E0BAB4C4"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH",
											"source": 4,
											"value": "EDD83557"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH",
											"source": 4,
											"value": "89FE6AA"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH",
											"source": 4,
											"value": "3B85CF6A"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH",
											"source": 4,
											"value": "4AA4A4FC"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH",
											"source": 4,
											"value": "73BD43AD"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH",
											"source": 4,
											"value": "89A30271"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 8259,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 546,
											"end": 583,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 546,
											"end": 583,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 546,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 546,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 546,
											"end": 583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 546,
											"end": 583,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 546,
											"end": 583,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 546,
											"end": 583,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 583,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 546,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 546,
											"end": 583,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 546,
											"end": 583,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 546,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 546,
											"end": 583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 546,
											"end": 583,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 546,
											"end": 583,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 546,
											"end": 583,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 583,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 546,
											"end": 583,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 546,
											"end": 583,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 546,
											"end": 583,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 546,
											"end": 583,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 546,
											"end": 583,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2952,
											"end": 4071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2952,
											"end": 4071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2952,
											"end": 4071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 463,
											"end": 537,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 463,
											"end": 537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 463,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 463,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 463,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 463,
											"end": 537,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 463,
											"end": 537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 463,
											"end": 537,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 463,
											"end": 537,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 463,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 463,
											"end": 537,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 463,
											"end": 537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 463,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 463,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 463,
											"end": 537,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 463,
											"end": 537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 463,
											"end": 537,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 463,
											"end": 537,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 463,
											"end": 537,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 463,
											"end": 537,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 463,
											"end": 537,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 463,
											"end": 537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 463,
											"end": 537,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4548,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4548,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4548,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 427,
											"end": 456,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 427,
											"end": 456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 427,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 427,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 427,
											"end": 456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 427,
											"end": 456,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 427,
											"end": 456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 427,
											"end": 456,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 456,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 427,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 427,
											"end": 456,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 427,
											"end": 456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 427,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 427,
											"end": 456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 427,
											"end": 456,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 427,
											"end": 456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 427,
											"end": 456,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 456,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 427,
											"end": 456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 427,
											"end": 456,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 427,
											"end": 456,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 427,
											"end": 456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 427,
											"end": 456,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 233,
											"end": 272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 233,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 233,
											"end": 272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 233,
											"end": 272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 233,
											"end": 272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 233,
											"end": 272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 233,
											"end": 272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6463,
											"end": 8256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 6463,
											"end": 8256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 6463,
											"end": 8256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 391,
											"end": 420,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 391,
											"end": 420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 391,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 391,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 391,
											"end": 420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 391,
											"end": 420,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 391,
											"end": 420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 391,
											"end": 420,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 391,
											"end": 420,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 391,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 391,
											"end": 420,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 391,
											"end": 420,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 391,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 391,
											"end": 420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 391,
											"end": 420,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 391,
											"end": 420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 391,
											"end": 420,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 391,
											"end": 420,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 391,
											"end": 420,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 391,
											"end": 420,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 391,
											"end": 420,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 391,
											"end": 420,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 391,
											"end": 420,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 356,
											"end": 384,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 356,
											"end": 384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 356,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 356,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 356,
											"end": 384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 356,
											"end": 384,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 356,
											"end": 384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 356,
											"end": 384,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 356,
											"end": 384,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 356,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 356,
											"end": 384,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 356,
											"end": 384,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 356,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 356,
											"end": 384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 356,
											"end": 384,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 356,
											"end": 384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 356,
											"end": 384,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 356,
											"end": 384,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 356,
											"end": 384,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 356,
											"end": 384,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 356,
											"end": 384,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 356,
											"end": 384,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 356,
											"end": 384,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1341,
											"end": 2081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1341,
											"end": 2081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1341,
											"end": 2081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 546,
											"end": 583,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 546,
											"end": 583,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 579,
											"end": 583,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 546,
											"end": 583,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 546,
											"end": 583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3101,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3147,
											"end": 3150,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 3165,
											"end": 3175,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3198,
											"end": 3202,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3218,
											"end": 3233,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3101,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3101,
											"end": 3244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3101,
											"end": 3244,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3101,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3255,
											"end": 3324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3282,
											"end": 3285,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 3295,
											"end": 3305,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 3308,
											"end": 3323,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3255,
											"end": 3281,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3255,
											"end": 3324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3255,
											"end": 3324,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3255,
											"end": 3324,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3337,
											"end": 3380,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 495,
											"end": 537,
											"name": "PUSH",
											"source": 4,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 579,
											"end": 583,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 3485,
											"end": 3489,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 579,
											"end": 583,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 3500,
											"end": 3503,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3452,
											"end": 3504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3452,
											"end": 3504,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3534,
											"end": 3544,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3588,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3618,
											"end": 3627,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3678,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3694,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3337,
											"end": 3694,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3337,
											"end": 3694,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3728,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 3718,
											"end": 3740,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3718,
											"end": 3740,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3740,
											"name": "PUSH",
											"source": 4,
											"value": "F28C0498"
										},
										{
											"begin": 3741,
											"end": 3747,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3718,
											"end": 3748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3718,
											"end": 3748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3791,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3765,
											"end": 3773,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3765,
											"end": 3791,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3761,
											"end": 4064,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3761,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3761,
											"end": 4064,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3808,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3835,
											"end": 3838,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 3848,
											"end": 3858,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 3861,
											"end": 3862,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3808,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3808,
											"end": 3863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3808,
											"end": 3863,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3808,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3878,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3928,
											"end": 3931,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 3958,
											"end": 3962,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 3992,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4037,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4011,
											"end": 4026,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4011,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4011,
											"end": 4037,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4011,
											"end": 4037,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4011,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4011,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4011,
											"end": 4037,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4011,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3878,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3878,
											"end": 4052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3878,
											"end": 4052,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3878,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3761,
											"end": 4064,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3761,
											"end": 4064,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3090,
											"end": 4071,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 4071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 463,
											"end": 537,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 463,
											"end": 537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 495,
											"end": 537,
											"name": "PUSH",
											"source": 4,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 463,
											"end": 537,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 463,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4630,
											"end": 4647,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4779,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4825,
											"end": 4828,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 4843,
											"end": 4853,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4876,
											"end": 4880,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 4896,
											"end": 4904,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4779,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4779,
											"end": 4915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4779,
											"end": 4915,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4779,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 5000,
											"end": 5003,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 5013,
											"end": 5023,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 5026,
											"end": 5034,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4973,
											"end": 5035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5035,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 4973,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5287,
											"end": 5335,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5415,
											"end": 5418,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 495,
											"end": 537,
											"name": "PUSH",
											"source": 4,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 579,
											"end": 583,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFF"
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5513,
											"end": 5523,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5552,
											"end": 5567,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5596,
											"end": 5604,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5680,
											"end": 5681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5697,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5287,
											"end": 5697,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5287,
											"end": 5697,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5794,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 5784,
											"end": 5811,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5784,
											"end": 5811,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5811,
											"name": "PUSH",
											"source": 4,
											"value": "414BF389"
										},
										{
											"begin": 5812,
											"end": 5818,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5784,
											"end": 5819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5784,
											"end": 5819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5772,
											"end": 5819,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5772,
											"end": 5819,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4649,
											"end": 5827,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 427,
											"end": 456,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 427,
											"end": 456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 427,
											"end": 456,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 427,
											"end": 456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 427,
											"end": 456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 233,
											"end": 272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 233,
											"end": 272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 233,
											"end": 272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6581,
											"end": 6597,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6677,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 6723,
											"end": 6726,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 6741,
											"end": 6751,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6774,
											"end": 6778,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6809,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6677,
											"end": 6708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 6677,
											"end": 6820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6677,
											"end": 6820,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 6677,
											"end": 6820,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7050,
											"end": 7119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 7077,
											"end": 7080,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 7090,
											"end": 7100,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 7103,
											"end": 7118,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7050,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 7050,
											"end": 7119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7050,
											"end": 7119,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 7050,
											"end": 7119,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7181,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7262,
											"end": 7265,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 495,
											"end": 537,
											"name": "PUSH",
											"source": 4,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 579,
											"end": 583,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFF"
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7360,
											"end": 7370,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7414,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7444,
											"end": 7453,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7489,
											"end": 7504,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7542,
											"end": 7543,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7559,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7559,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7559,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7696,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 7686,
											"end": 7714,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7686,
											"end": 7714,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7714,
											"name": "PUSH",
											"source": 4,
											"value": "DB3E2198"
										},
										{
											"begin": 7715,
											"end": 7721,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 7686,
											"end": 7722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 7686,
											"end": 7722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 7686,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7675,
											"end": 7722,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7675,
											"end": 7722,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7997,
											"end": 8012,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7986,
											"end": 7994,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7986,
											"end": 8012,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8249,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 7982,
											"end": 8249,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8029,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 8056,
											"end": 8059,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 8069,
											"end": 8079,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 8082,
											"end": 8083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8029,
											"end": 8055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 8029,
											"end": 8084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8029,
											"end": 8084,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 8029,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8099,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 8145,
											"end": 8148,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 8167,
											"end": 8177,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 8214,
											"end": 8222,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8196,
											"end": 8211,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8196,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 8196,
											"end": 8222,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8196,
											"end": 8222,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8196,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 8196,
											"end": 8222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8196,
											"end": 8222,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 8196,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8099,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 8099,
											"end": 8237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8099,
											"end": 8237,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 8099,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8249,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 7982,
											"end": 8249,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 8256,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 8256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 391,
											"end": 420,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 391,
											"end": 420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 391,
											"end": 420,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 391,
											"end": 420,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 391,
											"end": 420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 356,
											"end": 384,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 356,
											"end": 384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 356,
											"end": 384,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 356,
											"end": 384,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 356,
											"end": 384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1501,
											"end": 1504,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 1519,
											"end": 1529,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1552,
											"end": 1556,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1572,
											"end": 1580,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1455,
											"end": 1591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1591,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1455,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1604,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1631,
											"end": 1634,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 1644,
											"end": 1654,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 1657,
											"end": 1665,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1604,
											"end": 1666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1604,
											"end": 1666,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1604,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1679,
											"end": 1721,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1812,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 579,
											"end": 583,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 1823,
											"end": 1827,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 579,
											"end": 583,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 495,
											"end": 537,
											"name": "PUSH",
											"source": 4,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1792,
											"end": 1844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1874,
											"end": 1884,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 1965,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2002,
											"end": 2003,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 2019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1679,
											"end": 2019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1679,
											"end": 2019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2054,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 2044,
											"end": 2065,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2044,
											"end": 2065,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2065,
											"name": "PUSH",
											"source": 4,
											"value": "C04B8D59"
										},
										{
											"begin": 2066,
											"end": 2072,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2044,
											"end": 2073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2044,
											"end": 2073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2032,
											"end": 2073,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2032,
											"end": 2073,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1444,
											"end": 2081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 2081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 561,
											"end": 919,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 561,
											"end": 919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 701,
											"end": 713,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 732,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 753,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 748,
											"end": 758,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 748,
											"end": 758,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 812,
											"end": 816,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 818,
											"end": 820,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 822,
											"end": 827,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 759,
											"end": 828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 748,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 847,
											"end": 854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 847,
											"end": 904,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 874,
											"end": 875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 859,
											"end": 870,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 859,
											"end": 875,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 859,
											"end": 903,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 890,
											"end": 894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 879,
											"end": 903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 859,
											"end": 903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 847,
											"end": 904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 839,
											"end": 912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 690,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1986,
											"end": 1998,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2017,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2080,
											"end": 2082,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2032,
											"end": 2090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2021,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2116,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2137,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2125,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2132,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2137,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2152,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2141,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2101,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1337,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1356,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1365,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1418,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1394,
											"end": 1418,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1394,
											"end": 1418,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1420,
											"end": 1422,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1424,
											"end": 1429,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1371,
											"end": 1430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1360,
											"end": 1431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1461,
											"end": 1465,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1472,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1477,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1492,
											"end": 1496,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1481,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1441,
											"end": 1513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 98,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 7,
											"end": 98,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 43,
											"end": 50,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 91,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFF"
										},
										{
											"begin": 76,
											"end": 81,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 72,
											"end": 92,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 61,
											"end": 92,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 61,
											"end": 92,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 98,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 98,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 104,
											"end": 219,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 104,
											"end": 219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 189,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 206,
											"end": 211,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 189,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 189,
											"end": 212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 189,
											"end": 212,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 189,
											"end": 212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 184,
											"end": 187,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 177,
											"end": 213,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 104,
											"end": 219,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 104,
											"end": 219,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 104,
											"end": 219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 225,
											"end": 443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 316,
											"end": 320,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 354,
											"end": 356,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 343,
											"end": 352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 339,
											"end": 357,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 331,
											"end": 357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 331,
											"end": 357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 367,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 433,
											"end": 434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 431,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 418,
											"end": 435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 409,
											"end": 415,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 367,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 367,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 367,
											"end": 436,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 367,
											"end": 436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 530,
											"end": 647,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 530,
											"end": 647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 639,
											"end": 640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 637,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 629,
											"end": 641,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 776,
											"end": 853,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 776,
											"end": 853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 813,
											"end": 820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 847,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 831,
											"end": 847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 831,
											"end": 847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 776,
											"end": 853,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 776,
											"end": 853,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 776,
											"end": 853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 776,
											"end": 853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 859,
											"end": 981,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 859,
											"end": 981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 950,
											"end": 955,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 932,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 932,
											"end": 956,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 925,
											"end": 930,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 922,
											"end": 957,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 912,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 912,
											"end": 975,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 971,
											"end": 972,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 968,
											"end": 969,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 961,
											"end": 973,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 912,
											"end": 975,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 912,
											"end": 975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 859,
											"end": 981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 859,
											"end": 981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1126,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 987,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1038,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1071,
											"end": 1077,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1049,
											"end": 1078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1049,
											"end": 1078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1114,
											"end": 1119,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1087,
											"end": 1120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1126,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1126,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1606,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1206,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1214,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1259,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1254,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1236,
											"end": 1243,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1255,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1225,
											"end": 1344,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1225,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1225,
											"end": 1344,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1263,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1263,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1263,
											"end": 1342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1263,
											"end": 1342,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1263,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1225,
											"end": 1344,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1225,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1384,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1408,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 1453,
											"end": 1460,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1450,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1433,
											"end": 1442,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1429,
											"end": 1451,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1408,
											"end": 1461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1461,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 1408,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1461,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1354,
											"end": 1471,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1512,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1536,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 1581,
											"end": 1588,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1572,
											"end": 1578,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1557,
											"end": 1579,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1536,
											"end": 1589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1589,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 1536,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1526,
											"end": 1589,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1526,
											"end": 1589,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1606,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1606,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1606,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1606,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1606,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1730,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1612,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1717,
											"end": 1722,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1699,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1699,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1697,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1724,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1958,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1736,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1833,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1869,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1856,
											"end": 1865,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1852,
											"end": 1870,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1870,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1870,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 1948,
											"end": 1949,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 1946,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1933,
											"end": 1950,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1924,
											"end": 1930,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1880,
											"end": 1951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 1951,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 1880,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1958,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1958,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1958,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1958,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1964,
											"end": 2090,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1964,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2034,
											"end": 2039,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2084,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2084,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1964,
											"end": 2090,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1964,
											"end": 2090,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1964,
											"end": 2090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1964,
											"end": 2090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2192,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2096,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2140,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 2180,
											"end": 2185,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2162,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2186,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 2162,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2151,
											"end": 2186,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2151,
											"end": 2186,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2192,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2198,
											"end": 2316,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2198,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 2303,
											"end": 2308,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2285,
											"end": 2309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2280,
											"end": 2283,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2310,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2198,
											"end": 2316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2198,
											"end": 2316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2198,
											"end": 2316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2322,
											"end": 2544,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2322,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2419,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 2455,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2451,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2430,
											"end": 2456,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2430,
											"end": 2456,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 2534,
											"end": 2535,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2532,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2536,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2516,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2466,
											"end": 2537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2537,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 2466,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2322,
											"end": 2544,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2322,
											"end": 2544,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2322,
											"end": 2544,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2322,
											"end": 2544,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2322,
											"end": 2544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2550,
											"end": 2879,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2550,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2609,
											"end": 2615,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2658,
											"end": 2660,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2646,
											"end": 2655,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2644,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2633,
											"end": 2656,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2629,
											"end": 2661,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2745,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 2626,
											"end": 2745,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2664,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 2664,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2664,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2664,
											"end": 2743,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 2664,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2745,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 2626,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 2785,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 2854,
											"end": 2861,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2845,
											"end": 2851,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 2843,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2852,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2809,
											"end": 2862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2862,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 2809,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2862,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2872,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2550,
											"end": 2879,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2550,
											"end": 2879,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2550,
											"end": 2879,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2550,
											"end": 2879,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2550,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2885,
											"end": 2945,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2885,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2913,
											"end": 2916,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2939,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2885,
											"end": 2945,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2885,
											"end": 2945,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2885,
											"end": 2945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2885,
											"end": 2945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 3093,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2951,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3010,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3052,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3061,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 3079,
											"end": 3084,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3061,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 3061,
											"end": 3085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3061,
											"end": 3085,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 3061,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3052,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 3052,
											"end": 3086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3052,
											"end": 3086,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3052,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3034,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 3034,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3034,
											"end": 3087,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3034,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3087,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 3093,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 3093,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 3093,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 3093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3099,
											"end": 3225,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 3099,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3149,
											"end": 3158,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3182,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 3213,
											"end": 3218,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3182,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 3182,
											"end": 3219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3182,
											"end": 3219,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 3182,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3219,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3219,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3099,
											"end": 3225,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3099,
											"end": 3225,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3099,
											"end": 3225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3099,
											"end": 3225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3376,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 3231,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3300,
											"end": 3309,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 3364,
											"end": 3369,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3333,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 3333,
											"end": 3370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3333,
											"end": 3370,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 3333,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3320,
											"end": 3370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3320,
											"end": 3370,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3376,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3376,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3376,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3551,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3382,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 3538,
											"end": 3543,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 3488,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3544,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 3488,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3483,
											"end": 3486,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3476,
											"end": 3545,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3551,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3551,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3817,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3557,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3673,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3709,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3696,
											"end": 3705,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3692,
											"end": 3710,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3684,
											"end": 3710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3684,
											"end": 3710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 3807,
											"end": 3808,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3796,
											"end": 3805,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3792,
											"end": 3809,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3783,
											"end": 3789,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3720,
											"end": 3810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3810,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 3720,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3817,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3817,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3917,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 3823,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3856,
											"end": 3864,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3909,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3902,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3896,
											"end": 3910,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3910,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3910,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3917,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4017,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3923,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3962,
											"end": 3969,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 4005,
											"end": 4010,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3991,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 3991,
											"end": 4011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3991,
											"end": 4011,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 3991,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3980,
											"end": 4011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3980,
											"end": 4011,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4017,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4017,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4017,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4023,
											"end": 4123,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 4023,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4062,
											"end": 4069,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 4111,
											"end": 4116,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4091,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4091,
											"end": 4117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4091,
											"end": 4117,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 4091,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4117,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4117,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4023,
											"end": 4123,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4023,
											"end": 4123,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4023,
											"end": 4123,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4023,
											"end": 4123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4286,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 4129,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4234,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 4254,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 4272,
											"end": 4277,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4254,
											"end": 4278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4278,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 4254,
											"end": 4278,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4234,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 4234,
											"end": 4279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4234,
											"end": 4279,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 4234,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4229,
											"end": 4232,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4280,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4286,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4286,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4388,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 4292,
											"end": 4388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4326,
											"end": 4334,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4380,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4370,
											"end": 4373,
											"name": "PUSH",
											"source": 5,
											"value": "E8"
										},
										{
											"begin": 4366,
											"end": 4381,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4388,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4394,
											"end": 4488,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 4394,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4432,
											"end": 4439,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4461,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 4476,
											"end": 4481,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4461,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 4461,
											"end": 4482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4461,
											"end": 4482,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 4461,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4482,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4394,
											"end": 4488,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4394,
											"end": 4488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4394,
											"end": 4488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4394,
											"end": 4488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4494,
											"end": 4647,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 4494,
											"end": 4647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4597,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 4616,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 4633,
											"end": 4638,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4616,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 4616,
											"end": 4639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4616,
											"end": 4639,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 4616,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4597,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 4597,
											"end": 4640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4597,
											"end": 4640,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 4597,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4592,
											"end": 4595,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4641,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4494,
											"end": 4647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4494,
											"end": 4647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4494,
											"end": 4647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 5463,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4653,
											"end": 5463,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4876,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4888,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 4959,
											"end": 4962,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4888,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 4888,
											"end": 4963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4888,
											"end": 4963,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 4888,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 4983,
											"end": 4986,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4979,
											"end": 4991,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 4991,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 4991,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 5070,
											"end": 5073,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5067,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 5001,
											"end": 5074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5074,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 5001,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5099,
											"end": 5100,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5094,
											"end": 5097,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5090,
											"end": 5101,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5083,
											"end": 5101,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5083,
											"end": 5101,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5111,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 5182,
											"end": 5185,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5179,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5111,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 5111,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5111,
											"end": 5186,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 5111,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5211,
											"end": 5213,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 5206,
											"end": 5209,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5214,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5195,
											"end": 5214,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5195,
											"end": 5214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 5293,
											"end": 5296,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5284,
											"end": 5290,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 5224,
											"end": 5297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5297,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 5224,
											"end": 5297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5322,
											"end": 5323,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5317,
											"end": 5320,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5313,
											"end": 5324,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5306,
											"end": 5324,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5306,
											"end": 5324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5334,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 5405,
											"end": 5408,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5396,
											"end": 5402,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5334,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 5334,
											"end": 5409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5334,
											"end": 5409,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 5334,
											"end": 5409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5434,
											"end": 5436,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 5429,
											"end": 5432,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5437,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5418,
											"end": 5437,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5418,
											"end": 5437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5454,
											"end": 5457,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5447,
											"end": 5457,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5447,
											"end": 5457,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 5463,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 5463,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 5463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 5463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 5463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 5463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 5463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 5463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 5463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5469,
											"end": 5567,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 5469,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5520,
											"end": 5526,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5554,
											"end": 5559,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5548,
											"end": 5560,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5538,
											"end": 5560,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5538,
											"end": 5560,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5469,
											"end": 5567,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5469,
											"end": 5567,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5469,
											"end": 5567,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5469,
											"end": 5567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5731,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 5573,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5646,
											"end": 5657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5680,
											"end": 5686,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5675,
											"end": 5678,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5668,
											"end": 5687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5724,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5715,
											"end": 5718,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5711,
											"end": 5725,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5696,
											"end": 5725,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5696,
											"end": 5725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5731,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5731,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5737,
											"end": 5876,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 5737,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5826,
											"end": 5832,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5821,
											"end": 5824,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5816,
											"end": 5819,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5810,
											"end": 5833,
											"name": "MCOPY",
											"source": 5
										},
										{
											"begin": 5867,
											"end": 5868,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5858,
											"end": 5864,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5853,
											"end": 5856,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5849,
											"end": 5865,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5842,
											"end": 5869,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5737,
											"end": 5876,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5737,
											"end": 5876,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5737,
											"end": 5876,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5737,
											"end": 5876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5984,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 5882,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5929,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5974,
											"end": 5976,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5970,
											"end": 5977,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5965,
											"end": 5967,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5958,
											"end": 5963,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5954,
											"end": 5968,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5950,
											"end": 5978,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 5978,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 5978,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5984,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6343,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 5990,
											"end": 6343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6069,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 6126,
											"end": 6131,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6094,
											"end": 6132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 6094,
											"end": 6132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6094,
											"end": 6132,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 6094,
											"end": 6132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 6201,
											"end": 6207,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6196,
											"end": 6199,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 6148,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6208,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 6148,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6141,
											"end": 6208,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6141,
											"end": 6208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6217,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 6275,
											"end": 6281,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6270,
											"end": 6273,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6263,
											"end": 6267,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6256,
											"end": 6261,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6252,
											"end": 6268,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6217,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 6217,
											"end": 6282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6217,
											"end": 6282,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 6217,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 6329,
											"end": 6335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 6307,
											"end": 6336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6336,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 6307,
											"end": 6336,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6302,
											"end": 6305,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6298,
											"end": 6337,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6291,
											"end": 6337,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6291,
											"end": 6337,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6070,
											"end": 6343,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6343,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6343,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6343,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6343,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6349,
											"end": 6457,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 6349,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6426,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 6444,
											"end": 6449,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6426,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 6426,
											"end": 6450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6426,
											"end": 6450,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 6426,
											"end": 6450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6421,
											"end": 6424,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6414,
											"end": 6451,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6349,
											"end": 6457,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6349,
											"end": 6457,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6349,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6463,
											"end": 6571,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 6463,
											"end": 6571,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6540,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 6558,
											"end": 6563,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6540,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 6540,
											"end": 6564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6540,
											"end": 6564,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 6540,
											"end": 6564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6535,
											"end": 6538,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6528,
											"end": 6565,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6463,
											"end": 6571,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6463,
											"end": 6571,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6463,
											"end": 6571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6661,
											"end": 7830,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 6661,
											"end": 7830,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6798,
											"end": 6801,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6838,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 6829,
											"end": 6832,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6825,
											"end": 6839,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6921,
											"end": 6925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6914,
											"end": 6919,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6904,
											"end": 6927,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6974,
											"end": 6977,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6968,
											"end": 6972,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6964,
											"end": 6978,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6957,
											"end": 6961,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6952,
											"end": 6955,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6948,
											"end": 6962,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6941,
											"end": 6979,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7000,
											"end": 7071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 7066,
											"end": 7070,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7052,
											"end": 7064,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7000,
											"end": 7071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 7000,
											"end": 7071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7000,
											"end": 7071,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 7000,
											"end": 7071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6992,
											"end": 7071,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6992,
											"end": 7071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6849,
											"end": 7082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7169,
											"end": 7173,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7162,
											"end": 7167,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7158,
											"end": 7174,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7152,
											"end": 7175,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7188,
											"end": 7251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 7245,
											"end": 7249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7240,
											"end": 7243,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7236,
											"end": 7250,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7222,
											"end": 7234,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7188,
											"end": 7251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 7188,
											"end": 7251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7188,
											"end": 7251,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 7188,
											"end": 7251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7347,
											"end": 7351,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7340,
											"end": 7345,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7336,
											"end": 7352,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7330,
											"end": 7353,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7366,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 7423,
											"end": 7427,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7418,
											"end": 7421,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7414,
											"end": 7428,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7400,
											"end": 7412,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7366,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 7366,
											"end": 7429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7366,
											"end": 7429,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 7366,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7271,
											"end": 7439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7526,
											"end": 7530,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7519,
											"end": 7524,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7515,
											"end": 7531,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7532,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7545,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 7602,
											"end": 7606,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7597,
											"end": 7600,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7593,
											"end": 7607,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7591,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7545,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 7545,
											"end": 7608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7545,
											"end": 7608,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 7545,
											"end": 7608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7449,
											"end": 7618,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7711,
											"end": 7715,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 7704,
											"end": 7709,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7700,
											"end": 7716,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7694,
											"end": 7717,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7730,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 7787,
											"end": 7791,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 7782,
											"end": 7785,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7778,
											"end": 7792,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7764,
											"end": 7776,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7730,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 7730,
											"end": 7793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7730,
											"end": 7793,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 7730,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7628,
											"end": 7803,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7820,
											"end": 7824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7813,
											"end": 7824,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7813,
											"end": 7824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6803,
											"end": 7830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6661,
											"end": 7830,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6661,
											"end": 7830,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6661,
											"end": 7830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6661,
											"end": 7830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6661,
											"end": 7830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7836,
											"end": 8245,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 7836,
											"end": 8245,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7997,
											"end": 8001,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8024,
											"end": 8033,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8020,
											"end": 8038,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8012,
											"end": 8038,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8012,
											"end": 8038,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8084,
											"end": 8093,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8078,
											"end": 8082,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8074,
											"end": 8094,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8070,
											"end": 8071,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8059,
											"end": 8068,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8055,
											"end": 8072,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8048,
											"end": 8095,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8112,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 8233,
											"end": 8237,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8224,
											"end": 8230,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8112,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 8112,
											"end": 8238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8112,
											"end": 8238,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 8112,
											"end": 8238,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8104,
											"end": 8238,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8104,
											"end": 8238,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7836,
											"end": 8245,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7836,
											"end": 8245,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7836,
											"end": 8245,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7836,
											"end": 8245,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7836,
											"end": 8245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8251,
											"end": 8394,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 8251,
											"end": 8394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8308,
											"end": 8313,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8339,
											"end": 8345,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8333,
											"end": 8346,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8324,
											"end": 8346,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8324,
											"end": 8346,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8355,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 8382,
											"end": 8387,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8355,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 8355,
											"end": 8388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8355,
											"end": 8388,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 8355,
											"end": 8388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8251,
											"end": 8394,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8251,
											"end": 8394,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8251,
											"end": 8394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8251,
											"end": 8394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8251,
											"end": 8394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8400,
											"end": 8751,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 8400,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8470,
											"end": 8476,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8519,
											"end": 8521,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8507,
											"end": 8516,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8498,
											"end": 8505,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8494,
											"end": 8517,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8490,
											"end": 8522,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 8487,
											"end": 8606,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8487,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 8487,
											"end": 8606,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8525,
											"end": 8604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 8525,
											"end": 8604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 8525,
											"end": 8604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8525,
											"end": 8604,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 8525,
											"end": 8604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8487,
											"end": 8606,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 8487,
											"end": 8606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8645,
											"end": 8646,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8670,
											"end": 8734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 8726,
											"end": 8733,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8717,
											"end": 8723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8706,
											"end": 8715,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8702,
											"end": 8724,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8670,
											"end": 8734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 8670,
											"end": 8734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8670,
											"end": 8734,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 8670,
											"end": 8734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8660,
											"end": 8734,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8660,
											"end": 8734,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8616,
											"end": 8744,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8400,
											"end": 8751,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8400,
											"end": 8751,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8400,
											"end": 8751,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8400,
											"end": 8751,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8400,
											"end": 8751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8757,
											"end": 8937,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 8757,
											"end": 8937,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8805,
											"end": 8882,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8802,
											"end": 8803,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8795,
											"end": 8883,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8902,
											"end": 8906,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 8899,
											"end": 8900,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8892,
											"end": 8907,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8926,
											"end": 8930,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8923,
											"end": 8924,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8916,
											"end": 8931,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 9137,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 8943,
											"end": 9137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8983,
											"end": 8987,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9003,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 9021,
											"end": 9022,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9003,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 9003,
											"end": 9023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9003,
											"end": 9023,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 9003,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8998,
											"end": 9023,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8998,
											"end": 9023,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9037,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 9055,
											"end": 9056,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9037,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 9037,
											"end": 9057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9037,
											"end": 9057,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 9037,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9032,
											"end": 9057,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9032,
											"end": 9057,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9081,
											"end": 9082,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9078,
											"end": 9079,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9074,
											"end": 9083,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9066,
											"end": 9083,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9066,
											"end": 9083,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9105,
											"end": 9106,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9099,
											"end": 9103,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9096,
											"end": 9107,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 9093,
											"end": 9130,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9093,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 9093,
											"end": 9130,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9110,
											"end": 9128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 9110,
											"end": 9128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 9110,
											"end": 9128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9110,
											"end": 9128,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 9110,
											"end": 9128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9093,
											"end": 9130,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 9093,
											"end": 9130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 9137,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 9137,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 9137,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 9137,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 9137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9143,
											"end": 9248,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 9143,
											"end": 9248,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9218,
											"end": 9241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 9235,
											"end": 9240,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9218,
											"end": 9241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 9218,
											"end": 9241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9218,
											"end": 9241,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 9218,
											"end": 9241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9213,
											"end": 9216,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9206,
											"end": 9242,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9143,
											"end": 9248,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9143,
											"end": 9248,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9143,
											"end": 9248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9254,
											"end": 9362,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 9254,
											"end": 9362,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9331,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 9349,
											"end": 9354,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9331,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 9331,
											"end": 9355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9331,
											"end": 9355,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 9331,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9326,
											"end": 9329,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9319,
											"end": 9356,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9254,
											"end": 9362,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9254,
											"end": 9362,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9254,
											"end": 9362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9462,
											"end": 11085,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 9462,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9637,
											"end": 9643,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 9632,
											"end": 9635,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9628,
											"end": 9644,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9729,
											"end": 9733,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9722,
											"end": 9727,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9718,
											"end": 9734,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9712,
											"end": 9735,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9748,
											"end": 9811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 9805,
											"end": 9809,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9800,
											"end": 9803,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9796,
											"end": 9810,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9782,
											"end": 9794,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9748,
											"end": 9811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 9748,
											"end": 9811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9748,
											"end": 9811,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 9748,
											"end": 9811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9654,
											"end": 9821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 9911,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9900,
											"end": 9905,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9896,
											"end": 9912,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9890,
											"end": 9913,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9926,
											"end": 9989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 9983,
											"end": 9987,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9978,
											"end": 9981,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9974,
											"end": 9988,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9960,
											"end": 9972,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9926,
											"end": 9989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 9926,
											"end": 9989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9926,
											"end": 9989,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 9926,
											"end": 9989,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9831,
											"end": 9999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10080,
											"end": 10084,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10073,
											"end": 10078,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10069,
											"end": 10085,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10063,
											"end": 10086,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10099,
											"end": 10160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 10154,
											"end": 10158,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10149,
											"end": 10152,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10145,
											"end": 10159,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10131,
											"end": 10143,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10099,
											"end": 10160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 10099,
											"end": 10160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10099,
											"end": 10160,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 10099,
											"end": 10160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10009,
											"end": 10170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10257,
											"end": 10261,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10250,
											"end": 10255,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10240,
											"end": 10263,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10276,
											"end": 10339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 10333,
											"end": 10337,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10328,
											"end": 10331,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10324,
											"end": 10338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10310,
											"end": 10322,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10276,
											"end": 10339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 10276,
											"end": 10339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10276,
											"end": 10339,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 10276,
											"end": 10339,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10180,
											"end": 10349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10435,
											"end": 10439,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 10428,
											"end": 10433,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10424,
											"end": 10440,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10418,
											"end": 10441,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10454,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 10511,
											"end": 10515,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 10506,
											"end": 10509,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10502,
											"end": 10516,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10500,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10454,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 10454,
											"end": 10517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10454,
											"end": 10517,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 10454,
											"end": 10517,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10359,
											"end": 10527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10613,
											"end": 10617,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 10606,
											"end": 10611,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10602,
											"end": 10618,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10596,
											"end": 10619,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 10689,
											"end": 10693,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 10684,
											"end": 10687,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10680,
											"end": 10694,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10678,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 10632,
											"end": 10695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10537,
											"end": 10705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10799,
											"end": 10803,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 10792,
											"end": 10797,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10788,
											"end": 10804,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10782,
											"end": 10805,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10818,
											"end": 10881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 10875,
											"end": 10879,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 10870,
											"end": 10873,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10866,
											"end": 10880,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10852,
											"end": 10864,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10818,
											"end": 10881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 10818,
											"end": 10881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10818,
											"end": 10881,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 10818,
											"end": 10881,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10715,
											"end": 10891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10986,
											"end": 10990,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 10979,
											"end": 10984,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10975,
											"end": 10991,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10969,
											"end": 10992,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11005,
											"end": 11068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 11062,
											"end": 11066,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 11057,
											"end": 11060,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11053,
											"end": 11067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11039,
											"end": 11051,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11005,
											"end": 11068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 11005,
											"end": 11068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11005,
											"end": 11068,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 11005,
											"end": 11068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10901,
											"end": 11078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9606,
											"end": 11085,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9462,
											"end": 11085,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9462,
											"end": 11085,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9462,
											"end": 11085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11091,
											"end": 11470,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 11091,
											"end": 11470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11262,
											"end": 11266,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11300,
											"end": 11303,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 11289,
											"end": 11298,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11285,
											"end": 11304,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11277,
											"end": 11304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11277,
											"end": 11304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11314,
											"end": 11463,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 11460,
											"end": 11461,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11449,
											"end": 11458,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11445,
											"end": 11462,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11436,
											"end": 11442,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11314,
											"end": 11463,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 11314,
											"end": 11463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11314,
											"end": 11463,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 11314,
											"end": 11463,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11091,
											"end": 11470,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11091,
											"end": 11470,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11091,
											"end": 11470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11091,
											"end": 11470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11091,
											"end": 11470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11572,
											"end": 13197,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 11572,
											"end": 13197,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11749,
											"end": 11755,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 11744,
											"end": 11747,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11740,
											"end": 11756,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11841,
											"end": 11845,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11834,
											"end": 11839,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11830,
											"end": 11846,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11824,
											"end": 11847,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11860,
											"end": 11923,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 11917,
											"end": 11921,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11912,
											"end": 11915,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11908,
											"end": 11922,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11894,
											"end": 11906,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11860,
											"end": 11923,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 11860,
											"end": 11923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11860,
											"end": 11923,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 11860,
											"end": 11923,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11766,
											"end": 11933,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12019,
											"end": 12023,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12012,
											"end": 12017,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12008,
											"end": 12024,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12002,
											"end": 12025,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12038,
											"end": 12101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 12095,
											"end": 12099,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12090,
											"end": 12093,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12086,
											"end": 12100,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12072,
											"end": 12084,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12038,
											"end": 12101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 12038,
											"end": 12101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12038,
											"end": 12101,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 12038,
											"end": 12101,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11943,
											"end": 12111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12192,
											"end": 12196,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12185,
											"end": 12190,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12181,
											"end": 12197,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12175,
											"end": 12198,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12211,
											"end": 12272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 12266,
											"end": 12270,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12261,
											"end": 12264,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12257,
											"end": 12271,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12243,
											"end": 12255,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12211,
											"end": 12272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 12211,
											"end": 12272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12211,
											"end": 12272,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 12211,
											"end": 12272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12121,
											"end": 12282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12369,
											"end": 12373,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 12362,
											"end": 12367,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12358,
											"end": 12374,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12352,
											"end": 12375,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12388,
											"end": 12451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 12445,
											"end": 12449,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 12440,
											"end": 12443,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12436,
											"end": 12450,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12422,
											"end": 12434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12388,
											"end": 12451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 12388,
											"end": 12451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12388,
											"end": 12451,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 12388,
											"end": 12451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12292,
											"end": 12461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12547,
											"end": 12551,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 12540,
											"end": 12545,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12536,
											"end": 12552,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12530,
											"end": 12553,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12566,
											"end": 12629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 12623,
											"end": 12627,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 12618,
											"end": 12621,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12614,
											"end": 12628,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12600,
											"end": 12612,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12566,
											"end": 12629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 12566,
											"end": 12629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12566,
											"end": 12629,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 12566,
											"end": 12629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12471,
											"end": 12639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12726,
											"end": 12730,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 12719,
											"end": 12724,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12715,
											"end": 12731,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12709,
											"end": 12732,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12745,
											"end": 12808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 12802,
											"end": 12806,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 12797,
											"end": 12800,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12793,
											"end": 12807,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12779,
											"end": 12791,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12745,
											"end": 12808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 12745,
											"end": 12808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12745,
											"end": 12808,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 12745,
											"end": 12808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12649,
											"end": 12818,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12911,
											"end": 12915,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 12904,
											"end": 12909,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12900,
											"end": 12916,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12894,
											"end": 12917,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12930,
											"end": 12993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 12987,
											"end": 12991,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 12982,
											"end": 12985,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12978,
											"end": 12992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12964,
											"end": 12976,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12930,
											"end": 12993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 12930,
											"end": 12993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12930,
											"end": 12993,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 12930,
											"end": 12993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12828,
											"end": 13003,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13098,
											"end": 13102,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 13091,
											"end": 13096,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13087,
											"end": 13103,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13081,
											"end": 13104,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 13117,
											"end": 13180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 13174,
											"end": 13178,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 13169,
											"end": 13172,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 13165,
											"end": 13179,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13151,
											"end": 13163,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13117,
											"end": 13180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 13117,
											"end": 13180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13117,
											"end": 13180,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 13117,
											"end": 13180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13013,
											"end": 13190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11718,
											"end": 13197,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11572,
											"end": 13197,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11572,
											"end": 13197,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11572,
											"end": 13197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13203,
											"end": 13586,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 13203,
											"end": 13586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13376,
											"end": 13380,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13414,
											"end": 13417,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 13403,
											"end": 13412,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13399,
											"end": 13418,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13391,
											"end": 13418,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13391,
											"end": 13418,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13428,
											"end": 13579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 13576,
											"end": 13577,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13565,
											"end": 13574,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13561,
											"end": 13578,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13552,
											"end": 13558,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13428,
											"end": 13579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 13428,
											"end": 13579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13428,
											"end": 13579,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 13428,
											"end": 13579,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13203,
											"end": 13586,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13203,
											"end": 13586,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13203,
											"end": 13586,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13203,
											"end": 13586,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13203,
											"end": 13586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13674,
											"end": 14841,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 13674,
											"end": 14841,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13809,
											"end": 13812,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13845,
											"end": 13849,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 13840,
											"end": 13843,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13836,
											"end": 13850,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13932,
											"end": 13936,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13925,
											"end": 13930,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13921,
											"end": 13937,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13915,
											"end": 13938,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 13985,
											"end": 13988,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13979,
											"end": 13983,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13975,
											"end": 13989,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13968,
											"end": 13972,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13963,
											"end": 13966,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 13959,
											"end": 13973,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13952,
											"end": 13990,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14011,
											"end": 14082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 14077,
											"end": 14081,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14063,
											"end": 14075,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14011,
											"end": 14082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 14011,
											"end": 14082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14011,
											"end": 14082,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 14011,
											"end": 14082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14003,
											"end": 14082,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14003,
											"end": 14082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13860,
											"end": 14093,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14180,
											"end": 14184,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14173,
											"end": 14178,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14169,
											"end": 14185,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14163,
											"end": 14186,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 14199,
											"end": 14262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 14256,
											"end": 14260,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14251,
											"end": 14254,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 14247,
											"end": 14261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14233,
											"end": 14245,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14199,
											"end": 14262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 14199,
											"end": 14262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14199,
											"end": 14262,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 14199,
											"end": 14262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14103,
											"end": 14272,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14358,
											"end": 14362,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14356,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14347,
											"end": 14363,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14341,
											"end": 14364,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 14377,
											"end": 14440,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 14434,
											"end": 14438,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 14429,
											"end": 14432,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 14425,
											"end": 14439,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14411,
											"end": 14423,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14377,
											"end": 14440,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 14377,
											"end": 14440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14377,
											"end": 14440,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 14377,
											"end": 14440,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14282,
											"end": 14450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14536,
											"end": 14540,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 14529,
											"end": 14534,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14525,
											"end": 14541,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14519,
											"end": 14542,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 14555,
											"end": 14618,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 14612,
											"end": 14616,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 14607,
											"end": 14610,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 14603,
											"end": 14617,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14589,
											"end": 14601,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14555,
											"end": 14618,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 14555,
											"end": 14618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14555,
											"end": 14618,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 14555,
											"end": 14618,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14460,
											"end": 14628,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14722,
											"end": 14726,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 14715,
											"end": 14720,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14711,
											"end": 14727,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14705,
											"end": 14728,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 14741,
											"end": 14804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 14798,
											"end": 14802,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 14793,
											"end": 14796,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 14789,
											"end": 14803,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14775,
											"end": 14787,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14741,
											"end": 14804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 14741,
											"end": 14804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14741,
											"end": 14804,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 14741,
											"end": 14804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14638,
											"end": 14814,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14831,
											"end": 14835,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14824,
											"end": 14835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14824,
											"end": 14835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13814,
											"end": 14841,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13674,
											"end": 14841,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13674,
											"end": 14841,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13674,
											"end": 14841,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13674,
											"end": 14841,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13674,
											"end": 14841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14847,
											"end": 15252,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 14847,
											"end": 15252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15006,
											"end": 15010,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15044,
											"end": 15046,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15033,
											"end": 15042,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15029,
											"end": 15047,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15021,
											"end": 15047,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15021,
											"end": 15047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15102,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15087,
											"end": 15091,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15083,
											"end": 15103,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15079,
											"end": 15080,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15068,
											"end": 15077,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15064,
											"end": 15081,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15057,
											"end": 15104,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15121,
											"end": 15245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 15240,
											"end": 15244,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15231,
											"end": 15237,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15121,
											"end": 15245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 15121,
											"end": 15245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15121,
											"end": 15245,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 15121,
											"end": 15245,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15113,
											"end": 15245,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15113,
											"end": 15245,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14847,
											"end": 15252,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14847,
											"end": 15252,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14847,
											"end": 15252,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14847,
											"end": 15252,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14847,
											"end": 15252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15258,
											"end": 15700,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 15258,
											"end": 15700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15407,
											"end": 15411,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15445,
											"end": 15447,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 15434,
											"end": 15443,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15430,
											"end": 15448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15422,
											"end": 15448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15422,
											"end": 15448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15458,
											"end": 15529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 15526,
											"end": 15527,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15515,
											"end": 15524,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15511,
											"end": 15528,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15502,
											"end": 15508,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 15458,
											"end": 15529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 15458,
											"end": 15529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15458,
											"end": 15529,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 15458,
											"end": 15529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15539,
											"end": 15611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 15607,
											"end": 15609,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15596,
											"end": 15605,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15592,
											"end": 15610,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15583,
											"end": 15589,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15539,
											"end": 15611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 15539,
											"end": 15611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15539,
											"end": 15611,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 15539,
											"end": 15611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15621,
											"end": 15693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 15689,
											"end": 15691,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15678,
											"end": 15687,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15674,
											"end": 15692,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15665,
											"end": 15671,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15621,
											"end": 15693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 15621,
											"end": 15693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15621,
											"end": 15693,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 15621,
											"end": 15693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15258,
											"end": 15700,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 15258,
											"end": 15700,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 15258,
											"end": 15700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15258,
											"end": 15700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15258,
											"end": 15700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15258,
											"end": 15700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15258,
											"end": 15700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15706,
											"end": 15853,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 15706,
											"end": 15853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15807,
											"end": 15818,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15844,
											"end": 15847,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15829,
											"end": 15847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15829,
											"end": 15847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15706,
											"end": 15853,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 15706,
											"end": 15853,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15706,
											"end": 15853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15706,
											"end": 15853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15706,
											"end": 15853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15859,
											"end": 16245,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 15859,
											"end": 16245,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15963,
											"end": 15966,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15991,
											"end": 16029,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 16023,
											"end": 16028,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15991,
											"end": 16029,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 15991,
											"end": 16029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15991,
											"end": 16029,
											"name": "tag",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 15991,
											"end": 16029,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16045,
											"end": 16133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 16126,
											"end": 16132,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16121,
											"end": 16124,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 16045,
											"end": 16133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 16045,
											"end": 16133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16045,
											"end": 16133,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 16045,
											"end": 16133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16038,
											"end": 16133,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 16038,
											"end": 16133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16142,
											"end": 16207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 16200,
											"end": 16206,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16195,
											"end": 16198,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 16188,
											"end": 16192,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16181,
											"end": 16186,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 16177,
											"end": 16193,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16142,
											"end": 16207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 16142,
											"end": 16207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16142,
											"end": 16207,
											"name": "tag",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 16142,
											"end": 16207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16232,
											"end": 16238,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16227,
											"end": 16230,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 16223,
											"end": 16239,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16216,
											"end": 16239,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16216,
											"end": 16239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15967,
											"end": 16245,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15859,
											"end": 16245,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 15859,
											"end": 16245,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15859,
											"end": 16245,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15859,
											"end": 16245,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15859,
											"end": 16245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16251,
											"end": 16522,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 16251,
											"end": 16522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16381,
											"end": 16384,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16403,
											"end": 16496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 16492,
											"end": 16495,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16483,
											"end": 16489,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 16403,
											"end": 16496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 16403,
											"end": 16496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16403,
											"end": 16496,
											"name": "tag",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 16403,
											"end": 16496,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16396,
											"end": 16496,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16396,
											"end": 16496,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16513,
											"end": 16516,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16506,
											"end": 16516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16506,
											"end": 16516,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16251,
											"end": 16522,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 16251,
											"end": 16522,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16251,
											"end": 16522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16251,
											"end": 16522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16251,
											"end": 16522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16528,
											"end": 16618,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 16528,
											"end": 16618,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16562,
											"end": 16569,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16605,
											"end": 16610,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16598,
											"end": 16611,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16591,
											"end": 16612,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16580,
											"end": 16612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16580,
											"end": 16612,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16528,
											"end": 16618,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16528,
											"end": 16618,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16528,
											"end": 16618,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16528,
											"end": 16618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16624,
											"end": 16740,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 16624,
											"end": 16740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16694,
											"end": 16715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 16709,
											"end": 16714,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16694,
											"end": 16715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 16694,
											"end": 16715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16694,
											"end": 16715,
											"name": "tag",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 16694,
											"end": 16715,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16687,
											"end": 16692,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16684,
											"end": 16716,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 16674,
											"end": 16734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 16674,
											"end": 16734,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16730,
											"end": 16731,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16727,
											"end": 16728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16720,
											"end": 16732,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16674,
											"end": 16734,
											"name": "tag",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 16674,
											"end": 16734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16624,
											"end": 16740,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16624,
											"end": 16740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16746,
											"end": 16883,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 16746,
											"end": 16883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16800,
											"end": 16805,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16831,
											"end": 16837,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16825,
											"end": 16838,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16816,
											"end": 16838,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16816,
											"end": 16838,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16847,
											"end": 16877,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 16871,
											"end": 16876,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16847,
											"end": 16877,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 16847,
											"end": 16877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16847,
											"end": 16877,
											"name": "tag",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 16847,
											"end": 16877,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16746,
											"end": 16883,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 16746,
											"end": 16883,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16746,
											"end": 16883,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16746,
											"end": 16883,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16746,
											"end": 16883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16889,
											"end": 17234,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 16889,
											"end": 17234,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16956,
											"end": 16962,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17005,
											"end": 17007,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16993,
											"end": 17002,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16984,
											"end": 16991,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 16980,
											"end": 17003,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16976,
											"end": 17008,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 16973,
											"end": 17092,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16973,
											"end": 17092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 16973,
											"end": 17092,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17011,
											"end": 17090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 17011,
											"end": 17090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 17011,
											"end": 17090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17011,
											"end": 17090,
											"name": "tag",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 17011,
											"end": 17090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16973,
											"end": 17092,
											"name": "tag",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 16973,
											"end": 17092,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17131,
											"end": 17132,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17156,
											"end": 17217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 17209,
											"end": 17216,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 17200,
											"end": 17206,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17189,
											"end": 17198,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17185,
											"end": 17207,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17156,
											"end": 17217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 17156,
											"end": 17217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17156,
											"end": 17217,
											"name": "tag",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 17156,
											"end": 17217,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17146,
											"end": 17217,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17146,
											"end": 17217,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17227,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16889,
											"end": 17234,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 16889,
											"end": 17234,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16889,
											"end": 17234,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16889,
											"end": 17234,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16889,
											"end": 17234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17240,
											"end": 17409,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 17240,
											"end": 17409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17324,
											"end": 17335,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17358,
											"end": 17364,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17353,
											"end": 17356,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17346,
											"end": 17365,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17398,
											"end": 17402,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17393,
											"end": 17396,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17389,
											"end": 17403,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17374,
											"end": 17403,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17374,
											"end": 17403,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17240,
											"end": 17409,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17240,
											"end": 17409,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17240,
											"end": 17409,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17240,
											"end": 17409,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17240,
											"end": 17409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17415,
											"end": 17568,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 17415,
											"end": 17568,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17555,
											"end": 17560,
											"name": "PUSH",
											"source": 5,
											"value": "5354460000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17551,
											"end": 17552,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17543,
											"end": 17549,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17539,
											"end": 17553,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17532,
											"end": 17561,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17415,
											"end": 17568,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17415,
											"end": 17568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17574,
											"end": 17939,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 17574,
											"end": 17939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17716,
											"end": 17719,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17737,
											"end": 17803,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 17801,
											"end": 17802,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 17796,
											"end": 17799,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17737,
											"end": 17803,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 17737,
											"end": 17803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17737,
											"end": 17803,
											"name": "tag",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 17737,
											"end": 17803,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17730,
											"end": 17803,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17730,
											"end": 17803,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17812,
											"end": 17905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 17901,
											"end": 17904,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17812,
											"end": 17905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 17812,
											"end": 17905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17812,
											"end": 17905,
											"name": "tag",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 17812,
											"end": 17905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17930,
											"end": 17932,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17925,
											"end": 17928,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17921,
											"end": 17933,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17914,
											"end": 17933,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17914,
											"end": 17933,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17574,
											"end": 17939,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17574,
											"end": 17939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17574,
											"end": 17939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17574,
											"end": 17939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17945,
											"end": 18364,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 17945,
											"end": 18364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18111,
											"end": 18115,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18149,
											"end": 18151,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 18138,
											"end": 18147,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18134,
											"end": 18152,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18126,
											"end": 18152,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18126,
											"end": 18152,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18198,
											"end": 18207,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18192,
											"end": 18196,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18188,
											"end": 18208,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 18184,
											"end": 18185,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18173,
											"end": 18182,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 18169,
											"end": 18186,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18162,
											"end": 18209,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 18226,
											"end": 18357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 18352,
											"end": 18356,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18226,
											"end": 18357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 18226,
											"end": 18357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 18226,
											"end": 18357,
											"name": "tag",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 18226,
											"end": 18357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18218,
											"end": 18357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18218,
											"end": 18357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17945,
											"end": 18364,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17945,
											"end": 18364,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17945,
											"end": 18364,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17945,
											"end": 18364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 18370,
											"end": 18702,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 18370,
											"end": 18702,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18491,
											"end": 18495,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18529,
											"end": 18531,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 18518,
											"end": 18527,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18514,
											"end": 18532,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18506,
											"end": 18532,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18506,
											"end": 18532,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18542,
											"end": 18613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 18610,
											"end": 18611,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18599,
											"end": 18608,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 18595,
											"end": 18612,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18586,
											"end": 18592,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 18542,
											"end": 18613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 18542,
											"end": 18613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 18542,
											"end": 18613,
											"name": "tag",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 18542,
											"end": 18613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18623,
											"end": 18695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 18691,
											"end": 18693,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 18680,
											"end": 18689,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 18676,
											"end": 18694,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18667,
											"end": 18673,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 18623,
											"end": 18695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 18623,
											"end": 18695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 18623,
											"end": 18695,
											"name": "tag",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 18623,
											"end": 18695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18370,
											"end": 18702,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 18370,
											"end": 18702,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 18370,
											"end": 18702,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18370,
											"end": 18702,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18370,
											"end": 18702,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18370,
											"end": 18702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 18708,
											"end": 18860,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 18708,
											"end": 18860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18848,
											"end": 18852,
											"name": "PUSH",
											"source": 5,
											"value": "5341000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18844,
											"end": 18845,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18836,
											"end": 18842,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18832,
											"end": 18846,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18825,
											"end": 18853,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 18708,
											"end": 18860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18708,
											"end": 18860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 18866,
											"end": 19231,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 18866,
											"end": 19231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19008,
											"end": 19011,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 19029,
											"end": 19095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 19093,
											"end": 19094,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 19088,
											"end": 19091,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 19029,
											"end": 19095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 19029,
											"end": 19095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 19029,
											"end": 19095,
											"name": "tag",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 19029,
											"end": 19095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19022,
											"end": 19095,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 19022,
											"end": 19095,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 19104,
											"end": 19197,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 19193,
											"end": 19196,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 19104,
											"end": 19197,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 19104,
											"end": 19197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 19104,
											"end": 19197,
											"name": "tag",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 19104,
											"end": 19197,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19222,
											"end": 19224,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 19217,
											"end": 19220,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 19213,
											"end": 19225,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 19206,
											"end": 19225,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19206,
											"end": 19225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18866,
											"end": 19231,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 18866,
											"end": 19231,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18866,
											"end": 19231,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18866,
											"end": 19231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 19237,
											"end": 19656,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 19237,
											"end": 19656,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19403,
											"end": 19407,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 19441,
											"end": 19443,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 19430,
											"end": 19439,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 19426,
											"end": 19444,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 19418,
											"end": 19444,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19418,
											"end": 19444,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 19490,
											"end": 19499,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 19484,
											"end": 19488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 19480,
											"end": 19500,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 19476,
											"end": 19477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 19465,
											"end": 19474,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 19461,
											"end": 19478,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 19454,
											"end": 19501,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 19518,
											"end": 19649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 19644,
											"end": 19648,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 19518,
											"end": 19649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 19518,
											"end": 19649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 19518,
											"end": 19649,
											"name": "tag",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 19518,
											"end": 19649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19510,
											"end": 19649,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19510,
											"end": 19649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 19237,
											"end": 19656,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 19237,
											"end": 19656,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19237,
											"end": 19656,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 19237,
											"end": 19656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 19662,
											"end": 19814,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 19662,
											"end": 19814,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19802,
											"end": 19806,
											"name": "PUSH",
											"source": 5,
											"value": "5354000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19798,
											"end": 19799,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 19790,
											"end": 19796,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 19786,
											"end": 19800,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 19779,
											"end": 19807,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 19662,
											"end": 19814,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 19662,
											"end": 19814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 19820,
											"end": 20185,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 19820,
											"end": 20185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19962,
											"end": 19965,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 19983,
											"end": 20049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 20047,
											"end": 20048,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 20042,
											"end": 20045,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 19983,
											"end": 20049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 19983,
											"end": 20049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 19983,
											"end": 20049,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 19983,
											"end": 20049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19976,
											"end": 20049,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 19976,
											"end": 20049,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20058,
											"end": 20151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 20147,
											"end": 20150,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 20058,
											"end": 20151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 20058,
											"end": 20151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 20058,
											"end": 20151,
											"name": "tag",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 20058,
											"end": 20151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20176,
											"end": 20178,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 20171,
											"end": 20174,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 20167,
											"end": 20179,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 20160,
											"end": 20179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20160,
											"end": 20179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 19820,
											"end": 20185,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 19820,
											"end": 20185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19820,
											"end": 20185,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 19820,
											"end": 20185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 20191,
											"end": 20610,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 20191,
											"end": 20610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20357,
											"end": 20361,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 20395,
											"end": 20397,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 20384,
											"end": 20393,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 20380,
											"end": 20398,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 20372,
											"end": 20398,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20372,
											"end": 20398,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20444,
											"end": 20453,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 20438,
											"end": 20442,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 20434,
											"end": 20454,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 20430,
											"end": 20431,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 20419,
											"end": 20428,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 20415,
											"end": 20432,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 20408,
											"end": 20455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 20472,
											"end": 20603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 20598,
											"end": 20602,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 20472,
											"end": 20603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 20472,
											"end": 20603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 20472,
											"end": 20603,
											"name": "tag",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 20472,
											"end": 20603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20464,
											"end": 20603,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20464,
											"end": 20603,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20191,
											"end": 20610,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 20191,
											"end": 20610,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20191,
											"end": 20610,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20191,
											"end": 20610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/SwapUniswap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DAI()": "e0bab4c4",
							"USDC()": "89a30271",
							"USDT()": "c54e44eb",
							"WETH9()": "4aa4a4fc",
							"poolFee()": "089fe6aa",
							"swapExactInputMultihop(uint256)": "edd83557",
							"swapExactInputSingle(uint256)": "73bd43ad",
							"swapExactOutputMultihop(uint256,uint256)": "3b85cf6a",
							"swapExactOutputSingle(uint256,uint256)": "c4b69a18",
							"swapRouter()": "c31c9c07"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"_swapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dai\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swapExactInputMultihop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swapExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"name\":\"swapExactOutputMultihop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"name\":\"swapExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"swapExactInputMultihop(uint256)\":{\"details\":\"The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\",\"params\":{\"amountIn\":\"The amount of DAI to be swapped.\"},\"returns\":{\"amountOut\":\"The amount of WETH9 received after the swap.\"}},\"swapExactInputSingle(uint256)\":{\"details\":\"The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\",\"params\":{\"amountIn\":\"The exact amount of DAI that will be swapped for WETH9.\"},\"returns\":{\"amountOut\":\"The amount of WETH9 received.\"}},\"swapExactOutputMultihop(uint256,uint256)\":{\"details\":\"The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable, the calling address will need to approve for a slightly higher amount, anticipating some variance.\",\"params\":{\"amountInMaximum\":\"The maximum amount of DAI willing to be swapped for the specified amountOut of WETH9.\",\"amountOut\":\"The desired amount of WETH9.\"},\"returns\":{\"amountIn\":\"The amountIn of DAI actually spent to receive the desired amountOut.\"}},\"swapExactOutputSingle(uint256,uint256)\":{\"details\":\"The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable, the calling address will need to approve for a slightly higher amount, anticipating some variance.\",\"params\":{\"amountInMaximum\":\"The amount of DAI we are willing to spend to receive the specified amount of WETH9.\",\"amountOut\":\"The exact amount of WETH9 to receive from the swap.\"},\"returns\":{\"amountIn\":\"The amount of DAI actually spent in the swap.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"swapExactInputMultihop(uint256)\":{\"notice\":\"swapInputMultiplePools swaps a fixed amount of DAI for a maximum possible amount of WETH9 through an intermediary pool. For this example, we will swap DAI to USDC, then USDC to WETH9 to achieve our desired output.\"},\"swapExactInputSingle(uint256)\":{\"notice\":\"swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9 using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\"},\"swapExactOutputMultihop(uint256,uint256)\":{\"notice\":\"swapExactOutputMultihop swaps a minimum possible amount of DAI for a fixed amount of WETH through an intermediary pool. For this example, we want to swap DAI for WETH9 through a USDC pool but we specify the desired amountOut of WETH9. Notice how the path encoding is slightly different in for exact output swaps.\"},\"swapExactOutputSingle(uint256,uint256)\":{\"notice\":\"swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SwapUniswap.sol\":\"SwapUniswap\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"contracts/SwapUniswap.sol\":{\"keccak256\":\"0x7d1a40005b85c2ec7e92170f82c04f681f17f0a18193e6b720e3914ed2b39819\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b15a39aa2d3f75740e78a21efa902036b987bff559adc685f9aa2448e89a93cd\",\"dweb:/ipfs/QmbeHo7zEtftct98FXMzfEChiLVqkrYznUJrEGpWYWJxtp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"swapExactInputMultihop(uint256)": {
								"notice": "swapInputMultiplePools swaps a fixed amount of DAI for a maximum possible amount of WETH9 through an intermediary pool. For this example, we will swap DAI to USDC, then USDC to WETH9 to achieve our desired output."
							},
							"swapExactInputSingle(uint256)": {
								"notice": "swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9 using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router."
							},
							"swapExactOutputMultihop(uint256,uint256)": {
								"notice": "swapExactOutputMultihop swaps a minimum possible amount of DAI for a fixed amount of WETH through an intermediary pool. For this example, we want to swap DAI for WETH9 through a USDC pool but we specify the desired amountOut of WETH9. Notice how the path encoding is slightly different in for exact output swaps."
							},
							"swapExactOutputSingle(uint256,uint256)": {
								"notice": "swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 92,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:1",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 91,
							"linearizedBaseContracts": [
								91
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:1",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1197:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 82,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1226:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 84,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1255:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 86,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:1"
									},
									"scope": 91,
									"src": "1157:133:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 92,
							"src": "215:1077:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1248:1"
				},
				"id": 1
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							191
						],
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 192,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 93,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"id": 94,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:2"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 95,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 192,
							"sourceUnit": 92,
							"src": "91:83:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 97,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"305:22:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 91,
										"src": "305:22:2"
									},
									"id": 98,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:2"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 96,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:2",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 191,
							"linearizedBaseContracts": [
								191,
								91
							],
							"name": "ISwapRouter",
							"nameLocation": "290:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 115,
									"members": [
										{
											"constant": false,
											"id": 100,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "382:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "374:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 99,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "407:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "399:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 101,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 104,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "432:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "425:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 103,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 106,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "453:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "445:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 105,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 108,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "480:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "472:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 107,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "506:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "498:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 109,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 112,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "532:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "524:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 111,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 114,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "566:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "558:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 113,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "341:22:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "334:256:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:2",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "860:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "909:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "877:38:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 118,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 117,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"877:22:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 115,
														"src": "877:22:2"
													},
													"referencedDeclaration": 115,
													"src": "877:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:2"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "951:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "943:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:2"
									},
									"scope": 191,
									"src": "851:111:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 135,
									"members": [
										{
											"constant": false,
											"id": 126,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1008:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1002:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 125,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 128,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1030:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1022:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 127,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 130,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1057:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1049:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 129,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 132,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1083:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1075:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 131,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 134,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1109:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1101:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 133,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "975:16:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "968:164:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:2",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1425:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1462:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1436:32:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$135_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 138,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 137,
														"name": "ExactInputParams",
														"nameLocations": [
															"1436:16:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 135,
														"src": "1436:16:2"
													},
													"referencedDeclaration": 135,
													"src": "1436:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$135_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:2"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1504:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1496:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:2"
									},
									"scope": 191,
									"src": "1416:99:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 161,
									"members": [
										{
											"constant": false,
											"id": 146,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1570:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1562:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 145,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 148,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1595:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1587:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 147,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 150,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1620:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1613:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 149,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 152,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1641:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1633:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 151,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 154,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1668:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1660:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 153,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 156,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1694:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1686:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 155,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 158,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1721:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1713:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 157,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 160,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1754:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1746:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 159,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1528:23:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "1521:257:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:2",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2048:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2099:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2066:39:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 164,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 163,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2066:23:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 161,
														"src": "2066:23:2"
													},
													"referencedDeclaration": 161,
													"src": "2066:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:2"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2141:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2133:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:2"
									},
									"scope": 191,
									"src": "2039:112:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 181,
									"members": [
										{
											"constant": false,
											"id": 172,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2198:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2192:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 171,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 174,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2220:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2212:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 173,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 176,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2247:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2239:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 178,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2273:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2265:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 177,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 180,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2300:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2292:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 179,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2164:17:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "2157:165:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:2",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2626:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2665:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2638:33:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$181_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 183,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2638:17:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "2638:17:2"
													},
													"referencedDeclaration": 181,
													"src": "2638:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$181_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:2"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2707:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2699:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:2"
									},
									"scope": 191,
									"src": "2617:100:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 192,
							"src": "280:2439:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2675:2"
				},
				"id": 2
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"TransferHelper": [
							362
						]
					},
					"id": 363,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 193,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 194,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 78,
							"src": "71:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 362,
							"linearizedBaseContracts": [
								362
							],
							"name": "TransferHelper",
							"nameLocation": "137:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "690:229:3",
										"statements": [
											{
												"assignments": [
													207,
													209
												],
												"declarations": [
													{
														"constant": false,
														"id": 207,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "706:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 242,
														"src": "701:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 206,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "701:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 209,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "728:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 242,
														"src": "715:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 208,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "715:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 222,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 214,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "782:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "789:12:3",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "782:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
																		}
																	},
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "802:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "782:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 217,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "812:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 218,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "818:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 219,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "822:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 212,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "759:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "763:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "759:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "759:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 210,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "748:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "754:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "748:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "748:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "700:129:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 224,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "847:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 225,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 209,
																					"src": "859:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "864:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "859:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "874:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "859:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 231,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 209,
																					"src": "890:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 233,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "897:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 232,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "897:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 234,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "896:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 229,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "879:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 230,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "883:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "879:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "879:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "859:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 237,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "858:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "847:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535446",
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "906:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															},
															"value": "STF"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															}
														],
														"id": 223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "839:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "839:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "839:73:3"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "158:398:3",
										"text": "@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "570:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "604:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "596:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "627:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "619:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "649:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "641:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "669:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "661:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:94:3"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "690:0:3"
									},
									"scope": 362,
									"src": "561:358:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "1314:206:3",
										"statements": [
											{
												"assignments": [
													254,
													256
												],
												"declarations": [
													{
														"constant": false,
														"id": 254,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1330:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "1325:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 253,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1325:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 256,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1352:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "1339:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 255,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1339:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 268,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 261,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "1394:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1401:8:3",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "1394:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1410:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1394:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 264,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 248,
																	"src": "1420:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 265,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "1424:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 259,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1371:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1375:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1371:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1371:59:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 257,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "1360:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1366:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1360:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1324:107:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 270,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "1449:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 271,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 256,
																					"src": "1461:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1466:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1461:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 273,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1476:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1461:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 277,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 256,
																					"src": "1492:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 279,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1499:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 278,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1499:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 280,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1498:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 275,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1481:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1485:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1481:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1481:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1461:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 283,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1460:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1449:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5354",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1508:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															},
															"value": "ST"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1441:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1441:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "1441:72:3"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "925:281:3",
										"text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
									},
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1220:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1250:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1242:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1273:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1265:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1293:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1285:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:72:3"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1314:0:3"
									},
									"scope": 362,
									"src": "1211:309:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "1975:205:3",
										"statements": [
											{
												"assignments": [
													300,
													302
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1991:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "1986:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 299,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1986:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "2013:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "2000:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 301,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2000:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 314,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 307,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "2055:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2062:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2055:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.approve(address,uint256) returns (bool)"
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2070:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2055:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 310,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "2080:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 311,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "2084:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 305,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2032:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2036:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2032:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2032:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 303,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "2021:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2027:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "2021:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2021:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1985:106:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 316,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "2109:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 317,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "2121:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2126:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2121:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2136:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2121:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 323,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "2152:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 325,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2159:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 324,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "2159:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 326,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2158:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 321,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2141:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2145:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "2141:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2141:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2121:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 329,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2120:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2109:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5341",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2168:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															},
															"value": "SA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															}
														],
														"id": 315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2101:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2101:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "2101:72:3"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "1526:342:3",
										"text": "@notice Approves the stipulated contract to spend the given allowance in the given token\n @dev Errors with 'SA' if transfer fails\n @param token The contract address of the token to be approved\n @param to The target of the approval\n @param value The amount of the given token the target will be allowed to spend"
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1882:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1903:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1934:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1926:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1954:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1946:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:72:3"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1975:0:3"
									},
									"scope": 362,
									"src": "1873:307:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "2431:104:3",
										"statements": [
											{
												"assignments": [
													344,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2447:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "2442:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 343,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2442:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 354,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2492:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "2482:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 349,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2486:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2482:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 345,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "2460:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2463:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2460:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 347,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "2475:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2460:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2441:54:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 356,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2513:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535445",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2522:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															},
															"value": "STE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															}
														],
														"id": 355,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2505:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "2505:23:3"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "2186:179:3",
										"text": "@notice Transfers ETH to the recipient address\n @dev Fails with `STE`\n @param to The destination of the transfer\n @param value The value to be transferred"
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "2379:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2403:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2395:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2415:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2407:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:27:3"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2431:0:3"
									},
									"scope": 362,
									"src": "2370:165:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 363,
							"src": "129:2408:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2493:3"
				},
				"id": 3
			},
			"contracts/SwapUniswap.sol": {
				"ast": {
					"absolutePath": "contracts/SwapUniswap.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"ISwapRouter": [
							191
						],
						"IUniswapV3SwapCallback": [
							91
						],
						"SwapUniswap": [
							721
						],
						"TransferHelper": [
							362
						]
					},
					"id": 722,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:4"
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"id": 365,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 722,
							"sourceUnit": 363,
							"src": "61:70:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 366,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 722,
							"sourceUnit": 192,
							"src": "133:68:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SwapUniswap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 721,
							"linearizedBaseContracts": [
								721
							],
							"name": "SwapUniswap",
							"nameLocation": "214:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 369,
									"mutability": "immutable",
									"name": "swapRouter",
									"nameLocation": "262:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 721,
									"src": "233:39:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISwapRouter_$191",
										"typeString": "contract ISwapRouter"
									},
									"typeName": {
										"id": 368,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 367,
											"name": "ISwapRouter",
											"nameLocations": [
												"233:11:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 191,
											"src": "233:11:4"
										},
										"referencedDeclaration": 191,
										"src": "233:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$191",
											"typeString": "contract ISwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "SwapUniswap.StableType",
									"id": 373,
									"members": [
										{
											"id": 370,
											"name": "DAI",
											"nameLocation": "308:3:4",
											"nodeType": "EnumValue",
											"src": "308:3:4"
										},
										{
											"id": 371,
											"name": "USDT",
											"nameLocation": "322:4:4",
											"nodeType": "EnumValue",
											"src": "322:4:4"
										},
										{
											"id": 372,
											"name": "USDC",
											"nameLocation": "337:4:4",
											"nodeType": "EnumValue",
											"src": "337:4:4"
										}
									],
									"name": "StableType",
									"nameLocation": "286:10:4",
									"nodeType": "EnumDefinition",
									"src": "281:67:4"
								},
								{
									"constant": false,
									"functionSelector": "e0bab4c4",
									"id": 375,
									"mutability": "immutable",
									"name": "DAI",
									"nameLocation": "381:3:4",
									"nodeType": "VariableDeclaration",
									"scope": 721,
									"src": "356:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 374,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "356:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c54e44eb",
									"id": 377,
									"mutability": "immutable",
									"name": "USDT",
									"nameLocation": "416:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 721,
									"src": "391:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 376,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "391:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "89a30271",
									"id": 379,
									"mutability": "immutable",
									"name": "USDC",
									"nameLocation": "452:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 721,
									"src": "427:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 378,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "427:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4aa4a4fc",
									"id": 382,
									"mutability": "constant",
									"name": "WETH9",
									"nameLocation": "487:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 721,
									"src": "463:74:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 380,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "463:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
										"id": 381,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "495:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "089fe6aa",
									"id": 385,
									"mutability": "constant",
									"name": "poolFee",
									"nameLocation": "569:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 721,
									"src": "546:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint24",
										"typeString": "uint24"
									},
									"typeName": {
										"id": 383,
										"name": "uint24",
										"nodeType": "ElementaryTypeName",
										"src": "546:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint24",
											"typeString": "uint24"
										}
									},
									"value": {
										"hexValue": "33303030",
										"id": 384,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "579:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3000_by_1",
											"typeString": "int_const 3000"
										},
										"value": "3000"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "716:110:4",
										"statements": [
											{
												"expression": {
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 397,
														"name": "swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "727:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$191",
															"typeString": "contract ISwapRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 398,
														"name": "_swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "740:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$191",
															"typeString": "contract ISwapRouter"
														}
													},
													"src": "727:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$191",
														"typeString": "contract ISwapRouter"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "727:24:4"
											},
											{
												"expression": {
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 401,
														"name": "DAI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "762:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 402,
														"name": "_dai",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "768:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "762:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "762:10:4"
											},
											{
												"expression": {
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 405,
														"name": "USDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "783:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 406,
														"name": "_usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "790:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "783:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "783:12:4"
											},
											{
												"expression": {
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 409,
														"name": "USDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "806:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 410,
														"name": "_usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "813:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "806:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "806:12:4"
											}
										]
									},
									"id": 414,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "_swapRouter",
												"nameLocation": "626:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "614:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISwapRouter_$191",
													"typeString": "contract ISwapRouter"
												},
												"typeName": {
													"id": 387,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 386,
														"name": "ISwapRouter",
														"nameLocations": [
															"614:11:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 191,
														"src": "614:11:4"
													},
													"referencedDeclaration": 191,
													"src": "614:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$191",
														"typeString": "contract ISwapRouter"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "_dai",
												"nameLocation": "656:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "648:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "_usdt",
												"nameLocation": "679:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "671:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "_usdc",
												"nameLocation": "703:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "695:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "603:112:4"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "716:0:4"
									},
									"scope": 721,
									"src": "592:234:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "1444:637:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 425,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "1501:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 426,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1519:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1523:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1519:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 430,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1552:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapUniswap_$721",
																		"typeString": "contract SwapUniswap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapUniswap_$721",
																		"typeString": "contract SwapUniswap"
																	}
																],
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1544:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 428,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1544:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1544:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 432,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "1572:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 422,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "1455:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1470:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 243,
														"src": "1455:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1455:136:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "1455:136:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 438,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "1631:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 441,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "1644:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1636:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 439,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1636:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "1657:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 435,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "1604:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1619:11:4",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 335,
														"src": "1604:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1604:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "1604:62:4"
											},
											{
												"assignments": [
													450
												],
												"declarations": [
													{
														"constant": false,
														"id": 450,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "1715:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 476,
														"src": "1679:42:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputParams_$135_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputParams"
														},
														"typeName": {
															"id": 449,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 448,
																"name": "ISwapRouter.ExactInputParams",
																"nameLocations": [
																	"1679:11:4",
																	"1691:16:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 135,
																"src": "1679:28:4"
															},
															"referencedDeclaration": 135,
															"src": "1679:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputParams_$135_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 468,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 455,
																	"name": "DAI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "1809:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 456,
																	"name": "poolFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "1814:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																{
																	"id": 457,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "1823:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 458,
																	"name": "poolFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "1829:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																{
																	"id": 459,
																	"name": "WETH9",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "1838:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 453,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1792:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1796:12:4",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1792:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1792:52:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"expression": {
																"id": 461,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1874:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1878:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1874:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 463,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1913:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1919:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1913:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 465,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "1957:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2002:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 451,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "1724:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$191_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1750:16:4",
														"memberName": "ExactInputParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 135,
														"src": "1724:42:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputParams_$135_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputParams storage pointer)"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1786:4:4",
														"1863:9:4",
														"1903:8:4",
														"1947:8:4",
														"1984:16:4"
													],
													"names": [
														"path",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum"
													],
													"nodeType": "FunctionCall",
													"src": "1724:295:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$135_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1679:340:4"
											},
											{
												"expression": {
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 469,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2032:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 472,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "2066:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputParams_$135_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputParams_$135_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputParams memory"
																}
															],
															"expression": {
																"id": 470,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "2044:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$191",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2055:10:4",
															"memberName": "exactInput",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 144,
															"src": "2044:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputParams_$135_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactInputParams memory) payable external returns (uint256)"
															}
														},
														"id": 473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2044:29:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2032:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "2032:41:4"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "834:501:4",
										"text": "@notice swapInputMultiplePools swaps a fixed amount of DAI for a maximum possible amount of WETH9 through an intermediary pool.\n For this example, we will swap DAI to USDC, then USDC to WETH9 to achieve our desired output.\n @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n @param amountIn The amount of DAI to be swapped.\n @return amountOut The amount of WETH9 received after the swap."
									},
									"functionSelector": "edd83557",
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactInputMultihop",
									"nameLocation": "1350:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1391:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "1383:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:34:4"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1433:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "1425:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1424:19:4"
									},
									"scope": 721,
									"src": "1341:740:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "3090:981:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 490,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "3147:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 491,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3165:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3169:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3165:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 495,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3198:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapUniswap_$721",
																		"typeString": "contract SwapUniswap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapUniswap_$721",
																		"typeString": "contract SwapUniswap"
																	}
																],
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3190:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 493,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3190:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3190:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "amountInMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3218:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 487,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3101:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 243,
														"src": "3101:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3101:143:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "3101:143:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 503,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "3282:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 506,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "3295:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3287:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 504,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3287:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3287:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "amountInMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3308:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 500,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3255:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3270:11:4",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 335,
														"src": "3255:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3255:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "3255:69:4"
											},
											{
												"assignments": [
													515
												],
												"declarations": [
													{
														"constant": false,
														"id": 515,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "3374:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 572,
														"src": "3337:43:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactOutputParams_$181_memory_ptr",
															"typeString": "struct ISwapRouter.ExactOutputParams"
														},
														"typeName": {
															"id": 514,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 513,
																"name": "ISwapRouter.ExactOutputParams",
																"nameLocations": [
																	"3337:11:4",
																	"3349:17:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 181,
																"src": "3337:29:4"
															},
															"referencedDeclaration": 181,
															"src": "3337:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactOutputParams_$181_storage_ptr",
																"typeString": "struct ISwapRouter.ExactOutputParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 533,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 520,
																	"name": "WETH9",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "3469:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 521,
																	"name": "poolFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "3476:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																{
																	"id": 522,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "3485:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 523,
																	"name": "poolFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "3491:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																{
																	"id": 524,
																	"name": "DAI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "3500:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 518,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3452:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3456:12:4",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "3452:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3452:52:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"expression": {
																"id": 526,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3534:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3538:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3534:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 528,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3573:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3579:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3573:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 530,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3618:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 531,
															"name": "amountInMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3663:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 516,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "3383:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$191_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3409:17:4",
														"memberName": "ExactOutputParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 181,
														"src": "3383:43:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactOutputParams_$181_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactOutputParams storage pointer)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"3446:4:4",
														"3523:9:4",
														"3563:8:4",
														"3607:9:4",
														"3646:15:4"
													],
													"names": [
														"path",
														"recipient",
														"deadline",
														"amountOut",
														"amountInMaximum"
													],
													"nodeType": "FunctionCall",
													"src": "3383:311:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$181_memory_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3337:357:4"
											},
											{
												"expression": {
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 534,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "3707:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 537,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "3741:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactOutputParams_$181_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactOutputParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactOutputParams_$181_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactOutputParams memory"
																}
															],
															"expression": {
																"id": 535,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "3718:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$191",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3729:11:4",
															"memberName": "exactOutput",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "3718:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactOutputParams_$181_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactOutputParams memory) payable external returns (uint256)"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3718:30:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3707:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "3707:41:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 541,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "3765:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 542,
														"name": "amountInMaximum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "3776:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3765:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "3761:303:4",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "3793:271:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 547,
																		"name": "DAI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 375,
																		"src": "3835:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 550,
																				"name": "swapRouter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 369,
																				"src": "3848:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ISwapRouter_$191",
																					"typeString": "contract ISwapRouter"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ISwapRouter_$191",
																					"typeString": "contract ISwapRouter"
																				}
																			],
																			"id": 549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3840:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 548,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3840:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3840:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3861:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 544,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "3808:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3823:11:4",
																	"memberName": "safeApprove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 335,
																	"src": "3808:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3808:55:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 554,
															"nodeType": "ExpressionStatement",
															"src": "3808:55:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 558,
																		"name": "DAI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 375,
																		"src": "3928:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 561,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3958:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SwapUniswap_$721",
																					"typeString": "contract SwapUniswap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SwapUniswap_$721",
																					"typeString": "contract SwapUniswap"
																				}
																			],
																			"id": 560,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3950:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 559,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3950:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3950:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 563,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3982:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3986:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3982:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 565,
																			"name": "amountInMaximum",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 482,
																			"src": "4011:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 566,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 485,
																			"src": "4029:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4011:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 555,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "3878:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3893:16:4",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 243,
																	"src": "3878:31:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256)"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3878:174:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 569,
															"nodeType": "ExpressionStatement",
															"src": "3878:174:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "2089:857:4",
										"text": "@notice swapExactOutputMultihop swaps a minimum possible amount of DAI for a fixed amount of WETH through an intermediary pool.\n For this example, we want to swap DAI for WETH9 through a USDC pool but we specify the desired amountOut of WETH9. Notice how the path encoding is slightly different in for exact output swaps.\n @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\n the calling address will need to approve for a slightly higher amount, anticipating some variance.\n @param amountOut The desired amount of WETH9.\n @param amountInMaximum The maximum amount of DAI willing to be swapped for the specified amountOut of WETH9.\n @return amountIn The amountIn of DAI actually spent to receive the desired amountOut."
									},
									"functionSelector": "3b85cf6a",
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactOutputMultihop",
									"nameLocation": "2961:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3003:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "2995:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2995:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "amountInMaximum",
												"nameLocation": "3031:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "3023:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2984:69:4"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3080:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "3072:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3072:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3071:18:4"
									},
									"scope": 721,
									"src": "2952:1119:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "4649:1178:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 584,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "4825:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 585,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4843:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4847:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4843:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 589,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4876:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapUniswap_$721",
																		"typeString": "contract SwapUniswap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapUniswap_$721",
																		"typeString": "contract SwapUniswap"
																	}
																],
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4868:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 587,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4868:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4868:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 591,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "4896:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 581,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "4779:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4794:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 243,
														"src": "4779:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4779:136:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "4779:136:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 597,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "5000:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 600,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "5013:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5005:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 598,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5005:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5005:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "5026:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 594,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "4973:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4988:11:4",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 335,
														"src": "4973:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4973:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "ExpressionStatement",
												"src": "4973:62:4"
											},
											{
												"assignments": [
													609
												],
												"declarations": [
													{
														"constant": false,
														"id": 609,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "5329:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 631,
														"src": "5287:48:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 608,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 607,
																"name": "ISwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"5287:11:4",
																	"5299:22:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 115,
																"src": "5287:34:4"
															},
															"referencedDeclaration": 115,
															"src": "5287:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 623,
												"initialValue": {
													"arguments": [
														{
															"id": 612,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "5415:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 613,
															"name": "WETH9",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "5447:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 614,
															"name": "poolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "5476:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"expression": {
																"id": 615,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5513:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5517:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5513:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 617,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5552:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5558:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5552:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 619,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "5596:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5641:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5680:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 610,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "5338:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$191_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5364:22:4",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 115,
														"src": "5338:48:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$115_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"5406:7:4",
														"5437:8:4",
														"5471:3:4",
														"5502:9:4",
														"5542:8:4",
														"5586:8:4",
														"5623:16:4",
														"5661:17:4"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "5338:359:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5287:410:4"
											},
											{
												"expression": {
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 624,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "5772:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 627,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "5812:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 625,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "5784:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$191",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5795:16:4",
															"memberName": "exactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "5784:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$115_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5784:35:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5772:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "5772:47:4"
											}
										]
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "4079:463:4",
										"text": "@notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\n using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\n @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n @param amountIn The exact amount of DAI that will be swapped for WETH9.\n @return amountOut The amount of WETH9 received."
									},
									"functionSelector": "73bd43ad",
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactInputSingle",
									"nameLocation": "4557:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "4596:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "4588:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4588:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4577:34:4"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "4638:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "4630:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4630:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4629:19:4"
									},
									"scope": 721,
									"src": "4548:1279:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "6599:1657:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 645,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "6723:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 646,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6741:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6745:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6741:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 650,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6774:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapUniswap_$721",
																		"typeString": "contract SwapUniswap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapUniswap_$721",
																		"typeString": "contract SwapUniswap"
																	}
																],
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6766:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 648,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6766:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6766:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 652,
															"name": "amountInMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "6794:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 642,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "6677:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6692:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 243,
														"src": "6677:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6677:143:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "6677:143:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 658,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "7077:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 661,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "7090:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7082:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 659,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7082:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7082:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 663,
															"name": "amountInMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "7103:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 655,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "7050:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7065:11:4",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 335,
														"src": "7050:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7050:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "7050:69:4"
											},
											{
												"assignments": [
													670
												],
												"declarations": [
													{
														"constant": false,
														"id": 670,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "7175:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 719,
														"src": "7132:49:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_memory_ptr",
															"typeString": "struct ISwapRouter.ExactOutputSingleParams"
														},
														"typeName": {
															"id": 669,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 668,
																"name": "ISwapRouter.ExactOutputSingleParams",
																"nameLocations": [
																	"7132:11:4",
																	"7144:23:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 161,
																"src": "7132:35:4"
															},
															"referencedDeclaration": 161,
															"src": "7132:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_storage_ptr",
																"typeString": "struct ISwapRouter.ExactOutputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 684,
												"initialValue": {
													"arguments": [
														{
															"id": 673,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "7262:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "WETH9",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "7294:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "poolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "7323:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"expression": {
																"id": 676,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7360:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7364:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7360:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 678,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "7399:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7405:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "7399:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 680,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "7444:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 681,
															"name": "amountInMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "7489:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7542:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 671,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "7184:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$191_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7210:23:4",
														"memberName": "ExactOutputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 161,
														"src": "7184:49:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactOutputSingleParams_$161_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactOutputSingleParams storage pointer)"
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"7253:7:4",
														"7284:8:4",
														"7318:3:4",
														"7349:9:4",
														"7389:8:4",
														"7433:9:4",
														"7472:15:4",
														"7523:17:4"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountOut",
														"amountInMaximum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "7184:375:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_memory_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7132:427:4"
											},
											{
												"expression": {
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 685,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "7675:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 688,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "7715:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
																}
															],
															"expression": {
																"id": 686,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "7686:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$191",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7697:17:4",
															"memberName": "exactOutputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 170,
															"src": "7686:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactOutputSingleParams_$161_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactOutputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7686:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7675:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "7675:47:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 692,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "7986:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 693,
														"name": "amountInMaximum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "7997:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7986:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 718,
												"nodeType": "IfStatement",
												"src": "7982:267:4",
												"trueBody": {
													"id": 717,
													"nodeType": "Block",
													"src": "8014:235:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 698,
																		"name": "DAI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 375,
																		"src": "8056:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 701,
																				"name": "swapRouter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 369,
																				"src": "8069:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ISwapRouter_$191",
																					"typeString": "contract ISwapRouter"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ISwapRouter_$191",
																					"typeString": "contract ISwapRouter"
																				}
																			],
																			"id": 700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8061:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 699,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8061:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8061:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8082:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 695,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "8029:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8044:11:4",
																	"memberName": "safeApprove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 335,
																	"src": "8029:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8029:55:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 705,
															"nodeType": "ExpressionStatement",
															"src": "8029:55:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 709,
																		"name": "DAI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 375,
																		"src": "8145:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 710,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8167:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8171:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8167:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 712,
																			"name": "amountInMaximum",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 637,
																			"src": "8196:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 713,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 640,
																			"src": "8214:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8196:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 706,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "8099:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8114:12:4",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 289,
																	"src": "8099:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8099:138:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 716,
															"nodeType": "ExpressionStatement",
															"src": "8099:138:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "5835:622:4",
										"text": "@notice swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\n @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\n the calling address will need to approve for a slightly higher amount, anticipating some variance.\n @param amountOut The exact amount of WETH9 to receive from the swap.\n @param amountInMaximum The amount of DAI we are willing to spend to receive the specified amount of WETH9.\n @return amountIn The amount of DAI actually spent in the swap."
									},
									"functionSelector": "c4b69a18",
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactOutputSingle",
									"nameLocation": "6472:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "6512:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "6504:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6504:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "amountInMaximum",
												"nameLocation": "6540:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "6532:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6532:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:69:4"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "6589:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "6581:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6581:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6580:18:4"
									},
									"scope": 721,
									"src": "6463:1793:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 722,
							"src": "205:8054:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:8228:4"
				},
				"id": 4
			}
		}
	}
}